{"version":3,"sources":["utils/HistoryTimespan.ts","utils/ItemHelper.ts","dataContracts/HistoryItem.ts","services/LocalDB.ts","components/ItemGraph.tsx","components/Price.tsx","utils/ItemField.ts","utils/ItemRarity.ts","utils/ItemType.ts","components/ItemComparisonSlot.tsx","dataContracts/ItemQuery.ts","components/RarityMultiSelect.tsx","components/TypeMultiSelect.tsx","components/ListSortingBar.tsx","dataContracts/HistoryItemQuery.ts","dataContracts/PricedItem.ts","environment.ts","services/ApiService.ts","pages/MyList.tsx","components/ItemSummarySlot.tsx","components/SortingBar.tsx","pages/GeneralSearch.tsx","open-id-config.ts","components/Header.tsx","components/AddItemListSlot.tsx","components/CustomLink.tsx","components/ItemListSlot.tsx","components/Sidebar.tsx","pages/error/NotFound.tsx","pages/error/NotAuthenticated.tsx","pages/error/NotAuthorized.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HistoryTimespan","ItemHelper","chatLink","encodeURIComponent","HistoryItem","id","name","icon","description","type","rarity","level","history","Id","ChatLink","Name","Icon","Description","Type","Rarity","Level","History","this","predicate","filter","HistoryItemFactory","item","parseInt","e","console","log","items","arr","forEach","itemResult","ToHistoryItem","push","historyItems","version","stores","open","catch","error","table","mapToClass","timespan","get","OneMonth","now","Date","OneHour","SixHours","TwelveHours","OneDay","ThreeDays","OneWeek","TwoWeeks","timeFromNow","setTime","getTime","setDate","getDate","filterHistory","price","time","getHistoryItem","add","update","newHistory","unshift","currentPrices","monthFromNow","Dexie","ItemGraph","props","dashboard","buyPriceChart","sellPriceChart","marginChart","buyVolumeChart","sellVolumeChart","state","createChart","bind","createOHLCChart","itemId","LocalDB","timeSpanInMs","firstPriceSnapshot","length","startingTime","buyPricesData","sellPricesData","actualBuyPricesData","actualSellPricesData","marginData","buyVolumeData","sellVolumeData","pricesIn15Mins","timeTracker","i","priceSnapshot","timeFromStart","margin","sellPrice","buyPrice","x","y","position","high","bought","low","bid","sold","offers","nextPriceSnapshot","undefined","minBuy","Number","POSITIVE_INFINITY","maxBuy","minSell","maxSell","j","firstSnapshot","lastSnapshot","buyDataPoint","sellDataPoint","lightningChart","Dashboard","theme","Themes","dark","numberOfColumns","numberOfRows","container","toString","columnIndex","rowIndex","columnSpan","rowSpan","createBaselineAreaChart","createAreaChart","ColorRGBA","title","invertCandleColors","data","priceData","options","chart","createChartXY","dateOrigin","getDefaultAxisX","setTickStrategy","AxisTickStrategies","DateTime","tickStrategy","setDateOrigin","setTitle","setAutoCursor","cursor","disposeTickMarkerY","setGridStrokeYStyle","emptyLine","setPadding","right","priceLegend","addLegendBox","LegendBoxBuilders","VerticalLegendBox","setPosition","setOrigin","UIOrigins","RightTop","priceAxisY","getDefaultAxisY","setScrollStrategy","AxisScrollStrategies","expansion","areaRangeFill","SolidFill","setColor","areaRangeStroke","SolidLine","setFillStyle","setThickness","areaRange","addAreaRangeSeries","yAxis","setName","setHighFillStyle","setLowFillStyle","setHighStrokeStyle","setLowStrokeStyle","setMaxPointCount","setMouseInteractions","setCursorEnabled","movingAverageStroke","movingAverage","addLineSeries","setStrokeStyle","pricesLineStroke","pricesLine","setCursorInterpolationEnabled","borderBlack","fillBrightRed","fillDimRed","fillBrightGreen","fillDimGreen","candles","addOHLCSeries","setFigureWidth","setPositiveStyle","candlestick","setBodyFillStyle","setBodyStrokeStyle","setNegativeStyle","priceNums","n","entries","setButtonOnFillStyle","getFillStyle","setButtonOnStrokeStyle","setOn","setResultTableFormatter","builder","series","segment","getOpen","close","getClose","addRow","getName","axisX","formatValue","getPosition","toPriceString","getHigh","getLow","ohlc","shift","priceSum","num","priceAverage","sqrDeviationSum","Math","pow","stdDeviation","sqrt","areaPoint","smaPoint","yBoundsPrice","min","getYMin","max","getYMax","range","setInterval","setViewNicely","topTitle","bottomTitle","topFill","bottomFill","volumeLegend","volumeAxisY","topAreaFill","r","g","b","topAreaStroke","topArea","addAreaSeries","AreaSeriesTypes","Positive","bottomAreaFill","bottomAreaStroke","bottomArea","Negative","toFixed","dataPoint","yTitle","baseline","lineAxisY","area","Bipolar","setPositiveFillStyle","setPositiveStrokeStyle","setNegativeFillStyle","setNegativeStrokeStyle","dispose","className","gold","floor","silver","copper","React","Component","Price","priceColor","isNegative","absPrice","abs","style","fontSize","src","alt","defaultProps","ItemField","ItemFieldSort","ItemRarity","ItemType","ItemComparisonSlot","dragTarget","createRef","amount","isOpen","isDragging","toggleOpenSlot","openSlot","closeSlot","onDragStart","onDragEnd","setState","event","stopPropagation","dataTransfer","setData","requestAnimationFrame","current","classList","remove","deleteItem","revenue","round","SellPrice","expenditure","BuyPrice","totalFees","netProfit","onClick","href","getWikiLink","target","rel","htmlFor","defaultValue","onChange","value","isNaN","Appeal","Margin","Sold","Bought","draggable","ref","top","left","height","ItemQuery","minLevel","maxLevel","minBuyPrice","maxBuyPrice","minSellPrice","maxSellPrice","sortBy","sortDirection","All","Descending","valueOf","RarityMultiSelect","toggleOpen","toggleRarity","checkRarity","otherRarity","newRarity","None","selectedText","isPowerOf2","tabIndex","width","zIndex","Object","keys","map","index","itemRarity","key","TypeMultiSelect","toggleType","checkType","otherType","newType","itemType","ListSortingBar","query","filteredItems","isFilterOpen","resetQueryValues","toggleFilter","onFilterOpen","onFilterClose","onFilter","onSearch","sortCompare","onNameChange","onTypeChange","onRarityChange","onMinLevelChange","onMaxLevelChange","onMinBuyPriceChange","onMaxBuyPriceChange","onMinSellPriceChange","onMaxSellPriceChange","onSort","onSortDirection","onSetTimespan","prevProps","toLowerCase","includes","sort","preventDefault","a","isSortAscending","Ascending","localeCompare","Buys","Sells","prevState","callback","isDataStale","onReload","children","onSubmit","padding","HistoryItemQuery","hasDetails","newest","PricedItemFactory","parseFloat","appeal","ToPricedItem","environment","urls","authority","host","gw2calculator","accessToken","pageNumber","url","URLSearchParams","toObject","ApiService","Get","response","json","result","ok","ToPricedItems","queries","Post","ToHistoryItems","itemLists","itemList","itemIds","idNum","listId","fetch","method","mode","cache","headers","body","JSON","stringify","MyList","slotRefs","user","isLoading","updateId","updateItems","setTimespan","onOpenAll","onCloseAll","GetItemList","access_token","ids","historyItemQueries","getNewestTime","GetHistoryItems","pricedItems","itemQuery","deleteOldPrices","setHistoryItem","setHistoryItemPrices","dbItem","pricedItem","historyToPriced","setTimeout","DeleteListItem","tempItems","itemIndex","findIndex","splice","refs","Consumer","oidcUser","sortedItems","noScrollX","newestPrice","sumSold","sumBought","avgSold","avgBought","ItemSummarySlot","isAdding","onAdd","SortingBar","pendingQuery","currentQuery","currentPage","totalPages","onToPage","onFirstPage","onLastPage","onNextPage","onPrevPage","onLoadingStart","onLoadingStop","GetItemPageCount","GetItems","nameOnlyQuery","pageNums","disabled","GeneralSearch","configuration","client_id","response_type","scope","automaticSilentRenew","loadUserInfo","redirect_uri","post_logout_redirect_uri","silent_redirect_uri","Header","boxShadow","to","profile","logout","login","AddItemListSlot","onAddItemListStart","onAddItemListStop","onAddItemList","paddingTop","paddingBottom","CustomLink","useHistory","rest","ItemListSlot","isMouseHover","isDragHover","isEditing","newName","onMouseEnter","onMouseLeave","onDragEnter","onDragOver","onDragLeave","onDrop","onEditNameStart","onEditNameStop","onEditName","onDeleteList","getData","Sidebar","refreshItemLists","onAddItem","onAddList","GetItemLists","AddListItem","UpdateListName","list","CreateList","DeleteList","Fragment","NotFound","NotAuthenticated","NotAuthorized","MyListComponent","useParams","library","fas","App","notAuthenticated","notAuthorized","callbackComponentOverride","authenticating","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.28f60948.chunk.js","sourcesContent":["export enum HistoryTimespan {\r\n    OneHour,\r\n    SixHours,\r\n    TwelveHours,\r\n    OneDay,\r\n    ThreeDays,\r\n    OneWeek,\r\n    TwoWeeks,\r\n    OneMonth\r\n}","export default class ItemHelper {\r\n    static getWikiLink(chatLink: string): string {\r\n        return `https://wiki.guildwars2.com/index.php?title=Special%3ASearch&search=${encodeURIComponent(chatLink)}&go=Go`;\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { ItemPriceSnapshot } from \"./ItemPriceSnapshot\";\r\n\r\nexport class HistoryItemPrices {\r\n    public readonly Id: number;\r\n    public readonly History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.History = history;\r\n    }\r\n}\r\n\r\nexport class HistoryItem {\r\n    public readonly Id: number;\r\n    public readonly ChatLink: string;\r\n    public readonly Name: string;\r\n    public readonly Icon: string;\r\n    public readonly Description: string;\r\n    public readonly Type: ItemType;\r\n    public readonly Rarity: ItemRarity;\r\n    public readonly Level: number;\r\n    public History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, chatLink: string, name: string, icon: string, description: string, type: ItemType, rarity: ItemRarity, level: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.ChatLink = chatLink;\r\n        this.Name = name;\r\n        this.Icon = icon;\r\n        this.Description = description;\r\n        this.Type = type;\r\n        this.Rarity = rarity;\r\n        this.Level = level;\r\n        this.History = history;\r\n    }\r\n\r\n    filterHistory(predicate: (value: ItemPriceSnapshot, index: number, array: ItemPriceSnapshot[]) => unknown) {\r\n        this.History = this.History.filter(predicate);\r\n    }\r\n}\r\n\r\nexport class HistoryItemFactory {\r\n    static ToHistoryItem(item: any): HistoryItem | null {\r\n        try {\r\n            const result = new HistoryItem (\r\n                item.id, \r\n                item.chatLink,\r\n                item.name, \r\n                item.icon, \r\n                item.description,\r\n                parseInt(item.type),\r\n                parseInt(item.rarity),\r\n                item.level,\r\n                item.history\r\n            );\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToHistoryItems(items: any): HistoryItem[] {\r\n        const arr: HistoryItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = HistoryItemFactory.ToHistoryItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import Dexie from \"dexie\";\r\nimport { HistoryItem, HistoryItemPrices } from \"../dataContracts/HistoryItem\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nclass LocalDB extends Dexie {\r\n    private historyItems: Dexie.Table<HistoryItem, number>;\r\n\r\n    constructor() {\r\n        super(\"GW2History\");\r\n\r\n        this.version(1).stores({\r\n            historyItems: \"Id\"\r\n        });\r\n        this.open().catch(error => {\r\n            console.error(`Opening the db '${this.name}' failed: ${error}`);\r\n        });\r\n\r\n        this.historyItems = this.table(\"historyItems\");\r\n        this.historyItems.mapToClass(HistoryItem);\r\n    }\r\n\r\n    async getHistoryItem(id: number, timespan: HistoryTimespan): Promise<HistoryItem | null> {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return null;\r\n        \r\n        if (timespan === HistoryTimespan.OneMonth)\r\n            return item;\r\n\r\n        const now = new Date();\r\n        let timeFromNow: number;\r\n        switch (timespan) {\r\n        case HistoryTimespan.OneHour:\r\n            timeFromNow = now.setTime(now.getTime() - (1 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.SixHours:\r\n            timeFromNow = now.setTime(now.getTime() - (6 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.TwelveHours:\r\n            timeFromNow = now.setTime(now.getTime() - (12 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.OneDay:\r\n            timeFromNow = now.setDate(now.getDate() - 1);\r\n            break;\r\n        case HistoryTimespan.ThreeDays:\r\n            timeFromNow = now.setDate(now.getDate() - 3);\r\n            break;\r\n        case HistoryTimespan.OneWeek:\r\n            timeFromNow = now.setDate(now.getDate() - 7);\r\n            break;\r\n        case HistoryTimespan.TwoWeeks:\r\n            timeFromNow = now.setDate(now.getDate() - 14);\r\n            break;\r\n        default:\r\n            timeFromNow = now.setDate(now.getDate() - 30);\r\n            break;\r\n        }\r\n        \r\n        item.filterHistory(price => price.time >= timeFromNow);\r\n        return item;\r\n    }\r\n\r\n    async hasDetails(id: number): Promise<boolean> {\r\n        const item = await this.historyItems.get(id);\r\n        if (item && item.Name)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    async getNewestTime(id: number): Promise<number> {\r\n        const item = await this.getHistoryItem(id, HistoryTimespan.OneMonth);\r\n        if (!item || !item.History)\r\n            return 0;\r\n        \r\n        return item.History[0].time;\r\n    }\r\n\r\n    async setHistoryItem(item: HistoryItem) {\r\n        if (!item)\r\n            return;\r\n            \r\n        const dbItem = await this.historyItems.get(item.Id);\r\n        if (!dbItem)\r\n            await this.historyItems.add(item, item.Id);\r\n\r\n        await this.historyItems.update(item.Id, {\r\n            ChatLink: item.ChatLink,\r\n            Name: item.Name,\r\n            Icon: item.Icon,\r\n            Description: item.Description,\r\n            Type: item.Type,\r\n            Rarity: item.Rarity,\r\n            Level: item.Level,\r\n            History: item.History\r\n        });\r\n    }\r\n\r\n    async setHistoryItemPrices(id: number, newHistory: ItemPriceSnapshot[]) {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return;\r\n\r\n        // Else, update the history of the current item to include the new history\r\n        // Unshift (push to front) here because history is sorted by time descending,\r\n        // and the higher the time value, the newer it is.\r\n        item.History.unshift(...newHistory);\r\n        await this.historyItems.update(id, {History: item.History});\r\n    }\r\n\r\n    async deleteOldPrices(id: number) {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return;\r\n        \r\n        const currentPrices: ItemPriceSnapshot[] = [];\r\n        const now: Date = new Date();\r\n        const monthFromNow: number = now.setDate(now.getDate() - 30);\r\n        item.History.forEach(price => {\r\n            if (price.time >= monthFromNow)\r\n                currentPrices.push(price);\r\n        });\r\n\r\n        await this.historyItems.update(id, {History: currentPrices});\r\n    }\r\n}\r\n\r\nexport default new LocalDB();","import { AreaPoint, AreaSeriesTypes, AutoCursorModes, AxisScrollStrategies, AxisTickStrategies, ChartOptions, ChartXY, Color, ColorRGBA, Dashboard, emptyLine, InternalBackground, LegendBox, LegendBoxBuilders, LegendBoxEntry, lightningChart, LineStyle, Point, PointableBackground, PointMarker, SolidFill, SolidLine, Themes, UIBackground, UIElement, UIOrigins, UIPartWithBackground, UITextBox, XOHLC } from \"@arction/lcjs\";\r\nimport { createOHLCGenerator } from \"@arction/xydata\";\r\nimport React from \"react\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nexport type ItemGraphProps = {\r\n    itemId: number;\r\n}\r\n\r\nexport type ItemGraphState = {\r\n\r\n}\r\n\r\nexport default class ItemGraph extends React.Component<ItemGraphProps, ItemGraphState> {\r\n    private dashboard: Dashboard | undefined;\r\n    private buyPriceChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private sellPriceChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private marginChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private buyVolumeChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private sellVolumeChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n\r\n    constructor(props: ItemGraphProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.createChart = this.createChart.bind(this);\r\n        this.createOHLCChart = this.createOHLCChart.bind(this);\r\n    }\r\n\r\n    async createChart() {\r\n        const { itemId } = this.props;\r\n        // Get the history item from the local db here\r\n        /* */\r\n        const item = await LocalDB.getHistoryItem(itemId, HistoryTimespan.OneMonth);\r\n        if (!item)\r\n            return;\r\n\r\n        // TODO: Replace this big number with the time of the earliest price snapshot in history\r\n        const timeSpanInMs = 15 * 60 * 1000; // 15 mins\r\n        const firstPriceSnapshot = item.History[item.History.length - 1];\r\n        const startingTime = firstPriceSnapshot.time - (firstPriceSnapshot.time % timeSpanInMs);\r\n        const buyPricesData: XOHLC[] = [];\r\n        const sellPricesData: XOHLC[] = [];\r\n        const actualBuyPricesData: Point[] = [];\r\n        const actualSellPricesData: Point[] = [];\r\n        const marginData: Point[] = [];\r\n        const buyVolumeData: AreaPoint[] = [];\r\n        const sellVolumeData: AreaPoint[] = [];\r\n\r\n        let pricesIn15Mins: ItemPriceSnapshot[] = [];\r\n        let timeTracker = 0;\r\n        // Go backwards here because the history is sorted in reverse\r\n        for (var i = item.History.length - 1; i >= 0; i--) {\r\n            const priceSnapshot = item.History[i];\r\n            const time = timeTracker + startingTime;\r\n            const timeFromStart = priceSnapshot.time - startingTime;\r\n            const margin = ((priceSnapshot.sellPrice - priceSnapshot.buyPrice) / priceSnapshot.sellPrice) * 100;\r\n\r\n            actualBuyPricesData.push({x: timeFromStart, y: priceSnapshot.buyPrice});\r\n            actualSellPricesData.push({x: timeFromStart, y: priceSnapshot.sellPrice});\r\n            marginData.push({x: timeFromStart, y: margin});\r\n            buyVolumeData.push({position: priceSnapshot.time - startingTime, high: priceSnapshot.bought, low: priceSnapshot.bid * -1});\r\n            sellVolumeData.push({position: priceSnapshot.time - startingTime, high: priceSnapshot.sold, low: priceSnapshot.offers * -1});\r\n\r\n            if (priceSnapshot.time < time + timeSpanInMs && priceSnapshot.time >= time)\r\n                pricesIn15Mins.push(priceSnapshot);\r\n\r\n            // This is for checking if there's no next price snapshot\r\n            const nextPriceSnapshot = i - 1 >= 0 ? item.History[i - 1] : undefined;\r\n            \r\n            // This means the next price snapshot is already beyond the time interval we're compiling\r\n            if (!nextPriceSnapshot || nextPriceSnapshot.time >= time + timeSpanInMs) {\r\n                timeTracker += timeSpanInMs;\r\n                if (pricesIn15Mins.length <= 0)\r\n                    continue;\r\n\r\n                let minBuy = Number.POSITIVE_INFINITY;\r\n                let maxBuy = 0;\r\n                let minSell = Number.POSITIVE_INFINITY;\r\n                let maxSell = 0;\r\n\r\n                for (var j = 0; j < pricesIn15Mins.length; j++) {\r\n                    const price = pricesIn15Mins[j];\r\n                    if (price.buyPrice < minBuy)\r\n                        minBuy = price.buyPrice;\r\n                    if (price.buyPrice > maxBuy)\r\n                        maxBuy = price.buyPrice;\r\n\r\n                    if (price.sellPrice < minSell)\r\n                        minSell = price.sellPrice;\r\n                    if (price.sellPrice > maxSell)\r\n                        maxSell = price.sellPrice;\r\n                }\r\n\r\n                const firstSnapshot = pricesIn15Mins[0];\r\n                const lastSnapshot = pricesIn15Mins[pricesIn15Mins.length - 1];\r\n                const buyDataPoint: XOHLC = [timeTracker, firstSnapshot.buyPrice, maxBuy, minBuy, lastSnapshot.buyPrice];\r\n                const sellDataPoint: XOHLC = [timeTracker, firstSnapshot.sellPrice, maxSell, minSell, lastSnapshot.sellPrice];\r\n\r\n                buyPricesData.push(buyDataPoint);\r\n                sellPricesData.push(sellDataPoint);\r\n\r\n                minBuy = Number.POSITIVE_INFINITY;\r\n                maxBuy = 0;\r\n                minSell = Number.POSITIVE_INFINITY;\r\n                maxSell = 0;\r\n                pricesIn15Mins = [];\r\n            }\r\n        }\r\n        /**/\r\n\r\n        // Define all chart options here\r\n        this.dashboard = lightningChart().Dashboard({\r\n            theme: Themes.dark,\r\n            numberOfColumns: 2,\r\n            numberOfRows: 3,\r\n            container: itemId.toString()\r\n        });\r\n\r\n        this.buyPriceChart = this.createOHLCChart(\"Buy Prices\", startingTime, true, buyPricesData, actualBuyPricesData, {\r\n            columnIndex: 0,\r\n            rowIndex: 0,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n        this.sellPriceChart = this.createOHLCChart(\"Sell Prices\", startingTime, false, sellPricesData, actualSellPricesData, {\r\n            columnIndex: 1,\r\n            rowIndex: 0,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n\r\n        this.marginChart = this.createBaselineAreaChart(\"Margin\", \"Margin\", 15, startingTime, marginData, {\r\n            columnIndex: 0,\r\n            rowIndex: 1,\r\n            columnSpan: 2,\r\n            rowSpan: 1\r\n        });\r\n\r\n        this.buyVolumeChart = this.createAreaChart(\"Buy Volume \\ud835\\udeab\", \"Bought\", \"Bid\", startingTime, buyVolumeData, ColorRGBA(66, 153, 225), ColorRGBA(237, 137, 54), {\r\n            columnIndex: 0,\r\n            rowIndex: 2,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n        this.sellVolumeChart = this.createAreaChart(\"Sell Volume \\ud835\\udeab\", \"Sold\", \"Offers\", startingTime, sellVolumeData, ColorRGBA(72, 187, 120), ColorRGBA(245, 101, 101), {\r\n            columnIndex: 1,\r\n            rowIndex: 2,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n    }\r\n\r\n    createOHLCChart(title: string, startingTime: number, invertCandleColors: boolean, data: XOHLC[], priceData: Point[], options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        //#region Buy Price Chart\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        // TODO: Make this the date and time of the very first price snapshot for an item\r\n        const dateOrigin = new Date(startingTime); \r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                (tickStrategy) => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setAutoCursor(cursor => {\r\n                cursor.disposeTickMarkerY();\r\n                cursor.setGridStrokeYStyle(emptyLine);\r\n            })\r\n            .setPadding({right: 40});\r\n\r\n        const priceLegend = chart\r\n            .addLegendBox(LegendBoxBuilders.VerticalLegendBox)\r\n            .setPosition({x: 100, y: 100})\r\n            .setOrigin(UIOrigins.RightTop);\r\n\r\n        const priceAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(\"Price\");\r\n\r\n        // Colors of the Bollinger Band\r\n        const areaRangeFill = new SolidFill().setColor(ColorRGBA(100, 149, 237, 50));\r\n        const areaRangeStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(100, 149, 237)))\r\n            .setThickness(1);\r\n\r\n        // Settings of the Bollinger Band\r\n        const areaRange = chart.addAreaRangeSeries({ yAxis: priceAxisY })\r\n            .setName(\"Bollinger Band\")\r\n            .setHighFillStyle(areaRangeFill)\r\n            .setLowFillStyle(areaRangeFill)\r\n            .setHighStrokeStyle(areaRangeStroke)\r\n            .setLowStrokeStyle(areaRangeStroke)\r\n            .setMaxPointCount(0) // Solves the part of the area vanishing when zooming in\r\n            .setMouseInteractions(false)\r\n            .setCursorEnabled(false);\r\n\r\n        const movingAverageStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(236, 201, 75)))\r\n            .setThickness(2);\r\n        const movingAverage = chart.addLineSeries()\r\n            .setName(\"Moving Average\")\r\n            .setStrokeStyle(movingAverageStroke)\r\n            .setMouseInteractions(false)\r\n            .setCursorEnabled(false);\r\n\r\n        const pricesLineStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(237, 137, 54)))\r\n            .setThickness(2);\r\n        const pricesLine = chart.addLineSeries()\r\n            .setName(\"Actual Prices\")\r\n            .setStrokeStyle(pricesLineStroke)\r\n            .setCursorInterpolationEnabled(false);\r\n\r\n        const priceFigureWidth = 5.0;\r\n        const borderBlack = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(26, 32, 44)))\r\n            .setThickness(1);\r\n        const fillBrightRed = new SolidFill().setColor(ColorRGBA(229, 62, 62));\r\n        const fillDimRed = new SolidFill().setColor(ColorRGBA(116, 42, 42));\r\n        const fillBrightGreen = new SolidFill().setColor(ColorRGBA(62, 225, 62));\r\n        const fillDimGreen = new SolidFill().setColor(ColorRGBA(34, 84, 61));\r\n\r\n        const candles = chart\r\n            .addOHLCSeries({yAxis: priceAxisY});\r\n\r\n        candles.setName(\"Candlesticks\")\r\n            .setFigureWidth(priceFigureWidth)\r\n            .setPositiveStyle(candlestick => \r\n                candlestick\r\n                    .setBodyFillStyle(invertCandleColors ? fillBrightRed : fillBrightGreen)\r\n                    .setBodyStrokeStyle(borderBlack)\r\n                    .setStrokeStyle(new SolidLine()\r\n                        .setFillStyle(invertCandleColors ? fillDimRed : fillDimGreen)\r\n                        .setThickness(2))\r\n            )\r\n            .setNegativeStyle(candlestick => \r\n                candlestick\r\n                    .setBodyFillStyle(invertCandleColors ? fillBrightGreen : fillBrightRed)\r\n                    .setBodyStrokeStyle(borderBlack)\r\n                    .setStrokeStyle(new SolidLine()\r\n                        .setFillStyle(invertCandleColors ? fillDimGreen : fillDimRed)\r\n                        .setThickness(2))\r\n            );\r\n\r\n        const priceNums: number[] = [];\r\n        let n: number = 0;\r\n        const period = 30;\r\n        const add: (ohlc: XOHLC) => void = (ohlc) => {\r\n            candles.add(ohlc);\r\n\r\n            priceNums.push((ohlc[2] + ohlc[3] + ohlc[4]) / 3);\r\n\r\n            if (n < period) {\r\n                n++;\r\n            } else {\r\n                priceNums.shift();\r\n            }\r\n\r\n            let priceSum = 0;\r\n            priceNums.forEach(num => priceSum += num);\r\n            const priceAverage = priceSum / n;\r\n\r\n            let sqrDeviationSum = 0;\r\n            priceNums.forEach(num => sqrDeviationSum += Math.pow(num - priceAverage, 2));\r\n            const stdDeviation = Math.sqrt(sqrDeviationSum / n);\r\n            \r\n            const areaPoint: AreaPoint = {\r\n                position: ohlc[0],\r\n                high: priceAverage + (stdDeviation * 2),\r\n                low: priceAverage - (stdDeviation * 2)\r\n            };\r\n            areaRange.add(areaPoint);\r\n\r\n            const smaPoint: Point = {\r\n                x: ohlc[0],\r\n                y: priceAverage\r\n            };\r\n            movingAverage.add(smaPoint);\r\n        };\r\n\r\n        /*\r\n        createOHLCGenerator()\r\n            .setNumberOfPoints(100)\r\n            .setDataFrequency(15 * 60 * 1000)\r\n            .generate()\r\n            .toPromise()\r\n            .then(data => {\r\n                data.forEach(add);\r\n                setViewNicely();\r\n            });\r\n        /**/\r\n        //#endregion\r\n\r\n        const entries: LegendBoxEntry[] = priceLegend.add(chart) as LegendBoxEntry[];\r\n        entries[0]\r\n            .setButtonOnFillStyle(areaRangeStroke.getFillStyle())\r\n            .setButtonOnStrokeStyle(emptyLine);\r\n\r\n        entries[1]\r\n            .setOn(false);\r\n        entries[2]\r\n            .setOn(false);\r\n\r\n        const setViewNicely = () => {\r\n            const yBoundsPrice = { min: (areaRange.getYMin() ?? 0), max: (areaRange.getYMax() ?? 0), range: (areaRange.getYMax() ?? 0) - (areaRange.getYMin() ?? 0) };\r\n            // Set Y axis intervals so that series don't overlap and volume is under stocks.\r\n            priceAxisY.setInterval(yBoundsPrice.min - yBoundsPrice.range * .33, yBoundsPrice.max);\r\n        };\r\n\r\n        // For the candlesticks on hover tooltip\r\n        candles.setResultTableFormatter((builder, series, segment) => {\r\n            const open = segment.getOpen();\r\n            const close = segment.getClose();\r\n            return builder\r\n                .addRow(series.getName())\r\n                .addRow(series.axisX.formatValue(segment.getPosition()))\r\n                .addRow(`High: ${ItemGraph.toPriceString(segment.getHigh())}`)\r\n                .addRow(`${open > close ? `Open: ${ItemGraph.toPriceString(open)}` : `Close: ${ItemGraph.toPriceString(close)}`}`)\r\n                .addRow(`${open < close ? `Open: ${ItemGraph.toPriceString(open)}` : `Close: ${ItemGraph.toPriceString(close)}`}`)\r\n                .addRow(`Low: ${ItemGraph.toPriceString(segment.getLow())}`);\r\n        });\r\n\r\n        pricesLine.setResultTableFormatter((builder, series, x, y) => {\r\n            return builder\r\n                .addRow(series.getName())\r\n                .addRow(series.axisX.formatValue(x))\r\n                .addRow(`Price: ${ItemGraph.toPriceString(y)}`);\r\n        });\r\n\r\n        /* */\r\n        data.forEach(add);\r\n        pricesLine.add(priceData);\r\n        setViewNicely();\r\n        /**/\r\n\r\n        return chart;\r\n    }\r\n\r\n    createAreaChart(title: string, topTitle: string, bottomTitle: string, startingTime: number, data: AreaPoint[], topFill: Color, bottomFill: Color, options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        const dateOrigin = new Date(startingTime);\r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                tickStrategy => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setPadding({right: 40});\r\n\r\n        const volumeLegend = chart\r\n            .addLegendBox(LegendBoxBuilders.VerticalLegendBox)\r\n            .setPosition({x: 100, y: 100})\r\n            .setOrigin(UIOrigins.RightTop);\r\n\r\n        const volumeAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(\"Volume\");\r\n\r\n        \r\n        const topAreaFill = new SolidFill().setColor(ColorRGBA(topFill.r, topFill.g, topFill.b, 50));\r\n        const topAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(topFill.r, topFill.g, topFill.b)))\r\n            .setThickness(1);\r\n        \r\n        const topArea = chart.addAreaSeries({ type: AreaSeriesTypes.Positive, yAxis: volumeAxisY })\r\n            .setName(topTitle)\r\n            .setFillStyle(topAreaFill)\r\n            .setStrokeStyle(topAreaStroke)\r\n            .setCursorInterpolationEnabled(false)\r\n            .setMaxPointCount(0); // Solves the part of the area vanishing when zooming in\r\n            \r\n        const bottomAreaFill = new SolidFill().setColor(ColorRGBA(bottomFill.r, bottomFill.g, bottomFill.b, 50));\r\n        const bottomAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(bottomFill.r, bottomFill.g, bottomFill.b)))\r\n            .setThickness(1);\r\n        \r\n        const bottomArea = chart.addAreaSeries({ type: AreaSeriesTypes.Negative, yAxis: volumeAxisY })\r\n            .setName(bottomTitle)\r\n            .setFillStyle(bottomAreaFill)\r\n            .setStrokeStyle(bottomAreaStroke)\r\n            .setCursorInterpolationEnabled(false)\r\n            .setMaxPointCount(0); // Solves the part of the area vanishing when zooming in\r\n        \r\n        topArea.setResultTableFormatter((builder, series, position, high) => {\r\n            return builder\r\n                .addRow(topTitle)\r\n                .addRow(series.axisX.formatValue(position))\r\n                .addRow(`Amount: ${high.toFixed(0)}`);\r\n        });\r\n        \r\n        bottomArea.setResultTableFormatter((builder, series, position, high) => {\r\n            return builder\r\n                .addRow(bottomTitle)\r\n                .addRow(series.axisX.formatValue(position))\r\n                .addRow(`Amount: ${(high * -1).toFixed(0)}`);\r\n        });\r\n\r\n        volumeLegend.add(chart);\r\n\r\n        data.forEach(dataPoint => {\r\n            topArea.add({x: dataPoint.position, y: dataPoint.high});\r\n            bottomArea.add({x: dataPoint.position, y: dataPoint.low});\r\n        });\r\n\r\n        return chart;\r\n    }\r\n\r\n    createBaselineAreaChart(title: string, yTitle: string, baseline: number, startingTime: number, data: Point[], options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        const dateOrigin = new Date(startingTime);\r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                tickStrategy => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setPadding({right: 40});\r\n\r\n        const lineAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(yTitle);\r\n\r\n        \r\n        const topAreaFill = new SolidFill().setColor(ColorRGBA(72, 187, 120, 50));\r\n        const topAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(72, 187, 120)))\r\n            .setThickness(1);\r\n        \r\n        const bottomAreaFill = new SolidFill().setColor(ColorRGBA(245, 101, 101, 50));\r\n        const bottomAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(245, 101, 101)))\r\n            .setThickness(1);\r\n\r\n        const area = chart.addAreaSeries({baseline: baseline, type: AreaSeriesTypes.Bipolar, yAxis: lineAxisY})\r\n            .setName(title)\r\n            .setPositiveFillStyle(topAreaFill)\r\n            .setPositiveStrokeStyle(topAreaStroke)\r\n            .setNegativeFillStyle(bottomAreaFill)\r\n            .setNegativeStrokeStyle(bottomAreaStroke)\r\n            .setCursorInterpolationEnabled(false);\r\n\r\n        area.setResultTableFormatter((builder, series, x, y) => {\r\n            return builder\r\n                .addRow(series.getName())\r\n                .addRow(series.axisX.formatValue(x))\r\n                .addRow(`${yTitle}: ${y.toFixed(2)}%`);\r\n        });\r\n\r\n        area.add(data);\r\n\r\n        return chart;\r\n    }\r\n\r\n    static toPriceString(price: number) {\r\n        const gold = Math.floor(price / 10000);\r\n        const silver = Math.floor(price % 10000 / 100);\r\n        const copper = Math.floor(price % 10000 % 100);\r\n\r\n        return `${gold}g ${silver}s ${copper}c`;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.createChart();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.sellVolumeChart?.dispose();\r\n        this.buyVolumeChart?.dispose();\r\n        this.marginChart?.dispose();\r\n        this.sellPriceChart?.dispose();\r\n        this.buyPriceChart?.dispose();\r\n        this.dashboard?.dispose();\r\n\r\n        this.sellVolumeChart = undefined;\r\n        this.buyVolumeChart = undefined;\r\n        this.marginChart = undefined;\r\n        this.sellPriceChart = undefined;\r\n        this.buyPriceChart = undefined;\r\n        this.dashboard = undefined;\r\n    }\r\n\r\n    render() {\r\n        const { itemId } = this.props;\r\n\r\n        return(\r\n            <div id={itemId.toString()} className=\"h-full\"></div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nexport type PriceProps = {\r\n    price: number;\r\n    priceColor: string;\r\n}\r\n\r\nexport type PriceState = {\r\n\r\n}\r\n\r\nexport default class Price extends React.Component<PriceProps, PriceState> {\r\n\r\n    static defaultProps: PriceProps = {\r\n        price: 0,\r\n        priceColor: \"text-gray-200\"\r\n    }\r\n\r\n    constructor(props: PriceProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { price, priceColor } = this.props;\r\n        const isNegative = price < 0;\r\n        const absPrice = Math.abs(price);\r\n\r\n        const gold = Math.floor(absPrice / 10000);\r\n        const silver = Math.floor(absPrice % 10000 / 100);\r\n        const copper = Math.floor(absPrice % 10000 % 100);\r\n\r\n        return (\r\n            <div className=\"flex flex-row\">\r\n                <div id=\"gold\" className=\"mr-1 flex flex-row items-center\">\r\n                    <FontAwesomeIcon icon=\"minus\" className={`${isNegative ? \"\" : \"hidden\"} ${priceColor} mr-1`} style={{fontSize: \"0.5rem\"}} />\r\n                    <img src=\"https://wiki.guildwars2.com/images/d/d1/Gold_coin.png\" alt=\"Gold Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{gold}</span>\r\n                </div>\r\n                <div id=\"silver\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/3/3c/Silver_coin.png\" alt=\"Silver Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{silver}</span>\r\n                </div>\r\n                <div id=\"copper\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/e/eb/Copper_coin.png\" alt=\"Copper Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{copper}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export enum ItemField {\r\n    Name,\r\n    Buys,\r\n    Sells,\r\n    Appeal,\r\n    Margin,\r\n    Sold,\r\n    Bought\r\n}\r\n\r\nexport enum ItemFieldSort {\r\n    Ascending,\r\n    Descending  \r\n}","export enum ItemRarity {\r\n    None = 0,\r\n    Junk = 1,\r\n    Basic = 2,\r\n    Fine = 4,\r\n    Masterwork = 8,\r\n    Rare = 16,\r\n    Exotic = 32,\r\n    Ascended = 64,\r\n    Legendary = 128,\r\n    All = 255\r\n}","export enum ItemType {\r\n    None = 0,\r\n    Armor = 1,\r\n    Back = 2,\r\n    Bag = 4,\r\n    Consumable = 8,\r\n    Container = 16,\r\n    CraftingMaterial = 32,\r\n    Gathering = 64,\r\n    Gizmo = 128,\r\n    Key = 256,\r\n    MiniPet = 512,\r\n    Tool = 1024,\r\n    Trait = 2048,\r\n    Trinket = 4096,\r\n    Trophy = 8192,\r\n    UpgradeComponent = 16384,\r\n    Weapon = 32768,\r\n    All = 65535\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport ItemHelper from \"../utils/ItemHelper\";\r\nimport ItemGraph from \"./ItemGraph\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemComparisonSlotProps = {\r\n    item: PricedItem;\r\n    deleteItem(itemId: number): Promise<void>;\r\n}\r\n\r\nexport type ItemComparisonSlotState = {\r\n    amount: number;\r\n    isOpen: boolean;\r\n    isDragging: boolean;\r\n}\r\n\r\nexport default class ItemComparisonSlot extends React.Component<ItemComparisonSlotProps, ItemComparisonSlotState> {\r\n    private dragTarget: React.RefObject<HTMLDivElement>;\r\n    \r\n    constructor(props: ItemComparisonSlotProps) {\r\n        super(props);\r\n\r\n        this.dragTarget = React.createRef();\r\n\r\n        this.state = {\r\n            amount: 1,\r\n            isOpen: false,\r\n            isDragging: false\r\n        };\r\n\r\n        //this.getNetProfit = this.getNetProfit.bind(this);\r\n        this.toggleOpenSlot = this.toggleOpenSlot.bind(this);\r\n        this.openSlot = this.openSlot.bind(this);\r\n        this.closeSlot = this.closeSlot.bind(this);\r\n\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    /*\r\n    getNetProfit(): number {\r\n        const { item, amount } = this.state;\r\n\r\n        if (item == null)\r\n            return 0;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const totalFees = item.Fee * amount;\r\n        return revenue - expenditure - totalFees;\r\n    }\r\n    */\r\n\r\n    toggleOpenSlot() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.closeSlot();\r\n        else\r\n            this.openSlot();\r\n    }\r\n\r\n    openSlot() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeSlot() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    onDragStart(event: React.DragEvent<HTMLDivElement>) {\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData(\"text\", this.props.item.Id.toString());\r\n\r\n        requestAnimationFrame(() => {\r\n            this.dragTarget.current?.classList.add(\"hide\");\r\n        });\r\n\r\n        this.setState({isDragging: true});\r\n    }\r\n\r\n    onDragEnd(event: React.DragEvent<HTMLDivElement>) {\r\n        this.dragTarget.current?.classList.remove(\"hide\");\r\n        this.setState({isDragging: false});\r\n    }\r\n    \r\n    render() {\r\n        const { item, deleteItem } = this.props;\r\n        const { amount, isOpen, isDragging } = this.state;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const fee = Math.round(item.SellPrice * 0.15);\r\n        const totalFees = fee * amount;\r\n        const netProfit = revenue - expenditure - totalFees;\r\n\r\n        // TODO: Amount is not sorting with items\r\n\r\n        return (\r\n            <div className=\"flex flex-col px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row cursor-pointer\"\r\n                    onClick={this.toggleOpenSlot}>\r\n                    <div className=\"flex flex-row w-2/8 items-center mr-6\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <a href={ItemHelper.getWikiLink(item.ChatLink)} target=\"_blank\" rel=\"noopener noreferrer\" \r\n                            className=\"transition duration-150 ease-in-out italic text-gray-200 hover:text-blue-400\"\r\n                            onClick={event => event.stopPropagation()}>\r\n                            {item.Name}\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"flex flex-col xl:flex-row w-5/12 items-center\">\r\n                        <div className=\"flex flex-row xl:mr-4\">\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Amount</label>\r\n                                <input type=\"number\" className=\"w-16 px-1 text-sm bg-gray-600 text-gray-200\"\r\n                                    defaultValue={1}\r\n                                    onClick={event => event.stopPropagation()}\r\n                                    onChange={event => {\r\n                                        const value: number = parseInt(event.target.value);\r\n                                        console.log(value);\r\n                                        if (value != null && !isNaN(value))\r\n                                            this.setState({amount: value});\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Net Profit</label>\r\n                                <Price price={netProfit} priceColor={`${ netProfit < 0 ? \"text-red-500\" : \"text-green-500\" }`} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-row\">\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Buys</label>\r\n                                <Price price={expenditure} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Sells</label>\r\n                                <Price price={revenue} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Fees</label>\r\n                                <Price price={totalFees} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-2/8\">\r\n                        <div className=\"flex flex-col xl:flex-row justify-evenly w-full h-full\">\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 font-bold text-gray-500\">Appeal</label>\r\n                                <span className=\"text-gray-200\">{item.Appeal.toFixed(2)}</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Margin</label>\r\n                                <span className={item.Margin < 15 ? \"text-red-500\" : \"text-green-500\"}>{item.Margin.toFixed(2)}%</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Sold</label>\r\n                                <span className=\"text-gray-200\">{item.Sold.toFixed(2)}</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Bought</label>\r\n                                <span className=\"text-gray-200\">{item.Bought.toFixed(2)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                        <div className=\"relative px-2 py-1 mr-3 rounded shadow-lg bg-gray-800 text-gray-300 cursor-move\"\r\n                            draggable\r\n                            onDragStart={this.onDragStart}\r\n                            onDragEnd={this.onDragEnd}>\r\n                            <FontAwesomeIcon icon=\"arrows-alt\" />\r\n                            <div ref={this.dragTarget} className={`${isDragging ? \"\" : \"hidden\"} absolute px-2 py-1 flex flex-row items-center justify-center w-32 h-12 rounded bg-gray-800`} style={{top: \"-0.25rem\", left: \"-2.75rem\"}}>\r\n                                <img src={item.Icon} alt={item.Name} className=\"mr-3 w-8 h-8 select-none\"/>\r\n                                <span className=\"italic text-sm truncate text-gray-300 select-none\">{item.Name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out px-3 py-1 rounded shadow-lg bg-red-700 text-red-300 hover:bg-red-800 hover:text-red-200\"\r\n                            onClick={event => {\r\n                                event.stopPropagation();\r\n                                this.setState({isOpen: false}, () => deleteItem(item.Id));\r\n                            }}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {isOpen && (\r\n                    <div className=\"mt-2 w-full\" style={{height: \"48rem\"}}>\r\n                        <ItemGraph itemId={item.Id} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        /*\r\n        return (\r\n            <tr className=\"bg-gray-700\">\r\n                <td className=\"\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <span className=\"italic\">{item.Name}</span>\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.BuyPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.SellPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.Fee} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.AppealValue}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.Margin}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.TransactionRate}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n        */\r\n    }\r\n}","import { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport class ItemQuery {\r\n    public name: string;\r\n    public type: ItemType;\r\n    public rarity: ItemRarity;\r\n    public minLevel: number;\r\n    public maxLevel: number;\r\n    public minBuyPrice: number;\r\n    public maxBuyPrice: number;\r\n    public minSellPrice: number;\r\n    public maxSellPrice: number;\r\n    public sortBy: ItemField;\r\n    public sortDirection: ItemFieldSort;\r\n\r\n    constructor(options?: ItemQueryOptions) {\r\n        this.name = options?.name ?? \"\";\r\n        this.type = options?.type ?? ItemType.All;\r\n        this.rarity = options?.rarity ?? ItemRarity.All;\r\n        this.minLevel = options?.minLevel ?? 0;\r\n        this.maxLevel = options?.maxLevel ?? 80;\r\n        this.minBuyPrice = options?.minBuyPrice ?? 0;\r\n        this.maxBuyPrice = options?.maxBuyPrice ?? 100000000;\r\n        this.minSellPrice = options?.minSellPrice ?? 0;\r\n        this.maxSellPrice = options?.maxSellPrice ?? 100000000;\r\n        this.sortBy = options?.sortBy ?? ItemField.Appeal;\r\n        this.sortDirection = options?.sortDirection ?? ItemFieldSort.Descending;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            name: this.name,\r\n            type: this.type.valueOf().toString(),\r\n            rarity: this.rarity.valueOf().toString(),\r\n            minLevel: this.minLevel.toString(),\r\n            maxLevel: this.maxLevel.toString(),\r\n            minBuyPrice: this.minBuyPrice.toString(),\r\n            maxBuyPrice: this.maxBuyPrice.toString(),\r\n            minSellPrice: this.minSellPrice.toString(),\r\n            maxSellPrice: this.maxSellPrice.toString(),\r\n            sortBy: this.sortBy.valueOf().toString(),\r\n            sortDirection: this.sortDirection.valueOf().toString()\r\n        };\r\n    }\r\n}\r\n\r\nexport interface ItemQueryOptions {\r\n    name?: string;\r\n    type?: ItemType;\r\n    rarity?: ItemRarity;\r\n    minLevel?: number;\r\n    maxLevel?: number;\r\n    minBuyPrice?: number;\r\n    maxBuyPrice?: number;\r\n    minSellPrice?: number;\r\n    maxSellPrice?: number;\r\n    sortBy?: ItemField;\r\n    sortDirection?: ItemFieldSort;\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\n\r\nexport type RarityMultiSelectProps = {\r\n    rarity: ItemRarity;\r\n    onChange(rarity: ItemRarity, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type RarityMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class RarityMultiSelect extends React.Component<RarityMultiSelectProps, RarityMultiSelectState> {\r\n    constructor(props: RarityMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleRarity = this.toggleRarity.bind(this);\r\n        this.checkRarity = this.checkRarity.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(rarity: ItemRarity): boolean {\r\n        const rarityNum = rarity as number;\r\n        return (rarityNum !== 0) && ((rarityNum & (rarityNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleRarity(otherRarity: ItemRarity) {\r\n        const { rarity, onChange } = this.props;\r\n        let newRarity: ItemRarity;\r\n        switch (otherRarity) {\r\n        case ItemRarity.None:\r\n        case ItemRarity.All:\r\n            newRarity = otherRarity;\r\n            break;\r\n        default:\r\n            newRarity = rarity ^ otherRarity;\r\n            break;\r\n        }\r\n\r\n        onChange(newRarity, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkRarity(otherRarity: ItemRarity): boolean {\r\n        const { rarity } = this.props;\r\n        if (rarity !== ItemRarity.All && otherRarity === ItemRarity.All)\r\n            return false;\r\n        return (rarity & otherRarity) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { rarity } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (rarity === ItemRarity.None)\r\n            selectedText = ItemRarity[ItemRarity.None];\r\n        else if (rarity === ItemRarity.All)\r\n            selectedText = ItemRarity[ItemRarity.All];\r\n        else if (RarityMultiSelect.isPowerOf2(rarity))\r\n            selectedText = ItemRarity[rarity];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center justify-between rounded-r text-sm bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"6.9rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemRarity).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemRarity: ItemRarity = ItemRarity[value as keyof typeof ItemRarity];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleRarity(itemRarity)}>\r\n                                    {(this.checkRarity(itemRarity) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkRarity(itemRarity) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemRarity[itemRarity]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type TypeMultiSelectProps = {\r\n    type: ItemType;\r\n    onChange(type: ItemType, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type TypeMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class TypeMultiSelect extends React.Component<TypeMultiSelectProps, TypeMultiSelectState> {\r\n    constructor(props: TypeMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleType = this.toggleType.bind(this);\r\n        this.checkType = this.checkType.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(type: ItemType): boolean {\r\n        const typeNum = type as number;\r\n        return (typeNum !== 0) && ((typeNum & (typeNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleType(otherType: ItemType) {\r\n        const { type, onChange } = this.props;\r\n        let newType: ItemType;\r\n        switch (otherType) {\r\n        case ItemType.None:\r\n        case ItemType.All:\r\n            newType = otherType;\r\n            break;\r\n        default:\r\n            newType = type ^ otherType;\r\n            break;\r\n        }\r\n\r\n        onChange(newType, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkType(otherType: ItemType): boolean {\r\n        const { type } = this.props;\r\n        if (type !== ItemType.All && otherType === ItemType.All)\r\n            return false;\r\n        return (type & otherType) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { type } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (type === ItemType.None)\r\n            selectedText = ItemType[ItemType.None];\r\n        else if (type === ItemType.All)\r\n            selectedText = ItemType[ItemType.All];\r\n        else if (TypeMultiSelect.isPowerOf2(type))\r\n            selectedText = ItemType[type];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm flex items-center justify-between rounded-r bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"10.29rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemType).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemType: ItemType = ItemType[value as keyof typeof ItemType];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleType(itemType)}>\r\n                                    {(this.checkType(itemType) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkType(itemType) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemType[itemType]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemQuery, ItemQueryOptions } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type ListSortingBarProps = {\r\n    name: string;\r\n    items: PricedItem[];\r\n    isDataStale: boolean;\r\n    onReload(): Promise<void>;\r\n    onSetTimespan(timespan: HistoryTimespan): Promise<void>; \r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type ListSortingBarState = {\r\n    query: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    timespan: HistoryTimespan;\r\n}\r\n\r\nexport default class ListSortingBar extends React.Component<ListSortingBarProps, ListSortingBarState> {\r\n    constructor(props: ListSortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            query: new ItemQuery(),\r\n            filteredItems: props.items,\r\n            isFilterOpen: false,\r\n            timespan: HistoryTimespan.OneMonth\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.sortCompare = this.sortCompare.bind(this); \r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n        this.onSetTimespan = this.onSetTimespan.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFilter();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ListSortingBarProps) {\r\n        if (prevProps.items !== this.props.items)\r\n            this.onFilter();\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({query: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    onFilter() {\r\n        // TODO: Implement filtering of the items from props here\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase()) &&\r\n                   (query.type & item.Type) !== 0 &&\r\n                   (query.rarity & item.Rarity) !== 0 &&\r\n                   item.Level >= query.minLevel &&\r\n                   item.Level <= query.maxLevel &&\r\n                   item.BuyPrice >= query.minBuyPrice &&\r\n                   item.BuyPrice <= query.maxBuyPrice &&\r\n                   item.SellPrice >= query.minSellPrice &&\r\n                   item.SellPrice <= query.maxSellPrice;\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    // Does an unfiltered search.\r\n    onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase());\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    sortCompare(a: PricedItem, b: PricedItem): number {\r\n        const { query } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n\r\n        if (query.sortBy === ItemField.Name) {\r\n            if (isSortAscending)\r\n                return a.Name.toLowerCase().localeCompare(b.Name.toLowerCase());\r\n            \r\n            return b.Name.toLowerCase().localeCompare(a.Name.toLowerCase());\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Appeal) {\r\n            if (isSortAscending)\r\n                return a.Appeal - b.Appeal;\r\n\r\n            return b.Appeal - a.Appeal;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Margin) {\r\n            if (isSortAscending)\r\n                return a.Margin - b.Margin;\r\n\r\n            return b.Margin - a.Margin;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sold) {\r\n            if (isSortAscending)\r\n                return a.Sold - b.Sold;\r\n\r\n            return b.Sold - a.Sold;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Bought) {\r\n            if (isSortAscending)\r\n                return a.Bought - b.Bought;\r\n\r\n            return b.Bought - a.Bought;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Buys) {\r\n            if (isSortAscending)\r\n                return a.BuyPrice - b.BuyPrice;\r\n\r\n            return b.BuyPrice - a.BuyPrice;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sells) {\r\n            if (isSortAscending)\r\n                return a.SellPrice - b.SellPrice;\r\n\r\n            return b.SellPrice - a.SellPrice;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.name = value;\r\n            return {query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.type = newType;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.rarity = newRarity;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            if (value > query.maxLevel)\r\n                return {query};\r\n\r\n            query.minLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            if (value < query.minLevel)\r\n                return {query};\r\n\r\n            query.maxLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.minBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.maxBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.minSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.maxSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    async onSetTimespan(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const { onSetTimespan } = this.props;\r\n        const value = event.target.value;\r\n        const timespan = parseInt(value) as HistoryTimespan;\r\n        this.setState({timespan}, async () => await onSetTimespan(timespan));\r\n    }\r\n\r\n    render() {\r\n        const { name, isDataStale, onReload, children } = this.props;\r\n        const { query, isFilterOpen, filteredItems, timespan } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-2 bg-gray-900 text-gray-500\">\r\n                    <span className=\"\">{name}</span>\r\n                    \r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={query.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={query.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Time Span</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 mr-4 rounded h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={timespan} \r\n                            onChange={this.onSetTimespan}>\r\n                            <option value={HistoryTimespan.OneHour} className=\"\">{HistoryTimespan[HistoryTimespan.OneHour]}</option>\r\n                            <option value={HistoryTimespan.SixHours} className=\"\">{HistoryTimespan[HistoryTimespan.SixHours]}</option>\r\n                            <option value={HistoryTimespan.TwelveHours} className=\"\">{HistoryTimespan[HistoryTimespan.TwelveHours]}</option>\r\n                            <option value={HistoryTimespan.OneDay} className=\"\">{HistoryTimespan[HistoryTimespan.OneDay]}</option>\r\n                            <option value={HistoryTimespan.ThreeDays} className=\"\">{HistoryTimespan[HistoryTimespan.ThreeDays]}</option>\r\n                            <option value={HistoryTimespan.OneWeek} className=\"\">{HistoryTimespan[HistoryTimespan.OneWeek]}</option>\r\n                            <option value={HistoryTimespan.TwoWeeks} className=\"\">{HistoryTimespan[HistoryTimespan.TwoWeeks]}</option>\r\n                            <option value={HistoryTimespan.OneMonth} className=\"\">{HistoryTimespan[HistoryTimespan.OneMonth]}</option>\r\n                        </select>\r\n\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\", zIndex: 100}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={query.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={query.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={query.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={() => {\r\n                                                    this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out relative flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            title={`${isDataStale ? \"Reload Data (Data may be stale)\" : \"Reload Data\"}`}\r\n                            onClick={onReload}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                            {isDataStale && (\r\n                                <div className=\"absolute flex h-3 w-3\" style={{top: \"-0.35rem\", right: \"-0.35rem\"}}>\r\n                                    <span className=\"animate-ping h-3 w-3 absolute rounded-full bg-yellow-500 opacity-75\"></span>\r\n                                    <span className=\"relative rounded-full h-3 w-3 bg-yellow-500\"></span>\r\n                                </div>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n            </>\r\n        );\r\n    }\r\n}","export class HistoryItemQuery {\r\n    public readonly id: number;\r\n    public readonly hasDetails: boolean;\r\n    public readonly newest: number;\r\n\r\n    constructor(id: number, hasDetails: boolean = false, newest: number = 0) {\r\n        this.id = id;\r\n        this.hasDetails = hasDetails;\r\n        this.newest = newest;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            id: this.id.toString(),\r\n            hasDetails: this.hasDetails.toString(),\r\n            newest: this.newest.toString()\r\n        };\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type PricedItem = {\r\n    Id: number;\r\n    ChatLink: string;\r\n    Name: string;\r\n    Icon: string;\r\n    Description: string;\r\n    Type: ItemType;\r\n    Rarity: ItemRarity;\r\n    Level: number;\r\n\r\n    BuyPrice: number;\r\n    SellPrice: number;\r\n    Appeal: number;\r\n    Margin: number;\r\n    Sold: number;\r\n    Bought: number;\r\n}\r\n\r\nexport class PricedItemFactory {\r\n    static ToPricedItem(item: any): PricedItem | null {\r\n        try {\r\n            const result: PricedItem = { \r\n                Id: item.id, \r\n                ChatLink: item.chatLink,\r\n                Name: item.name, \r\n                Icon: item.icon, \r\n                Description: item.description,\r\n                Type: parseInt(item.type),\r\n                Rarity: parseInt(item.rarity),\r\n                Level: item.level,\r\n\r\n                BuyPrice: item.buyPrice,\r\n                SellPrice: item.sellPrice,\r\n                Appeal: parseFloat(parseFloat(item.appeal).toFixed(2)),\r\n                Margin: parseFloat(parseFloat(item.margin).toFixed(2)),\r\n                Sold: parseFloat(parseFloat(item.sold).toFixed(2)),\r\n                Bought: parseFloat(parseFloat(item.bought).toFixed(2))\r\n            };\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToPricedItems(items: any): PricedItem[] {\r\n        const arr: PricedItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = PricedItemFactory.ToPricedItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","const environment = {\r\n    urls: {\r\n        authority: \"https://auth.devwulfcodes.com\",\r\n        host: \"https://gw2.devwulfcodes.com\",\r\n        gw2calculator: \"https://gw2.devwulfcodes.com/api\"\r\n    }\r\n};\r\n\r\nexport default environment;","import { HistoryItem, HistoryItemFactory } from \"../dataContracts/HistoryItem\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem, PricedItemFactory } from \"../dataContracts/PricedItem\";\r\nimport environment from \"../environment\";\r\n\r\nclass ApiService {\r\n    public async GetItems(accessToken: string, query: ItemQuery, pageNumber: number): Promise<PricedItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems?\" + new URLSearchParams(query.toObject()) + `&pageNumber=${pageNumber}`;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return PricedItemFactory.ToPricedItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemPageCount(accessToken: string, query: ItemQuery): Promise<number> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems/pageCount?\" + new URLSearchParams(query.toObject());\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result;\r\n\r\n        console.log(result);\r\n        return 0;\r\n    }\r\n\r\n    public async GetHistoryItems(accessToken: string, queries: HistoryItemQuery[]): Promise<HistoryItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/historyItems\";\r\n        const response = await ApiService.Post(url, accessToken, queries);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return HistoryItemFactory.ToHistoryItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemLists(accessToken: string) : Promise<ItemList[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getLists\";\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemLists;\r\n            const itemLists: ItemList[] = [];\r\n            items.forEach((item: any) => {\r\n                const itemList: ItemList = {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n                \r\n                itemLists.push(itemList);\r\n            });\r\n\r\n            return itemLists;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemList(accessToken: string, id: string) : Promise<number[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getList/\" + id;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemIds;\r\n            const itemIds: number[] = [];\r\n            items.forEach((id: any) => {\r\n                const idNum = parseInt(id);\r\n                itemIds.push(idNum);\r\n            });\r\n\r\n            return itemIds;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async CreateList(accessToken: string, name: string) : Promise<string | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/createList\";\r\n        const response = await ApiService.Post(url, accessToken, {name});\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result.listId;\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async UpdateListName(accessToken: string, id: string, name: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/updateName\";\r\n        const response = await ApiService.Post(url, accessToken, {id, name});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async AddListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/addItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n        \r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteList(accessToken: string, id: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteList\";\r\n        const response = await ApiService.Post(url, accessToken, {id});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    private static async Get(url: string, accessToken: string) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            }\r\n        });\r\n    }\r\n\r\n    private static async Post(url: string, accessToken: string, body: any) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            },\r\n            body: body ? JSON.stringify(body) : undefined\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemComparisonSlot from \"../components/ItemComparisonSlot\";\r\nimport ListSortingBar from \"../components/ListSortingBar\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport { HistoryItem } from \"../dataContracts/HistoryItem\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport type MyListProps = {\r\n    listId?: string;\r\n}\r\n\r\nexport type MyListState = {\r\n    id: string,\r\n    user: User | undefined;\r\n    items: PricedItem[];\r\n    timespan: HistoryTimespan;\r\n    isLoading: boolean;\r\n    isDataStale: boolean;\r\n}\r\n\r\nexport default class MyList extends React.Component<MyListProps, MyListState> {\r\n    private slotRefs: React.RefObject<ItemComparisonSlot[]>;\r\n\r\n    constructor(props: MyListProps) {\r\n        super(props);\r\n\r\n        this.slotRefs = React.createRef();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            user: undefined,\r\n            /*[19721, 46736, 46738, 46739, 72224, 9576, 24277, 67015],*/\r\n            items: [],\r\n            timespan: HistoryTimespan.OneMonth,\r\n            isLoading: false,\r\n            isDataStale: false\r\n        };\r\n\r\n        this.updateId = this.updateId.bind(this);\r\n        this.updateItems = this.updateItems.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setTimespan = this.setTimespan.bind(this);\r\n        this.onReload = this.onReload.bind(this);\r\n        this.onOpenAll = this.onOpenAll.bind(this);\r\n        this.onCloseAll = this.onCloseAll.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async updateId() {\r\n        const { listId } = this.props;\r\n        const { id } = this.state;\r\n        if (listId && id !== listId)\r\n            this.setState({id: listId, items: [], isLoading: true}, async () => {\r\n                await this.updateItems();\r\n            });\r\n    }\r\n\r\n    async updateItems() {\r\n        const { user, id, timespan } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        this.setState({items: [], isLoading: true, isDataStale: false}, async () => {\r\n            const ids = await ApiService.GetItemList(user.access_token, id);\r\n            if (!ids)\r\n                return;\r\n    \r\n            const historyItemQueries: HistoryItemQuery[] = [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n                const itemId = ids[i];\r\n                const newest = await LocalDB.getNewestTime(itemId);\r\n                const hasDetails = await LocalDB.hasDetails(itemId);\r\n                historyItemQueries.push(new HistoryItemQuery(itemId, hasDetails, newest));\r\n            }\r\n    \r\n            const historyItems = await ApiService.GetHistoryItems(user.access_token, historyItemQueries);\r\n            if (!historyItems)\r\n                return;\r\n    \r\n            const pricedItems: PricedItem[] = [];\r\n            for (var i = 0; i < historyItems.length; i++) {\r\n                const item = historyItems[i];\r\n                const itemQuery = historyItemQueries[i];\r\n                await LocalDB.deleteOldPrices(item.Id);\r\n                if (!itemQuery.hasDetails)\r\n                    await LocalDB.setHistoryItem(item);\r\n                else\r\n                    await LocalDB.setHistoryItemPrices(item.Id, item.History);\r\n    \r\n                const dbItem = await LocalDB.getHistoryItem(item.Id, timespan);\r\n                if (!dbItem)\r\n                    continue;\r\n    \r\n                const pricedItem = MyList.historyToPriced(dbItem);\r\n                pricedItems.push(pricedItem);\r\n            }\r\n\r\n            this.setState({items: pricedItems, isLoading: false}, () => {\r\n                setTimeout(() => {\r\n                    this.setState({isDataStale: true});\r\n                }, 300000);\r\n            });\r\n        });\r\n    }\r\n\r\n    static historyToPriced(item: HistoryItem): PricedItem {\r\n        const newestPrice = item.History[0];\r\n        const buyPrice = newestPrice.buyPrice;\r\n        const sellPrice = newestPrice.sellPrice;\r\n        const margin = (sellPrice - buyPrice) / sellPrice * 100;\r\n        let sumSold: number = 0;\r\n        let sumBought: number = 0;\r\n        item.History.forEach(price => {\r\n            sumSold += price.sold;\r\n            sumBought += price.bought;\r\n        });\r\n\r\n        const avgSold = sumSold / item.History.length;\r\n        const avgBought = sumBought / item.History.length;\r\n\r\n        const appeal = margin > 15 ? margin * avgSold * avgBought : 0;\r\n\r\n        const pricedItem: PricedItem = {\r\n            Id: item.Id,\r\n            ChatLink: item.ChatLink,\r\n            Name: item.Name,\r\n            Icon: item.Icon,\r\n            Description: item.Description,\r\n            Type: item.Type,\r\n            Rarity: item.Rarity,\r\n            Level: item.Level,\r\n        \r\n            BuyPrice: buyPrice,\r\n            SellPrice: sellPrice,\r\n            Appeal: appeal,\r\n            Margin: margin,\r\n            Sold: avgSold,\r\n            Bought: avgBought\r\n        };\r\n\r\n        return pricedItem;\r\n    }\r\n\r\n    async deleteItem(itemId: number) {\r\n        const { id, user, items } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteListItem(user.access_token, id, itemId);\r\n        const tempItems = [...items];\r\n        if (result) {\r\n            const itemIndex = tempItems.findIndex(item => item.Id === itemId);\r\n            tempItems.splice(itemIndex, 1);\r\n            this.setState({items: tempItems});\r\n        }\r\n    }\r\n\r\n    async onReload() {\r\n        this.setState({items: [], isLoading: true}, async () => {\r\n            await this.updateItems();\r\n        });\r\n    }\r\n\r\n    async setTimespan(timespan: HistoryTimespan) {\r\n        this.setState({items: [], timespan: timespan, isLoading: true}, async () => {\r\n            const { user, id } = this.state;\r\n            if (!user)\r\n                return;\r\n\r\n            const ids = await ApiService.GetItemList(user.access_token, id);\r\n            if (!ids)\r\n                return;\r\n\r\n            const pricedItems: PricedItem[] = [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n                const itemId = ids[i];\r\n                const item = await LocalDB.getHistoryItem(itemId, timespan);\r\n                if (!item)\r\n                    continue;\r\n                \r\n                const pricedItem = MyList.historyToPriced(item);\r\n                pricedItems.push(pricedItem);\r\n            }\r\n\r\n            this.setState({items: pricedItems, isLoading: false});\r\n        });\r\n    }\r\n\r\n    onOpenAll() {\r\n        const refs = this.slotRefs.current;\r\n        if (!refs)\r\n            return;\r\n\r\n        refs.forEach(ref => {\r\n            ref.openSlot();\r\n        });\r\n    }\r\n\r\n    onCloseAll() {\r\n        const refs = this.slotRefs.current;\r\n        if (!refs)\r\n            return;\r\n\r\n        refs.forEach(ref => {\r\n            ref.closeSlot();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, items, isLoading, isDataStale } = this.state;\r\n\r\n        return (\r\n            <div className=\"main w-full h-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n                            \r\n                        if (user) {\r\n                            return(\r\n                                <ListSortingBar items={items} name=\"Tracked Items\" isDataStale={isDataStale} onReload={this.onReload} onSetTimespan={this.setTimespan}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <>\r\n                                                    {/*\r\n                                                    <div className=\"flex flex-row-reverse mb-2\">\r\n                                                        <button className=\"transition duration-150 ease-in-out px-3 py-2 flex flex-row items-center justify-center rounded-r bg-gray-700 text-gray-300 text-xs hover:shadow-lg hover:bg-gray-900 hover:text-gray-200\"\r\n                                                            onClick={this.onCloseAll}>\r\n                                                            <FontAwesomeIcon icon=\"minus\" className=\"mr-2\" style={{fontSize: \"0.6rem\"}} />\r\n                                                            <span className=\"\">Close All</span>\r\n                                                        </button>\r\n                                                        <button className=\"transition duration-150 ease-in-out px-3 py-2 flex flex-row items-center justify-center rounded-l bg-gray-700 text-gray-300 text-xs hover:shadow-lg hover:bg-gray-900 hover:text-gray-200\"\r\n                                                            onClick={this.onOpenAll}>\r\n                                                            <FontAwesomeIcon icon=\"plus\" className=\"mr-2\" style={{fontSize: \"0.6rem\"}} />\r\n                                                            <span className=\"\">Open All</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    */}\r\n                                                    <Scrollbar noScrollX className=\"my-list-scroll\">\r\n                                                        {sortedItems.map((value, index) => (\r\n                                                            <div key={index} className=\"mb-2\">\r\n                                                                <ItemComparisonSlot item={value} \r\n                                                                    ref={ref => {\r\n                                                                        if (ref)\r\n                                                                            this.slotRefs.current?.push(ref);\r\n                                                                    }} \r\n                                                                    deleteItem={this.deleteItem} />\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </Scrollbar>\r\n                                                </>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"flex justify-center\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </ListSortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(<>\r\n                            <ListSortingBar items={[]} name=\"Items\" isDataStale={true} onReload={async () => {}} onSetTimespan={async () => {}}>\r\n                                {sortedItems => (\r\n                                    <>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-3 py-2 flex flex-row items-center justify-center rounded-r bg-gray-700 text-gray-300 text-xs hover:shadow-lg hover:bg-gray-900 hover:text-gray-200\">\r\n                                                <FontAwesomeIcon icon=\"minus\" className=\"mr-2\" style={{fontSize: \"0.6rem\"}} />\r\n                                                <span className=\"\">Close All</span>\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-3 py-2 flex flex-row items-center justify-center rounded-l bg-gray-700 text-gray-300 text-xs hover:shadow-lg hover:bg-gray-900 hover:text-gray-200\">\r\n                                                <FontAwesomeIcon icon=\"plus\" className=\"mr-2\" style={{fontSize: \"0.6rem\"}} />\r\n                                                <span className=\"\">Open All</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            </ListSortingBar>\r\n\r\n                            {/*\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                            */}\r\n                        </>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n                \r\n                {/*\r\n                <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                <div className=\"block\">\r\n                    <div id=\"head\" className=\"\">\r\n                        <div className=\"flex flex-row flex-wrap\">\r\n                            <div className=\"font-bold\">Name</div>\r\n                            <div className=\"font-bold\">Buys</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"body\" className=\"\">\r\n\r\n                    </div>\r\n                </div>\r\n                */}\r\n\r\n                {/*\r\n                <table className=\"table-fixed w-full\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"w-2/8\">Name</th>\r\n                            <th className=\"w-1/8\">Buys</th>\r\n                            <th className=\"w-1/8\">Sells</th>\r\n                            <th className=\"w-1/8\">Fee</th>\r\n                            <th className=\"w-1/8\">Appeal</th>\r\n                            <th className=\"w-1/8\">Margin</th>\r\n                            <th className=\"w-1/8\">Transaction Rate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                    </tbody>\r\n                </table>\r\n                */}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ItemHelper from \"../utils/ItemHelper\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemSummarySlotProps = {\r\n    item: PricedItem;\r\n    accessToken: string;\r\n}\r\n\r\nexport type ItemSummarySlotState = {\r\n    isDragging: boolean;\r\n    isAdding: boolean;\r\n}\r\n\r\nexport default class ItemSummarySlot extends React.Component<ItemSummarySlotProps, ItemSummarySlotState> {\r\n    private dragTarget: React.RefObject<HTMLDivElement>;\r\n    \r\n    constructor(props: ItemSummarySlotProps) {\r\n        super(props);\r\n\r\n        this.dragTarget = React.createRef();\r\n\r\n        this.state = {\r\n            isDragging: false,\r\n            isAdding: false\r\n        };\r\n\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    onDragStart(event: React.DragEvent<HTMLDivElement>) {\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData(\"text\", this.props.item.Id.toString());\r\n\r\n        requestAnimationFrame(() => {\r\n            this.dragTarget.current?.classList.add(\"hide\");\r\n        });\r\n\r\n        this.setState({isDragging: true});\r\n    }\r\n\r\n    onDragEnd(event: React.DragEvent<HTMLDivElement>) {\r\n        this.dragTarget.current?.classList.remove(\"hide\");\r\n        this.setState({isDragging: false});\r\n    }\r\n\r\n    onAdd() {\r\n        this.setState(prevState => ({isAdding: !prevState.isAdding}));\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props;\r\n        const { isDragging, isAdding } = this.state;\r\n\r\n        return(\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-3/12 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <a href={ItemHelper.getWikiLink(item.ChatLink)} target=\"_blank\" rel=\"noopener noreferrer\" \r\n                        className=\"transition duration-150 ease-in-out italic text-gray-200 hover:text-blue-400\"\r\n                        onClick={event => event.stopPropagation()}>\r\n                        {item.Name}\r\n                    </a>\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Buys</label>\r\n                    <Price price={item.BuyPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sells</label>\r\n                    <Price price={item.SellPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Margin</label>\r\n                    <span className={`${item.Margin > 15 ? \"text-green-500\" : \"text-red-500\"}`}>{item.Margin}%</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sold</label>\r\n                    <span className=\"\">{item.Sold}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Bought</label>\r\n                    <span className=\"\">{item.Bought}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Appeal</label>\r\n                    <span className=\"\">{item.Appeal}</span>\r\n                </div>\r\n                <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                    <div className=\"relative px-2 py-1 mr-3 rounded shadow-lg bg-gray-800 text-gray-300 cursor-move\"\r\n                        draggable\r\n                        onDragStart={this.onDragStart}\r\n                        onDragEnd={this.onDragEnd}>\r\n                        <FontAwesomeIcon icon=\"arrows-alt\" />\r\n                        <div ref={this.dragTarget} className={`${isDragging ? \"\" : \"hidden\"} absolute px-2 py-1 flex flex-row items-center justify-center w-32 h-12 rounded bg-gray-800`} style={{top: \"-0.25rem\", left: \"-2.75rem\"}}>\r\n                            <img src={item.Icon} alt={item.Name} className=\"mr-3 w-8 h-8 select-none\"/>\r\n                            <span className=\"italic text-sm truncate text-gray-300 select-none\">{item.Name}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"relative\">\r\n                        <button className=\"transition duration-150 ease-in-out px-3 py-2 rounded shadow-lg bg-green-700 text-green-300 hover:bg-green-800 hover:text-green-200\"\r\n                            onClick={this.onAdd}>\r\n                            <FontAwesomeIcon icon=\"plus\" />\r\n                        </button>\r\n                        <div className={`${isAdding ? \"\" : \"hidden\"} arrow-up absolute flex flex-col justify-center w-24 rounded bg-gray-900 text-gray-300`} style={{height: \"5.45rem\", top: \"3.25rem\", left: \"-1.875rem\"}}>\r\n                            <Scrollbar noScrollX>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                            </Scrollbar>\r\n                        </div>\r\n                    </div>\r\n                    */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type SortingBarProps = {\r\n    name: string;\r\n    onLoadingStart(): void;\r\n    onLoadingStop(): void;\r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type SortingBarState = {\r\n    user: User | undefined;\r\n    pendingQuery: ItemQuery;\r\n    currentQuery: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    currentPage: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport default class SortingBar extends React.Component<SortingBarProps, SortingBarState> {\r\n    constructor(props: SortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            pendingQuery: new ItemQuery(),\r\n            currentQuery: new ItemQuery(),\r\n            filteredItems: [],\r\n            isFilterOpen: false,\r\n            currentPage: 1,\r\n            totalPages: 1\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onToPage = this.onToPage.bind(this);\r\n        this.onFirstPage = this.onFirstPage.bind(this);\r\n        this.onLastPage = this.onLastPage.bind(this);\r\n        this.onNextPage = this.onNextPage.bind(this);\r\n        this.onPrevPage = this.onPrevPage.bind(this);\r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({pendingQuery: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    async onFilter() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            const totalPages = await ApiService.GetItemPageCount(user.access_token, pendingQuery);\r\n            if (totalPages <= 0)\r\n                return;       \r\n    \r\n            onLoadingStart(); \r\n        \r\n            const items = await ApiService.GetItems(user.access_token, pendingQuery, 1) ?? [];\r\n            this.setState({filteredItems: items, currentQuery: pendingQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        const nameOnlyQuery = new ItemQuery({name: pendingQuery.name});\r\n        this.setState({filteredItems: []}, async () => {\r\n            const totalPages = await ApiService.GetItemPageCount(user.access_token, nameOnlyQuery);\r\n            if (totalPages <= 0)\r\n                return;  \r\n    \r\n            onLoadingStart();\r\n            \r\n            const items = await ApiService.GetItems(user.access_token, nameOnlyQuery, 1) ?? [];\r\n            this.setState({filteredItems: items, currentQuery: nameOnlyQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onToPage(pageNumber: number) {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (pageNumber <= 0 || pageNumber > totalPages)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n    \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, pageNumber) ?? [];\r\n            this.setState({filteredItems: items, currentPage: pageNumber}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onFirstPage() {\r\n        await this.onToPage(1);\r\n    }\r\n\r\n    async onLastPage() {\r\n        const { totalPages } = this.state;\r\n        await this.onToPage(totalPages);\r\n    }\r\n\r\n    async onNextPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage >= totalPages)\r\n            return;\r\n\r\n        \r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n    \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage + 1) ?? [];\r\n            this.setState({filteredItems: items, currentPage: currentPage + 1}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onPrevPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage <= 1)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n            \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage - 1) ?? [];\r\n            this.setState({filteredItems: items, currentPage: currentPage - 1}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.name = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.type = newType;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.rarity = newRarity;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            if (value > query.maxLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.minLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            if (value < query.minLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.maxLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.minBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.maxBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.minSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.maxSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        const { pendingQuery, filteredItems, isFilterOpen, currentPage, totalPages } = this.state;\r\n\r\n        const isSortAscending: boolean = pendingQuery.sortDirection === ItemFieldSort.Ascending;\r\n        const pageNums: number[] = [];\r\n        \r\n        for (var i = currentPage < 5 ? 1 : currentPage - 4; \r\n            i <= ((currentPage + 4) <= totalPages ? currentPage + 4 : totalPages); \r\n            i++) {\r\n            pageNums.push(i);\r\n        }\r\n\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <AuthenticationContext.Consumer>\r\n                        {props => {\r\n                            if (props.oidcUser != null && !this.state.user)\r\n                                this.setState({user: props.oidcUser}, this.onFilter);\r\n\r\n                            return(\r\n                                <></>\r\n                            );\r\n                        }}\r\n                    </AuthenticationContext.Consumer>\r\n                    <span className=\"\">{name}</span>\r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={pendingQuery.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-700 text-gray-300\" \r\n                            value={pendingQuery.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r border-l border-gray-800 bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\", zIndex: 100}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={pendingQuery.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={pendingQuery.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={pendingQuery.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={async () => {\r\n                                                    await this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            onClick={this.onFilter}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n                {totalPages > 0 && (\r\n                    <div className=\"mt-4 flex flex-row-reverse w-full\">\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onFirstPage}>\r\n                                <FontAwesomeIcon icon=\"angle-double-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">First</span>\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onPrevPage}>\r\n                                <FontAwesomeIcon icon=\"arrow-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">Prev</span>\r\n                            </button>\r\n                            {pageNums.map((value, index) => (\r\n                                <button key={index} disabled={currentPage === value} \r\n                                    className={`transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded ${currentPage === value ? \"bg-gray-900 text-gray-200 cursor-default\" : \"bg-gray-700 text-gray-300 hover:bg-gray-900 hover:text-gray-200 hover:shadow-lg\"}`}\r\n                                    onClick={() => this.onToPage(value)}>\r\n                                    {value}\r\n                                </button>\r\n                            ))}\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onNextPage}>\r\n                                <span className=\"mr-1\">Next</span>\r\n                                <FontAwesomeIcon icon=\"arrow-right\" className=\"text-xs\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onLastPage}>\r\n                                <span className=\"mr-1\">Last</span>\r\n                                <FontAwesomeIcon icon=\"angle-double-right\" className=\"text-xs\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { faDivide } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemSummarySlot from \"../components/ItemSummarySlot\";\r\nimport SortingBar from \"../components/SortingBar\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport type GeneralSearchProps = {\r\n\r\n}\r\n\r\nexport type GeneralSearchState = {\r\n    user: User | undefined;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default class GeneralSearch extends React.Component<GeneralSearchProps, GeneralSearchState> {\r\n    constructor(props: GeneralSearchProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            isLoading: false\r\n        };\r\n\r\n        this.onLoadingStart = this.onLoadingStart.bind(this);\r\n        this.onLoadingStop = this.onLoadingStop.bind(this);\r\n    }\r\n\r\n    onLoadingStart() {\r\n        this.setState({isLoading: true});\r\n    }\r\n\r\n    onLoadingStop() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const { user, isLoading } = this.state;\r\n\r\n        return(\r\n            <div className=\"main w-full h-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n\r\n                        if (user) {\r\n                            return(\r\n                                <SortingBar name=\"Results\" onLoadingStart={this.onLoadingStart} onLoadingStop={this.onLoadingStop}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX className=\"search-scroll\">\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemSummarySlot item={value} accessToken={user.access_token} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </SortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import environment from \"./environment\";\r\n\r\nconst configuration = {\r\n    client_id: \"gw2_calculator_app\",\r\n    response_type: \"id_token token\",\r\n    scope: \"openid email roles profile gw2calculator\",\r\n    automaticSilentRenew: true,\r\n    loadUserInfo: true,\r\n    authority: environment.urls.authority,\r\n    redirect_uri: `${environment.urls.host}/authentication/callback`,\r\n    post_logout_redirect_uri: `${environment.urls.host}/`,\r\n    silent_redirect_uri: `${environment.urls.host}/authentication/silent_callback`\r\n};\r\n\r\nexport default configuration;","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return(\r\n            <header className=\"\" style={{boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.2)\", zIndex: 100}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        return(\r\n                            <div className=\"flex justify-between items-center px-4 bg-indigo-700 text-indigo-200\">\r\n                                <div className=\"flex flex-row items-center\">\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-6 text-lg font-bold hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        GW2 Trading\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/search\">\r\n                                        Search\r\n                                    </Link>\r\n                                    {/*\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/list\">\r\n                                        My List\r\n                                    </Link>\r\n                                    */}\r\n                                </div>\r\n\r\n                                {props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <span className=\"mr-4\">Hello, {props.oidcUser.profile.name}!</span>\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.logout()}>\r\n                                            Logout\r\n                                        </button>\r\n                                    </div>\r\n                                ) ||\r\n                                (!props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.login()}>\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </header>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type AddItemListSlotProps = {\r\n    onAddItemList(name: string): Promise<void>;\r\n}\r\n\r\nexport type AddItemListSlotState = {\r\n    isAdding: boolean;\r\n    name: string;\r\n}\r\n\r\nexport default class AddItemListSlot extends React.Component<AddItemListSlotProps, AddItemListSlotState> {\r\n    constructor(props: AddItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdding: false,\r\n            name: \"\"\r\n        };\r\n\r\n        this.onAddItemListStart = this.onAddItemListStart.bind(this);\r\n        this.onAddItemListStop = this.onAddItemListStop.bind(this);\r\n        this.onAddItemList = this.onAddItemList.bind(this);\r\n    }\r\n\r\n    onAddItemListStart(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: true});\r\n    }\r\n\r\n    onAddItemListStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    async onAddItemList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { onAddItemList } = this.props;\r\n        const { name } = this.state;\r\n        if (!name)\r\n            return;\r\n        \r\n        await onAddItemList(name);\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    render() {\r\n        const { isAdding, name } = this.state;\r\n\r\n        return(\r\n            <div className=\"transition duration-150 ease-in-out flex flex-row items-center justify-between mr-2 xl:mx-2 border-2 border-dashed rounded-lg border-indigo-700 bg-opacity-0 bg-indigo-700 text-indigo-300 hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer\"\r\n                tabIndex={0}\r\n                onClick={this.onAddItemListStart}>\r\n                {(!isAdding && \r\n                    <div className=\"px-4 py-3\">\r\n                        <div className=\"pointer-events-none select-none\">\r\n                            <FontAwesomeIcon icon=\"plus\" className=\"mr-3\" />\r\n                            Add New List...\r\n                        </div>\r\n                    </div>\r\n                ) || \r\n                (isAdding && \r\n                    <div className=\"px-2 py-3 flex flex-row\">\r\n                        <input type=\"text\" className=\"px-2 mr-1 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={name} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({name: event.target.value})} />\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onAddItemList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onAddItemListStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport interface CustomLinkProps extends React.HTMLAttributes<HTMLElement> {\r\n    to: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function CustomLink(props: CustomLinkProps) {\r\n    const { push } = useHistory();\r\n    const { to, children, ...rest } = props;\r\n    return(\r\n        <div onClick={() => push(to)} {...rest}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type ItemListSlotProps = {\r\n    itemList: ItemList;\r\n    onDrop(id: string, itemId: number): Promise<void>;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteList(id: string): Promise<void>;\r\n}\r\n\r\nexport type ItemListSlotState = {\r\n    isMouseHover: boolean;\r\n    isDragHover: boolean;\r\n    isEditing: boolean;\r\n    newName: string;\r\n}\r\n\r\nexport default class ItemListSlot extends React.Component<ItemListSlotProps, ItemListSlotState> {\r\n    constructor(props: ItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isMouseHover: false,\r\n            isDragHover: false,\r\n            isEditing: false,\r\n            newName: props.itemList.name\r\n        };\r\n\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.onDragEnter = this.onDragEnter.bind(this);\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDragLeave = this.onDragLeave.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n\r\n        this.onEditNameStart = this.onEditNameStart.bind(this);\r\n        this.onEditNameStop = this.onEditNameStop.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.setState({isMouseHover: true});\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.setState({isMouseHover: false});\r\n    }\r\n\r\n    async onDragEnter(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: true});\r\n    }\r\n\r\n    onDragOver(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    async onDragLeave(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    async onDrop(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        const { itemList, onDrop } = this.props;\r\n        const itemId = parseInt(event.dataTransfer.getData(\"text\"));\r\n        await onDrop(itemList.id, itemId);\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    onEditNameStart(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: true, newName: this.props.itemList.name});\r\n    }\r\n\r\n    onEditNameStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onEditName(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onEditName } = this.props;\r\n        const { newName } = this.state;\r\n        if (!newName)\r\n            return;\r\n\r\n        await onEditName(itemList.id, newName);\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onDeleteList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onDeleteList } = this.props;\r\n        await onDeleteList(itemList.id);\r\n    }\r\n\r\n    render() {\r\n        const { itemList } = this.props;\r\n        const { isMouseHover, isDragHover, isEditing, newName } = this.state;\r\n\r\n        return(\r\n            <CustomLink className={`transition duration-150 ease-in-out flex flex-row items-center justify-between px-4 py-3 mr-2 min-w-40 max-w-40 rounded xl:w-full xl:rounded-none xl:mr-0 xl:mb-2 xl:min-w-0 xl:max-w-none bg-opacity-25 ${isDragHover ? \"bg-green-700 text-green-300\" : \"bg-indigo-700 text-indigo-300\"} hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer`}\r\n                to={`/list/${itemList.id}`}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onMouseLeave={this.onMouseLeave}\r\n                onDragEnter={this.onDragEnter}\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={this.onDrop}>\r\n                {(!isEditing && \r\n                    <>\r\n                        <span className=\"truncate pointer-events-none select-none\">{itemList.name}</span>\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditNameStart}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"pencil-alt\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onDeleteList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) || \r\n                (isEditing && \r\n                    <>\r\n                        <input type=\"text\" className=\"px-2 w-full xl:w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={newName} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({newName: event.target.value})} />\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditName}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onEditNameStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </CustomLink>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport AddItemListSlot from \"./AddItemListSlot\";\r\nimport ItemListSlot from \"./ItemListSlot\";\r\n\r\nexport type SidebarProps = {\r\n\r\n}\r\n\r\nexport type SidebarState = {\r\n    user: User | undefined;\r\n    itemLists: ItemList[];\r\n}\r\n\r\nexport default class Sidebar extends React.Component<SidebarProps, SidebarState> {\r\n    constructor(props: SidebarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            itemLists: []\r\n        };\r\n\r\n        this.refreshItemLists = this.refreshItemLists.bind(this);\r\n\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onAddList = this.onAddList.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    async refreshItemLists() {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const itemLists = await ApiService.GetItemLists(user.access_token);\r\n        if (!itemLists)\r\n            return;\r\n\r\n        this.setState({itemLists});\r\n    }\r\n\r\n    async onAddItem(id: string, itemId: number) {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        await ApiService.AddListItem(user.access_token, id, itemId);\r\n    }\r\n\r\n    async onEditName(id: string, name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.UpdateListName(user.access_token, id, name);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists[index].name = name;\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onAddList(name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.CreateList(user.access_token, name);\r\n        if (result) {\r\n            const itemList: ItemList = {\r\n                id: result,\r\n                name: name\r\n            };\r\n            itemLists.push(itemList);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onDeleteList(id: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteList(user.access_token, id);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists.splice(index, 1);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { itemLists, user } = this.state;\r\n\r\n        return(\r\n            <div className=\"sidebar py-4 flex w-full h-24 xl:w-64 xl:h-full bg-gray-900\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser}, () => {\r\n                                this.refreshItemLists();\r\n                            });\r\n                        if (user) {\r\n                            return(\r\n                                <Scrollbar>\r\n                                    <div className=\"flex flex-row px-4 xl:px-0 xl:flex-col whitespace-no-wrap\">\r\n                                        {itemLists.map((itemList, index) => (\r\n                                            <React.Fragment key={index}>\r\n                                                <ItemListSlot itemList={itemList} onDrop={this.onAddItem} onEditName={this.onEditName} onDeleteList={this.onDeleteList} />\r\n                                            </React.Fragment>\r\n                                        ))}\r\n                                        <AddItemListSlot onAddItemList={this.onAddList} />\r\n                                    </div>\r\n                                </Scrollbar>\r\n                            );\r\n                        }\r\n\r\n                        return(<></>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class NotFound extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex items-center justify-center bg-gray-800 text-gray-200\">\r\n                <div className=\"flex flex-col\">\r\n                    <span className=\"text-6xl\">404</span>\r\n                    <span className=\"text-2xl\">Page Not Found.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class NotAuthenticated extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex items-center justify-center bg-gray-800 text-gray-200\">\r\n                <div className=\"flex flex-col\">\r\n                    <span className=\"text-6xl\">401</span>\r\n                    <span className=\"text-2xl\">Not Authenticated.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class NotAuthorized extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex items-center justify-center bg-gray-800 text-gray-200\">\r\n                <div className=\"flex flex-col\">\r\n                    <span className=\"text-6xl\">401</span>\r\n                    <span className=\"text-2xl\">Not Authorized.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport MyList from \"./pages/MyList\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport GeneralSearch from \"./pages/GeneralSearch\";\r\nimport { BrowserRouter, Redirect, Route, Switch, useParams } from \"react-router-dom\";\r\nimport { AuthenticationProvider, withOidcSecure } from \"@axa-fr/react-oidc-context\";\r\nimport configuration from \"./open-id-config\";\r\nimport Header from \"./components/Header\";\r\nimport { config } from \"process\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NotFound from \"./pages/error/NotFound\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport NotAuthenticated from \"./pages/error/NotAuthenticated\";\r\nimport NotAuthorized from \"./pages/error/NotAuthorized\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    const afterLogin = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                <span className=\"\">Logging in...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const afterLogout = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                <span className=\"\">Logging out...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    return(\r\n        <div className=\"flex flex-col\">\r\n            <BrowserRouter>\r\n                <AuthenticationProvider configuration={configuration}\r\n                    notAuthenticated={NotAuthenticated}\r\n                    notAuthorized={NotAuthorized}\r\n                    callbackComponentOverride={afterLogin}\r\n                    authenticating={afterLogout}>\r\n                    <Header />\r\n                    <Redirect path=\"/authentication/callback\" to=\"/\" />\r\n                    <div className=\"flex flex-col xl:flex-row-reverse\" style={{height: \"calc(100vh - 4rem)\"}}>\r\n                        <Sidebar />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={GeneralSearch} />\r\n                            <Route path=\"/search\" component={GeneralSearch} />\r\n                            {/*\r\n                            <Route exact path=\"/list\" component={MyList} />\r\n                            */}\r\n                            <Route exact path=\"/list/:id\" component={MyListComponent} />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                </AuthenticationProvider>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MyListComponent() {\r\n    const { id } = useParams();\r\n\r\n    return(\r\n        <MyList listId={id} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}