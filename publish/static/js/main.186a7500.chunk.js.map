{"version":3,"sources":["utils/HistoryTimespan.ts","dataContracts/HistoryItem.ts","services/LocalDB.ts","components/ItemGraph.tsx","components/Price.tsx","utils/ItemField.ts","utils/ItemRarity.ts","utils/ItemType.ts","components/ItemComparisonSlot.tsx","dataContracts/ItemQuery.ts","components/RarityMultiSelect.tsx","components/TypeMultiSelect.tsx","components/ListSortingBar.tsx","dataContracts/HistoryItemQuery.ts","dataContracts/PricedItem.ts","environment.ts","services/ApiService.ts","pages/MyList.tsx","pages/Dashboard.tsx","components/ItemSummarySlot.tsx","components/SortingBar.tsx","pages/GeneralSearch.tsx","open-id-config.ts","components/Header.tsx","components/AddItemListSlot.tsx","components/CustomLink.tsx","components/ItemListSlot.tsx","components/Sidebar.tsx","pages/error/NotFound.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["HistoryTimespan","HistoryItem","id","chatLink","name","icon","description","type","rarity","level","history","Id","ChatLink","Name","Icon","Description","Type","Rarity","Level","History","this","predicate","filter","HistoryItemFactory","item","parseInt","e","console","log","items","arr","forEach","itemResult","ToHistoryItem","push","historyItems","version","stores","open","catch","error","table","mapToClass","timespan","get","OneMonth","now","Date","OneHour","SixHours","TwelveHours","OneDay","ThreeDays","OneWeek","TwoWeeks","timeFromNow","setTime","getTime","setDate","getDate","filterHistory","price","time","getHistoryItem","add","update","newHistory","unshift","currentPrices","monthFromNow","Dexie","ItemGraph","props","dashboard","buyPriceChart","sellPriceChart","buyVolumeChart","sellVolumeChart","state","createChart","bind","createOHLCChart","itemId","LocalDB","timeSpanInMs","firstPriceSnapshot","length","startingTime","buyPricesData","sellPricesData","buyVolumeData","sellVolumeData","pricesIn15Mins","timeTracker","i","priceSnapshot","position","high","bought","low","bid","sold","offers","nextPriceSnapshot","undefined","minBuy","Number","POSITIVE_INFINITY","maxBuy","minSell","maxSell","j","buyPrice","sellPrice","firstSnapshot","lastSnapshot","buyDataPoint","sellDataPoint","lightningChart","Dashboard","theme","Themes","dark","numberOfColumns","numberOfRows","container","toString","columnIndex","rowIndex","columnSpan","rowSpan","createAreaChart","title","data","options","chart","createChartXY","dateOrigin","getDefaultAxisX","setTickStrategy","AxisTickStrategies","DateTime","tickStrategy","setDateOrigin","setTitle","setAutoCursor","cursor","disposeTickMarkerY","setGridStrokeYStyle","emptyLine","setPadding","right","priceLegend","addLegendBox","LegendBoxBuilders","HorizontalLegendBox","setPosition","x","y","setOrigin","UIOrigins","RightTop","priceAxisY","getDefaultAxisY","setScrollStrategy","AxisScrollStrategies","expansion","areaRangeFill","SolidFill","setColor","ColorRGBA","areaRangeStroke","SolidLine","setFillStyle","setThickness","areaRange","addAreaRangeSeries","yAxis","setName","setHighFillStyle","setLowFillStyle","setHighStrokeStyle","setLowStrokeStyle","setMaxPointCount","setMouseInteractions","setCursorEnabled","lineStroke","movingAverage","addLineSeries","setStrokeStyle","borderBlack","fillBrightRed","fillDimRed","fillBrightGreen","fillDimGreen","candles","addOHLCSeries","setFigureWidth","setPositiveStyle","candlestick","setBodyFillStyle","setBodyStrokeStyle","setNegativeStyle","priceNums","n","setButtonOnFillStyle","getFillStyle","setButtonOnStrokeStyle","setResultTableFormatter","builder","series","segment","getOpen","close","getClose","addRow","getName","axisX","formatValue","getPosition","getHigh","toFixed","getLow","ohlc","shift","priceSum","num","priceAverage","sqrDeviationSum","Math","pow","stdDeviation","sqrt","areaPoint","smaPoint","yBoundsPrice","min","getYMin","max","getYMax","range","setInterval","setViewNicely","topTitle","bottomTitle","volumeLegend","volumeAxisY","topAreaFill","topAreaStroke","topArea","addAreaSeries","AreaSeriesTypes","Positive","setCursorInterpolationEnabled","bottomAreaFill","bottomAreaStroke","bottomArea","Negative","dataPoint","dispose","className","React","Component","Price","priceColor","isNegative","absPrice","abs","gold","floor","silver","copper","style","fontSize","src","alt","defaultProps","ItemField","ItemFieldSort","ItemRarity","ItemType","ItemComparisonSlot","amount","isOpen","toggleOpen","setState","deleteItem","revenue","round","SellPrice","expenditure","BuyPrice","totalFees","netProfit","onClick","htmlFor","defaultValue","onChange","event","value","target","isNaN","Appeal","Margin","Sold","Bought","height","ItemQuery","minLevel","maxLevel","minBuyPrice","maxBuyPrice","minSellPrice","maxSellPrice","sortBy","sortDirection","All","Descending","valueOf","RarityMultiSelect","toggleRarity","checkRarity","otherRarity","newRarity","None","selectedText","isPowerOf2","tabIndex","width","top","zIndex","Object","keys","map","index","itemRarity","key","TypeMultiSelect","toggleType","checkType","otherType","newType","itemType","ListSortingBar","query","filteredItems","isFilterOpen","resetQueryValues","toggleFilter","onFilterOpen","onFilterClose","onFilter","onSearch","sortCompare","onNameChange","onTypeChange","onRarityChange","onMinLevelChange","onMaxLevelChange","onMinBuyPriceChange","onMaxBuyPriceChange","onMinSellPriceChange","onMaxSellPriceChange","onSort","onSortDirection","onSetTimespan","prevProps","toLowerCase","includes","sort","preventDefault","a","b","isSortAscending","Ascending","localeCompare","Buys","Sells","prevState","callback","isDataStale","onReload","children","onSubmit","padding","HistoryItemQuery","hasDetails","newest","PricedItemFactory","parseFloat","appeal","margin","ToPricedItem","environment","urls","authority","host","gw2calculator","accessToken","pageNumber","url","URLSearchParams","toObject","ApiService","Get","response","json","result","ok","ToPricedItems","queries","Post","ToHistoryItems","itemLists","itemList","itemIds","idNum","listId","fetch","method","mode","cache","headers","body","JSON","stringify","MyList","user","isLoading","updateId","updateItems","setTimespan","GetItemList","access_token","ids","historyItemQueries","getNewestTime","GetHistoryItems","pricedItems","itemQuery","deleteOldPrices","setHistoryItem","setHistoryItemPrices","dbItem","pricedItem","historyToPriced","setTimeout","DeleteListItem","tempItems","itemIndex","findIndex","splice","Consumer","oidcUser","sortedItems","noScrollX","newestPrice","sumSold","sumBought","avgSold","avgBought","ItemSummarySlot","dragTarget","createRef","isDragging","isAdding","onDragStart","onDragEnd","onAdd","stopPropagation","dataTransfer","setData","requestAnimationFrame","current","classList","remove","draggable","ref","left","SortingBar","pendingQuery","currentQuery","currentPage","totalPages","onToPage","onFirstPage","onLastPage","onNextPage","onPrevPage","onLoadingStart","onLoadingStop","GetItemPageCount","GetItems","nameOnlyQuery","pageNums","disabled","GeneralSearch","configuration","client_id","response_type","scope","automaticSilentRenew","loadUserInfo","redirect_uri","post_logout_redirect_uri","silent_redirect_uri","Header","boxShadow","to","profile","logout","login","AddItemListSlot","onAddItemListStart","onAddItemListStop","onAddItemList","paddingTop","paddingBottom","CustomLink","useHistory","rest","ItemListSlot","isMouseHover","isDragHover","isEditing","newName","onMouseEnter","onMouseLeave","onDragEnter","onDragOver","onDragLeave","onDrop","onEditNameStart","onEditNameStop","onEditName","onDeleteList","getData","Sidebar","refreshItemLists","onAddItem","onAddList","GetItemLists","AddListItem","UpdateListName","list","CreateList","DeleteList","NotFound","MyListComponent","useParams","library","fas","App","callbackComponentOverride","logo","authenticating","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.186a7500.chunk.js","sourcesContent":["export enum HistoryTimespan {\r\n    OneHour,\r\n    SixHours,\r\n    TwelveHours,\r\n    OneDay,\r\n    ThreeDays,\r\n    OneWeek,\r\n    TwoWeeks,\r\n    OneMonth\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { ItemPriceSnapshot } from \"./ItemPriceSnapshot\";\r\n\r\nexport class HistoryItemPrices {\r\n    public readonly Id: number;\r\n    public readonly History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.History = history;\r\n    }\r\n}\r\n\r\nexport class HistoryItem {\r\n    public readonly Id: number;\r\n    public readonly ChatLink: string;\r\n    public readonly Name: string;\r\n    public readonly Icon: string;\r\n    public readonly Description: string;\r\n    public readonly Type: ItemType;\r\n    public readonly Rarity: ItemRarity;\r\n    public readonly Level: number;\r\n    public History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, chatLink: string, name: string, icon: string, description: string, type: ItemType, rarity: ItemRarity, level: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.ChatLink = chatLink;\r\n        this.Name = name;\r\n        this.Icon = icon;\r\n        this.Description = description;\r\n        this.Type = type;\r\n        this.Rarity = rarity;\r\n        this.Level = level;\r\n        this.History = history;\r\n    }\r\n\r\n    filterHistory(predicate: (value: ItemPriceSnapshot, index: number, array: ItemPriceSnapshot[]) => unknown) {\r\n        this.History = this.History.filter(predicate);\r\n    }\r\n}\r\n\r\nexport class HistoryItemFactory {\r\n    static ToHistoryItem(item: any): HistoryItem | null {\r\n        try {\r\n            const result = new HistoryItem (\r\n                item.id, \r\n                item.chatLink,\r\n                item.name, \r\n                item.icon, \r\n                item.description,\r\n                parseInt(item.type),\r\n                parseInt(item.rarity),\r\n                item.level,\r\n                item.history\r\n            );\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToHistoryItems(items: any): HistoryItem[] {\r\n        const arr: HistoryItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = HistoryItemFactory.ToHistoryItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import Dexie from \"dexie\";\r\nimport { HistoryItem, HistoryItemPrices } from \"../dataContracts/HistoryItem\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nclass LocalDB extends Dexie {\r\n    private historyItems: Dexie.Table<HistoryItem, number>;\r\n\r\n    constructor() {\r\n        super(\"GW2History\");\r\n\r\n        this.version(1).stores({\r\n            historyItems: \"Id\"\r\n        });\r\n        this.open().catch(error => {\r\n            console.error(`Opening the db '${this.name}' failed: ${error}`);\r\n        });\r\n\r\n        this.historyItems = this.table(\"historyItems\");\r\n        this.historyItems.mapToClass(HistoryItem);\r\n    }\r\n\r\n    async getHistoryItem(id: number, timespan: HistoryTimespan): Promise<HistoryItem | null> {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return null;\r\n        \r\n        if (timespan === HistoryTimespan.OneMonth)\r\n            return item;\r\n\r\n        const now = new Date();\r\n        let timeFromNow: number;\r\n        switch (timespan) {\r\n        case HistoryTimespan.OneHour:\r\n            timeFromNow = now.setTime(now.getTime() - (1 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.SixHours:\r\n            timeFromNow = now.setTime(now.getTime() - (6 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.TwelveHours:\r\n            timeFromNow = now.setTime(now.getTime() - (12 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.OneDay:\r\n            timeFromNow = now.setDate(now.getDate() - 1);\r\n            break;\r\n        case HistoryTimespan.ThreeDays:\r\n            timeFromNow = now.setDate(now.getDate() - 3);\r\n            break;\r\n        case HistoryTimespan.OneWeek:\r\n            timeFromNow = now.setDate(now.getDate() - 7);\r\n            break;\r\n        case HistoryTimespan.TwoWeeks:\r\n            timeFromNow = now.setDate(now.getDate() - 14);\r\n            break;\r\n        default:\r\n            timeFromNow = now.setDate(now.getDate() - 30);\r\n            break;\r\n        }\r\n        \r\n        item.filterHistory(price => price.time >= timeFromNow);\r\n        return item;\r\n    }\r\n\r\n    async hasDetails(id: number): Promise<boolean> {\r\n        const item = await this.historyItems.get(id);\r\n        if (item && item.Name)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    async getNewestTime(id: number): Promise<number> {\r\n        const item = await this.getHistoryItem(id, HistoryTimespan.OneMonth);\r\n        if (!item || !item.History)\r\n            return 0;\r\n        \r\n        return item.History[0].time;\r\n    }\r\n\r\n    async setHistoryItem(item: HistoryItem) {\r\n        if (!item)\r\n            return;\r\n            \r\n        const dbItem = await this.historyItems.get(item.Id);\r\n        if (!dbItem)\r\n            await this.historyItems.add(item, item.Id);\r\n\r\n        await this.historyItems.update(item.Id, {\r\n            ChatLink: item.ChatLink,\r\n            Name: item.Name,\r\n            Icon: item.Icon,\r\n            Description: item.Description,\r\n            Type: item.Type,\r\n            Rarity: item.Rarity,\r\n            Level: item.Level,\r\n            History: item.History\r\n        });\r\n    }\r\n\r\n    async setHistoryItemPrices(id: number, newHistory: ItemPriceSnapshot[]) {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return;\r\n\r\n        // Else, update the history of the current item to include the new history\r\n        // Unshift (push to front) here because history is sorted by time descending,\r\n        // and the higher the time value, the newer it is.\r\n        item.History.unshift(...newHistory);\r\n        await this.historyItems.update(id, {History: item.History});\r\n    }\r\n\r\n    async deleteOldPrices(id: number) {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return;\r\n        \r\n        const currentPrices: ItemPriceSnapshot[] = [];\r\n        const now: Date = new Date();\r\n        const monthFromNow: number = now.setDate(now.getDate() - 30);\r\n        item.History.forEach(price => {\r\n            if (price.time >= monthFromNow)\r\n                currentPrices.push(price);\r\n        });\r\n\r\n        await this.historyItems.update(id, {History: currentPrices});\r\n    }\r\n}\r\n\r\nexport default new LocalDB();","import { AreaPoint, AreaSeriesTypes, AutoCursorModes, AxisScrollStrategies, AxisTickStrategies, ChartOptions, ChartXY, ColorRGBA, Dashboard, emptyLine, InternalBackground, LegendBox, LegendBoxBuilders, LegendBoxEntry, lightningChart, LineStyle, Point, PointableBackground, PointMarker, SolidFill, SolidLine, Themes, UIBackground, UIElement, UIOrigins, UIPartWithBackground, UITextBox, XOHLC } from \"@arction/lcjs\";\r\nimport { createOHLCGenerator } from \"@arction/xydata\";\r\nimport React from \"react\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nexport type ItemGraphProps = {\r\n    itemId: number;\r\n}\r\n\r\nexport type ItemGraphState = {\r\n\r\n}\r\n\r\nexport default class ItemGraph extends React.Component<ItemGraphProps, ItemGraphState> {\r\n    private dashboard: Dashboard | undefined;\r\n    private buyPriceChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private sellPriceChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private buyVolumeChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private sellVolumeChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n\r\n    constructor(props: ItemGraphProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.createChart = this.createChart.bind(this);\r\n        this.createOHLCChart = this.createOHLCChart.bind(this);\r\n    }\r\n\r\n    async createChart() {\r\n        const { itemId } = this.props;\r\n        // Get the history item from the local db here\r\n        /* */\r\n        const item = await LocalDB.getHistoryItem(itemId, HistoryTimespan.OneMonth);\r\n        if (!item)\r\n            return;\r\n\r\n        // TODO: Replace this big number with the time of the earliest price snapshot in history\r\n        const timeSpanInMs = 15 * 60 * 1000; // 15 mins\r\n        const firstPriceSnapshot = item.History[item.History.length - 1];\r\n        const startingTime = firstPriceSnapshot.time - (firstPriceSnapshot.time % timeSpanInMs);\r\n        const buyPricesData: XOHLC[] = [];\r\n        const sellPricesData: XOHLC[] = [];\r\n        const buyVolumeData: AreaPoint[] = [];\r\n        const sellVolumeData: AreaPoint[] = [];\r\n\r\n        let pricesIn15Mins: ItemPriceSnapshot[] = [];\r\n        let timeTracker = 0;\r\n        // Go backwards here because the history is sorted in reverse\r\n        for (var i = item.History.length - 1; i >= 0; i--) {\r\n            const priceSnapshot = item.History[i];\r\n            const time = timeTracker + startingTime;\r\n\r\n            buyVolumeData.push({position: priceSnapshot.time - startingTime, high: priceSnapshot.bought, low: priceSnapshot.bid * -1});\r\n            sellVolumeData.push({position: priceSnapshot.time - startingTime, high: priceSnapshot.sold, low: priceSnapshot.offers * -1});\r\n\r\n            if (priceSnapshot.time < time + timeSpanInMs && priceSnapshot.time >= time)\r\n                pricesIn15Mins.push(priceSnapshot);\r\n\r\n            // This is for checking if there's no next price snapshot\r\n            const nextPriceSnapshot = i - 1 >= 0 ? item.History[i - 1] : undefined;\r\n            \r\n            // This means the next price snapshot is already beyond the time interval we're compiling\r\n            if (!nextPriceSnapshot || nextPriceSnapshot.time >= time + timeSpanInMs) {\r\n                timeTracker += timeSpanInMs;\r\n                if (pricesIn15Mins.length <= 0)\r\n                    continue;\r\n\r\n                let minBuy = Number.POSITIVE_INFINITY;\r\n                let maxBuy = 0;\r\n                let minSell = Number.POSITIVE_INFINITY;\r\n                let maxSell = 0;\r\n\r\n                for (var j = 0; j < pricesIn15Mins.length; j++) {\r\n                    const price = pricesIn15Mins[j];\r\n                    if (price.buyPrice < minBuy)\r\n                        minBuy = price.buyPrice;\r\n                    if (price.buyPrice > maxBuy)\r\n                        maxBuy = price.buyPrice;\r\n\r\n                    if (price.sellPrice < minSell)\r\n                        minSell = price.sellPrice;\r\n                    if (price.sellPrice > maxSell)\r\n                        maxSell = price.sellPrice;\r\n                }\r\n\r\n                const firstSnapshot = pricesIn15Mins[0];\r\n                const lastSnapshot = pricesIn15Mins[pricesIn15Mins.length - 1];\r\n                const buyDataPoint: XOHLC = [timeTracker, firstSnapshot.buyPrice, maxBuy, minBuy, lastSnapshot.buyPrice];\r\n                const sellDataPoint: XOHLC = [timeTracker, firstSnapshot.sellPrice, maxSell, minSell, lastSnapshot.sellPrice];\r\n\r\n                buyPricesData.push(buyDataPoint);\r\n                sellPricesData.push(sellDataPoint);\r\n\r\n                minBuy = Number.POSITIVE_INFINITY;\r\n                maxBuy = 0;\r\n                minSell = Number.POSITIVE_INFINITY;\r\n                maxSell = 0;\r\n                pricesIn15Mins = [];\r\n            }\r\n        }\r\n        /**/\r\n\r\n        // Define all chart options here\r\n        this.dashboard = lightningChart().Dashboard({\r\n            theme: Themes.dark,\r\n            numberOfColumns: 2,\r\n            numberOfRows: 2,\r\n            container: itemId.toString()\r\n        });\r\n\r\n        this.buyPriceChart = this.createOHLCChart(\"Buy Prices\", startingTime, buyPricesData, {\r\n            columnIndex: 0,\r\n            rowIndex: 0,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n        this.sellPriceChart = this.createOHLCChart(\"Sell Prices\", startingTime, sellPricesData, {\r\n            columnIndex: 1,\r\n            rowIndex: 0,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n\r\n        this.buyVolumeChart = this.createAreaChart(\"Buy Volume \\ud835\\udeab\", \"Bought\", \"Bid\", startingTime, buyVolumeData, {\r\n            columnIndex: 0,\r\n            rowIndex: 1,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n        this.sellVolumeChart = this.createAreaChart(\"Sell Volume \\ud835\\udeab\", \"Sold\", \"Offers\", startingTime, sellVolumeData, {\r\n            columnIndex: 1,\r\n            rowIndex: 1,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n    }\r\n\r\n    createOHLCChart(title: string, startingTime: number, data: XOHLC[], options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        //#region Buy Price Chart\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        // TODO: Make this the date and time of the very first price snapshot for an item\r\n        const dateOrigin = new Date(startingTime); \r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                (tickStrategy) => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setAutoCursor(cursor => {\r\n                cursor.disposeTickMarkerY();\r\n                cursor.setGridStrokeYStyle(emptyLine);\r\n            })\r\n            .setPadding({right: 40});\r\n\r\n        const priceLegend = chart\r\n            .addLegendBox(LegendBoxBuilders.HorizontalLegendBox)\r\n            .setPosition({x: 100, y: 100})\r\n            .setOrigin(UIOrigins.RightTop);\r\n\r\n        const priceAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(\"Price\");\r\n\r\n        // Colors of the Bollinger Band\r\n        const areaRangeFill = new SolidFill().setColor(ColorRGBA(100, 149, 237, 50));\r\n        const areaRangeStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(100, 149, 237)))\r\n            .setThickness(1);\r\n\r\n        // Settings of the Bollinger Band\r\n        const areaRange = chart.addAreaRangeSeries({ yAxis: priceAxisY })\r\n            .setName(\"Bollinger Band\")\r\n            .setHighFillStyle(areaRangeFill)\r\n            .setLowFillStyle(areaRangeFill)\r\n            .setHighStrokeStyle(areaRangeStroke)\r\n            .setLowStrokeStyle(areaRangeStroke)\r\n            .setMaxPointCount(0) // Solves the part of the area vanishing when zooming in\r\n            .setMouseInteractions(false)\r\n            .setCursorEnabled(false);\r\n\r\n        const lineStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(237, 137, 54)))\r\n            .setThickness(2);\r\n        const movingAverage = chart.addLineSeries()\r\n            .setName(\"Moving Average\")\r\n            .setStrokeStyle(lineStroke)\r\n            .setMouseInteractions(false)\r\n            .setCursorEnabled(false);\r\n\r\n        const priceFigureWidth = 5.0;\r\n        const borderBlack = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(26, 32, 44)))\r\n            .setThickness(1);\r\n        const fillBrightRed = new SolidFill().setColor(ColorRGBA(229, 62, 62));\r\n        const fillDimRed = new SolidFill().setColor(ColorRGBA(116, 42, 42));\r\n        const fillBrightGreen = new SolidFill().setColor(ColorRGBA(62, 225, 62));\r\n        const fillDimGreen = new SolidFill().setColor(ColorRGBA(34, 84, 61));\r\n\r\n        const candles = chart\r\n            .addOHLCSeries({yAxis: priceAxisY});\r\n\r\n        candles.setName(\"Candlesticks\")\r\n            .setFigureWidth(priceFigureWidth)\r\n            .setPositiveStyle(candlestick => \r\n                candlestick\r\n                    .setBodyFillStyle(fillBrightGreen)\r\n                    .setBodyStrokeStyle(borderBlack)\r\n                    .setStrokeStyle(new SolidLine()\r\n                        .setFillStyle(fillDimGreen)\r\n                        .setThickness(2))\r\n            )\r\n            .setNegativeStyle(candlestick => \r\n                candlestick\r\n                    .setBodyFillStyle(fillBrightRed)\r\n                    .setBodyStrokeStyle(borderBlack)\r\n                    .setStrokeStyle(new SolidLine()\r\n                        .setFillStyle(fillDimRed)\r\n                        .setThickness(2))\r\n            );\r\n\r\n        const priceNums: number[] = [];\r\n        let n: number = 0;\r\n        const period = 30;\r\n        const add: (ohlc: XOHLC) => void = (ohlc) => {\r\n            candles.add(ohlc);\r\n\r\n            priceNums.push((ohlc[2] + ohlc[3] + ohlc[4]) / 3);\r\n\r\n            if (n < period) {\r\n                n++;\r\n            } else {\r\n                priceNums.shift();\r\n            }\r\n\r\n            let priceSum = 0;\r\n            priceNums.forEach(num => priceSum += num);\r\n            const priceAverage = priceSum / n;\r\n\r\n            let sqrDeviationSum = 0;\r\n            priceNums.forEach(num => sqrDeviationSum += Math.pow(num - priceAverage, 2));\r\n            const stdDeviation = Math.sqrt(sqrDeviationSum / n);\r\n            \r\n            const areaPoint: AreaPoint = {\r\n                position: ohlc[0],\r\n                high: priceAverage + (stdDeviation * 2),\r\n                low: priceAverage - (stdDeviation * 2)\r\n            };\r\n            areaRange.add(areaPoint);\r\n\r\n            const smaPoint: Point = {\r\n                x: ohlc[0],\r\n                y: priceAverage\r\n            };\r\n            movingAverage.add(smaPoint);\r\n        };\r\n\r\n        /*\r\n        createOHLCGenerator()\r\n            .setNumberOfPoints(100)\r\n            .setDataFrequency(15 * 60 * 1000)\r\n            .generate()\r\n            .toPromise()\r\n            .then(data => {\r\n                data.forEach(add);\r\n                setViewNicely();\r\n            });\r\n        /**/\r\n        //#endregion\r\n\r\n        const entries: LegendBoxEntry[] = priceLegend.add(chart) as LegendBoxEntry[];\r\n        entries[0]\r\n            .setButtonOnFillStyle(areaRangeStroke.getFillStyle())\r\n            .setButtonOnStrokeStyle(emptyLine);\r\n\r\n        const setViewNicely = () => {\r\n            const yBoundsPrice = { min: (areaRange.getYMin() ?? 0), max: (areaRange.getYMax() ?? 0), range: (areaRange.getYMax() ?? 0) - (areaRange.getYMin() ?? 0) };\r\n            // Set Y axis intervals so that series don't overlap and volume is under stocks.\r\n            priceAxisY.setInterval(yBoundsPrice.min - yBoundsPrice.range * .33, yBoundsPrice.max);\r\n        };\r\n\r\n        // For the candlesticks on hover tooltip\r\n        candles.setResultTableFormatter((builder, series, segment) => {\r\n            const open = segment.getOpen();\r\n            const close = segment.getClose();\r\n            return builder\r\n                .addRow(series.getName())\r\n                .addRow(series.axisX.formatValue(segment.getPosition()))\r\n                .addRow(`High ${segment.getHigh().toFixed(2)}`)\r\n                .addRow(`${open > close ? `Open ${open.toFixed(2)}` : `Close ${close.toFixed(2)}`}`)\r\n                .addRow(`${open < close ? `Open ${open.toFixed(2)}` : `Close ${close.toFixed(2)}`}`)\r\n                .addRow(`Low ${segment.getLow().toFixed(2)}`);\r\n        });\r\n\r\n        /* */\r\n        data.forEach(add);\r\n        setViewNicely();\r\n        /**/\r\n\r\n        return chart;\r\n    }\r\n\r\n    createAreaChart(title: string, topTitle: string, bottomTitle: string, startingTime: number, data: AreaPoint[], options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        const dateOrigin = new Date(startingTime);\r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                tickStrategy => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setPadding({right: 40});\r\n\r\n        const volumeLegend = chart\r\n            .addLegendBox(LegendBoxBuilders.HorizontalLegendBox)\r\n            .setPosition({x: 100, y: 100})\r\n            .setOrigin(UIOrigins.RightTop);\r\n\r\n        const volumeAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(\"Volume\");\r\n\r\n        \r\n        const topAreaFill = new SolidFill().setColor(ColorRGBA(72, 187, 120, 50));\r\n        const topAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(72, 187, 120)))\r\n            .setThickness(1);\r\n        \r\n        const topArea = chart.addAreaSeries({ type: AreaSeriesTypes.Positive, yAxis: volumeAxisY })\r\n            .setName(topTitle)\r\n            .setFillStyle(topAreaFill)\r\n            .setStrokeStyle(topAreaStroke)\r\n            .setCursorInterpolationEnabled(false)\r\n            .setMaxPointCount(0); // Solves the part of the area vanishing when zooming in\r\n            \r\n        const bottomAreaFill = new SolidFill().setColor(ColorRGBA(245, 101, 101, 50));\r\n        const bottomAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(245, 101, 101)))\r\n            .setThickness(1);\r\n        \r\n        const bottomArea = chart.addAreaSeries({ type: AreaSeriesTypes.Negative, yAxis: volumeAxisY })\r\n            .setName(bottomTitle)\r\n            .setFillStyle(bottomAreaFill)\r\n            .setStrokeStyle(bottomAreaStroke)\r\n            .setCursorInterpolationEnabled(false)\r\n            .setMaxPointCount(0); // Solves the part of the area vanishing when zooming in\r\n        \r\n        topArea.setResultTableFormatter((builder, series, position, high) => {\r\n            return builder\r\n                .addRow(topTitle)\r\n                .addRow(series.axisX.formatValue(position))\r\n                .addRow(`Amount: ${high.toFixed(0)}`);\r\n        });\r\n        \r\n        bottomArea.setResultTableFormatter((builder, series, position, high) => {\r\n            return builder\r\n                .addRow(bottomTitle)\r\n                .addRow(series.axisX.formatValue(position))\r\n                .addRow(`Amount: ${(high * -1).toFixed(0)}`);\r\n        });\r\n\r\n        volumeLegend.add(chart);\r\n\r\n        data.forEach(dataPoint => {\r\n            topArea.add({x: dataPoint.position, y: dataPoint.high});\r\n            bottomArea.add({x: dataPoint.position, y: dataPoint.low});\r\n        });\r\n\r\n        return chart;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.createChart();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.sellVolumeChart?.dispose();\r\n        this.buyVolumeChart?.dispose();\r\n        this.sellPriceChart?.dispose();\r\n        this.buyPriceChart?.dispose();\r\n        this.dashboard?.dispose();\r\n\r\n        this.sellVolumeChart = undefined;\r\n        this.buyVolumeChart = undefined;\r\n        this.sellPriceChart = undefined;\r\n        this.buyPriceChart = undefined;\r\n        this.dashboard = undefined;\r\n    }\r\n\r\n    render() {\r\n        const { itemId } = this.props;\r\n\r\n        return(\r\n            <div id={itemId.toString()} className=\"h-full\"></div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nexport type PriceProps = {\r\n    price: number;\r\n    priceColor: string;\r\n}\r\n\r\nexport type PriceState = {\r\n\r\n}\r\n\r\nexport default class Price extends React.Component<PriceProps, PriceState> {\r\n\r\n    static defaultProps: PriceProps = {\r\n        price: 0,\r\n        priceColor: \"text-gray-200\"\r\n    }\r\n\r\n    constructor(props: PriceProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { price, priceColor } = this.props;\r\n        const isNegative = price < 0;\r\n        const absPrice = Math.abs(price);\r\n\r\n        const gold = Math.floor(absPrice / 10000);\r\n        const silver = Math.floor(absPrice % 10000 / 100);\r\n        const copper = Math.floor(absPrice % 10000 % 100);\r\n\r\n        return (\r\n            <div className=\"flex flex-row\">\r\n                <div id=\"gold\" className=\"mr-1 flex flex-row items-center\">\r\n                    <FontAwesomeIcon icon=\"minus\" className={`${isNegative ? \"\" : \"hidden\"} ${priceColor} mr-1`} style={{fontSize: \"0.5rem\"}} />\r\n                    <img src=\"https://wiki.guildwars2.com/images/d/d1/Gold_coin.png\" alt=\"Gold Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{gold}</span>\r\n                </div>\r\n                <div id=\"silver\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/3/3c/Silver_coin.png\" alt=\"Silver Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{silver}</span>\r\n                </div>\r\n                <div id=\"copper\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/e/eb/Copper_coin.png\" alt=\"Copper Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{copper}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export enum ItemField {\r\n    Name,\r\n    Buys,\r\n    Sells,\r\n    Appeal,\r\n    Margin,\r\n    Sold,\r\n    Bought\r\n}\r\n\r\nexport enum ItemFieldSort {\r\n    Ascending,\r\n    Descending  \r\n}","export enum ItemRarity {\r\n    None = 0,\r\n    Junk = 1,\r\n    Basic = 2,\r\n    Fine = 4,\r\n    Masterwork = 8,\r\n    Rare = 16,\r\n    Exotic = 32,\r\n    Ascended = 64,\r\n    Legendary = 128,\r\n    All = 255\r\n}","export enum ItemType {\r\n    None = 0,\r\n    Armor = 1,\r\n    Back = 2,\r\n    Bag = 4,\r\n    Consumable = 8,\r\n    Container = 16,\r\n    CraftingMaterial = 32,\r\n    Gathering = 64,\r\n    Gizmo = 128,\r\n    Key = 256,\r\n    MiniPet = 512,\r\n    Tool = 1024,\r\n    Trait = 2048,\r\n    Trinket = 4096,\r\n    Trophy = 8192,\r\n    UpgradeComponent = 16384,\r\n    Weapon = 32768,\r\n    All = 65535\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport ItemGraph from \"./ItemGraph\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemComparisonSlotProps = {\r\n    item: PricedItem;\r\n    deleteItem(itemId: number): Promise<void>;\r\n}\r\n\r\nexport type ItemComparisonSlotState = {\r\n    amount: number;\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class ItemComparisonSlot extends React.Component<ItemComparisonSlotProps, ItemComparisonSlotState> {\r\n    constructor(props: ItemComparisonSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            amount: 1,\r\n            isOpen: false\r\n        };\r\n\r\n        //this.getNetProfit = this.getNetProfit.bind(this);\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n    }\r\n\r\n    /*\r\n    getNetProfit(): number {\r\n        const { item, amount } = this.state;\r\n\r\n        if (item == null)\r\n            return 0;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const totalFees = item.Fee * amount;\r\n        return revenue - expenditure - totalFees;\r\n    }\r\n    */\r\n\r\n    toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true});\r\n    }\r\n    \r\n    render() {\r\n        const { item, deleteItem } = this.props;\r\n        const { amount, isOpen } = this.state;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const fee = Math.round(item.SellPrice * 0.15);\r\n        const totalFees = fee * amount;\r\n        const netProfit = revenue - expenditure - totalFees;\r\n\r\n        // TODO: Amount is not sorting with items\r\n\r\n        return (\r\n            <div className=\"flex flex-col px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row cursor-pointer\"\r\n                    onClick={this.toggleOpen}>\r\n                    <div className=\"flex flex-row w-2/8 items-center mr-6\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <span className=\"italic text-gray-200\">{item.Name}</span>\r\n                    </div>\r\n                    <div className=\"flex flex-col xl:flex-row w-5/12 items-center\">\r\n                        <div className=\"flex flex-row xl:mr-4\">\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Amount</label>\r\n                                <input type=\"number\" className=\"w-16 px-1 text-sm bg-gray-600 text-gray-200\"\r\n                                    defaultValue={1}\r\n                                    onChange={event => {\r\n                                        const value: number = parseInt(event.target.value);\r\n                                        console.log(value);\r\n                                        if (value != null && !isNaN(value))\r\n                                            this.setState({amount: value});\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Net Profit</label>\r\n                                <Price price={netProfit} priceColor={`${ netProfit < 0 ? \"text-red-500\" : \"text-green-500\" }`} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-row\">\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Buys</label>\r\n                                <Price price={expenditure} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Sells</label>\r\n                                <Price price={revenue} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Fees</label>\r\n                                <Price price={totalFees} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-2/8\">\r\n                        <div className=\"flex flex-col xl:flex-row justify-evenly w-full h-full\">\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 font-bold text-gray-500\">Appeal</label>\r\n                                <span className=\"text-gray-200\">{item.Appeal.toFixed(2)}</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Margin</label>\r\n                                <span className={item.Margin < 15 ? \"text-red-500\" : \"text-green-500\"}>{item.Margin.toFixed(2)}%</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Sold</label>\r\n                                <span className=\"text-gray-200\">{item.Sold.toFixed(2)}</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Bought</label>\r\n                                <span className=\"text-gray-200\">{item.Bought.toFixed(2)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                        <button className=\"transition duration-150 ease-in-out px-3 py-1 rounded shadow-lg bg-red-700 text-red-300 hover:bg-red-800 hover:text-red-200\"\r\n                            onClick={() => deleteItem(item.Id)}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {isOpen && (\r\n                    <div className=\"mt-2 w-full\" style={{height: \"36rem\"}}>\r\n                        <ItemGraph itemId={item.Id} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        /*\r\n        return (\r\n            <tr className=\"bg-gray-700\">\r\n                <td className=\"\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <span className=\"italic\">{item.Name}</span>\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.BuyPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.SellPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.Fee} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.AppealValue}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.Margin}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.TransactionRate}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n        */\r\n    }\r\n}","import { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport class ItemQuery {\r\n    public name: string;\r\n    public type: ItemType;\r\n    public rarity: ItemRarity;\r\n    public minLevel: number;\r\n    public maxLevel: number;\r\n    public minBuyPrice: number;\r\n    public maxBuyPrice: number;\r\n    public minSellPrice: number;\r\n    public maxSellPrice: number;\r\n    public sortBy: ItemField;\r\n    public sortDirection: ItemFieldSort;\r\n\r\n    constructor(options?: ItemQueryOptions) {\r\n        this.name = options?.name ?? \"\";\r\n        this.type = options?.type ?? ItemType.All;\r\n        this.rarity = options?.rarity ?? ItemRarity.All;\r\n        this.minLevel = options?.minLevel ?? 0;\r\n        this.maxLevel = options?.maxLevel ?? 80;\r\n        this.minBuyPrice = options?.minBuyPrice ?? 0;\r\n        this.maxBuyPrice = options?.maxBuyPrice ?? 100000000;\r\n        this.minSellPrice = options?.minSellPrice ?? 0;\r\n        this.maxSellPrice = options?.maxSellPrice ?? 100000000;\r\n        this.sortBy = options?.sortBy ?? ItemField.Appeal;\r\n        this.sortDirection = options?.sortDirection ?? ItemFieldSort.Descending;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            name: this.name,\r\n            type: this.type.valueOf().toString(),\r\n            rarity: this.rarity.valueOf().toString(),\r\n            minLevel: this.minLevel.toString(),\r\n            maxLevel: this.maxLevel.toString(),\r\n            minBuyPrice: this.minBuyPrice.toString(),\r\n            maxBuyPrice: this.maxBuyPrice.toString(),\r\n            minSellPrice: this.minSellPrice.toString(),\r\n            maxSellPrice: this.maxSellPrice.toString(),\r\n            sortBy: this.sortBy.valueOf().toString(),\r\n            sortDirection: this.sortDirection.valueOf().toString()\r\n        };\r\n    }\r\n}\r\n\r\nexport interface ItemQueryOptions {\r\n    name?: string;\r\n    type?: ItemType;\r\n    rarity?: ItemRarity;\r\n    minLevel?: number;\r\n    maxLevel?: number;\r\n    minBuyPrice?: number;\r\n    maxBuyPrice?: number;\r\n    minSellPrice?: number;\r\n    maxSellPrice?: number;\r\n    sortBy?: ItemField;\r\n    sortDirection?: ItemFieldSort;\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\n\r\nexport type RarityMultiSelectProps = {\r\n    rarity: ItemRarity;\r\n    onChange(rarity: ItemRarity, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type RarityMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class RarityMultiSelect extends React.Component<RarityMultiSelectProps, RarityMultiSelectState> {\r\n    constructor(props: RarityMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleRarity = this.toggleRarity.bind(this);\r\n        this.checkRarity = this.checkRarity.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(rarity: ItemRarity): boolean {\r\n        const rarityNum = rarity as number;\r\n        return (rarityNum !== 0) && ((rarityNum & (rarityNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleRarity(otherRarity: ItemRarity) {\r\n        const { rarity, onChange } = this.props;\r\n        let newRarity: ItemRarity;\r\n        switch (otherRarity) {\r\n        case ItemRarity.None:\r\n        case ItemRarity.All:\r\n            newRarity = otherRarity;\r\n            break;\r\n        default:\r\n            newRarity = rarity ^ otherRarity;\r\n            break;\r\n        }\r\n\r\n        onChange(newRarity, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkRarity(otherRarity: ItemRarity): boolean {\r\n        const { rarity } = this.props;\r\n        if (rarity !== ItemRarity.All && otherRarity === ItemRarity.All)\r\n            return false;\r\n        return (rarity & otherRarity) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { rarity } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (rarity === ItemRarity.None)\r\n            selectedText = ItemRarity[ItemRarity.None];\r\n        else if (rarity === ItemRarity.All)\r\n            selectedText = ItemRarity[ItemRarity.All];\r\n        else if (RarityMultiSelect.isPowerOf2(rarity))\r\n            selectedText = ItemRarity[rarity];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center justify-between rounded-r text-sm bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"6.9rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemRarity).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemRarity: ItemRarity = ItemRarity[value as keyof typeof ItemRarity];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleRarity(itemRarity)}>\r\n                                    {(this.checkRarity(itemRarity) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkRarity(itemRarity) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemRarity[itemRarity]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type TypeMultiSelectProps = {\r\n    type: ItemType;\r\n    onChange(type: ItemType, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type TypeMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class TypeMultiSelect extends React.Component<TypeMultiSelectProps, TypeMultiSelectState> {\r\n    constructor(props: TypeMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleType = this.toggleType.bind(this);\r\n        this.checkType = this.checkType.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(type: ItemType): boolean {\r\n        const typeNum = type as number;\r\n        return (typeNum !== 0) && ((typeNum & (typeNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleType(otherType: ItemType) {\r\n        const { type, onChange } = this.props;\r\n        let newType: ItemType;\r\n        switch (otherType) {\r\n        case ItemType.None:\r\n        case ItemType.All:\r\n            newType = otherType;\r\n            break;\r\n        default:\r\n            newType = type ^ otherType;\r\n            break;\r\n        }\r\n\r\n        onChange(newType, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkType(otherType: ItemType): boolean {\r\n        const { type } = this.props;\r\n        if (type !== ItemType.All && otherType === ItemType.All)\r\n            return false;\r\n        return (type & otherType) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { type } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (type === ItemType.None)\r\n            selectedText = ItemType[ItemType.None];\r\n        else if (type === ItemType.All)\r\n            selectedText = ItemType[ItemType.All];\r\n        else if (TypeMultiSelect.isPowerOf2(type))\r\n            selectedText = ItemType[type];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm flex items-center justify-between rounded-r bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"10.29rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemType).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemType: ItemType = ItemType[value as keyof typeof ItemType];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleType(itemType)}>\r\n                                    {(this.checkType(itemType) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkType(itemType) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemType[itemType]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemQuery, ItemQueryOptions } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type ListSortingBarProps = {\r\n    name: string;\r\n    items: PricedItem[];\r\n    isDataStale: boolean;\r\n    onReload(): Promise<void>;\r\n    onSetTimespan(timespan: HistoryTimespan): Promise<void>; \r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type ListSortingBarState = {\r\n    query: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    timespan: HistoryTimespan;\r\n}\r\n\r\nexport default class ListSortingBar extends React.Component<ListSortingBarProps, ListSortingBarState> {\r\n    constructor(props: ListSortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            query: new ItemQuery(),\r\n            filteredItems: props.items,\r\n            isFilterOpen: false,\r\n            timespan: HistoryTimespan.OneMonth\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.sortCompare = this.sortCompare.bind(this); \r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n        this.onSetTimespan = this.onSetTimespan.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFilter();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ListSortingBarProps) {\r\n        if (prevProps.items !== this.props.items)\r\n            this.onFilter();\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({query: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    onFilter() {\r\n        // TODO: Implement filtering of the items from props here\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase()) &&\r\n                   (query.type & item.Type) !== 0 &&\r\n                   (query.rarity & item.Rarity) !== 0 &&\r\n                   item.Level >= query.minLevel &&\r\n                   item.Level <= query.maxLevel &&\r\n                   item.BuyPrice >= query.minBuyPrice &&\r\n                   item.BuyPrice <= query.maxBuyPrice &&\r\n                   item.SellPrice >= query.minSellPrice &&\r\n                   item.SellPrice <= query.maxSellPrice;\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    // Does an unfiltered search.\r\n    onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase());\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    sortCompare(a: PricedItem, b: PricedItem): number {\r\n        const { query } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n\r\n        if (query.sortBy === ItemField.Name) {\r\n            if (isSortAscending)\r\n                return a.Name.toLowerCase().localeCompare(b.Name.toLowerCase());\r\n            \r\n            return b.Name.toLowerCase().localeCompare(a.Name.toLowerCase());\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Appeal) {\r\n            if (isSortAscending)\r\n                return a.Appeal - b.Appeal;\r\n\r\n            return b.Appeal - a.Appeal;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Margin) {\r\n            if (isSortAscending)\r\n                return a.Margin - b.Margin;\r\n\r\n            return b.Margin - a.Margin;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sold) {\r\n            if (isSortAscending)\r\n                return a.Sold - b.Sold;\r\n\r\n            return b.Sold - a.Sold;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Bought) {\r\n            if (isSortAscending)\r\n                return a.Bought - b.Bought;\r\n\r\n            return b.Bought - a.Bought;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Buys) {\r\n            if (isSortAscending)\r\n                return a.BuyPrice - b.BuyPrice;\r\n\r\n            return b.BuyPrice - a.BuyPrice;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sells) {\r\n            if (isSortAscending)\r\n                return a.SellPrice - b.SellPrice;\r\n\r\n            return b.SellPrice - a.SellPrice;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.name = value;\r\n            return {query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.type = newType;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.rarity = newRarity;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            if (value > query.maxLevel)\r\n                return {query};\r\n\r\n            query.minLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            if (value < query.minLevel)\r\n                return {query};\r\n\r\n            query.maxLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.minBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.maxBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.minSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.maxSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    async onSetTimespan(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const { onSetTimespan } = this.props;\r\n        const value = event.target.value;\r\n        const timespan = parseInt(value) as HistoryTimespan;\r\n        this.setState({timespan}, async () => await onSetTimespan(timespan));\r\n    }\r\n\r\n    render() {\r\n        const { name, isDataStale, onReload, children } = this.props;\r\n        const { query, isFilterOpen, filteredItems, timespan } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <span className=\"\">{name}</span>\r\n                    \r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={query.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={query.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Time Span</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 mr-4 rounded h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={timespan} \r\n                            onChange={this.onSetTimespan}>\r\n                            <option value={HistoryTimespan.OneHour} className=\"\">{HistoryTimespan[HistoryTimespan.OneHour]}</option>\r\n                            <option value={HistoryTimespan.SixHours} className=\"\">{HistoryTimespan[HistoryTimespan.SixHours]}</option>\r\n                            <option value={HistoryTimespan.TwelveHours} className=\"\">{HistoryTimespan[HistoryTimespan.TwelveHours]}</option>\r\n                            <option value={HistoryTimespan.OneDay} className=\"\">{HistoryTimespan[HistoryTimespan.OneDay]}</option>\r\n                            <option value={HistoryTimespan.ThreeDays} className=\"\">{HistoryTimespan[HistoryTimespan.ThreeDays]}</option>\r\n                            <option value={HistoryTimespan.OneWeek} className=\"\">{HistoryTimespan[HistoryTimespan.OneWeek]}</option>\r\n                            <option value={HistoryTimespan.TwoWeeks} className=\"\">{HistoryTimespan[HistoryTimespan.TwoWeeks]}</option>\r\n                            <option value={HistoryTimespan.OneMonth} className=\"\">{HistoryTimespan[HistoryTimespan.OneMonth]}</option>\r\n                        </select>\r\n\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\", zIndex: 100}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={query.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={query.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={query.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={() => {\r\n                                                    this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out relative flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            title={`${isDataStale ? \"Reload Data (Data may be stale)\" : \"Reload Data\"}`}\r\n                            onClick={onReload}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                            {isDataStale && (\r\n                                <div className=\"absolute flex h-3 w-3\" style={{top: \"-0.35rem\", right: \"-0.35rem\"}}>\r\n                                    <span className=\"animate-ping h-3 w-3 absolute rounded-full bg-yellow-500 opacity-75\"></span>\r\n                                    <span className=\"relative rounded-full h-3 w-3 bg-yellow-500\"></span>\r\n                                </div>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n            </>\r\n        );\r\n    }\r\n}","export class HistoryItemQuery {\r\n    public readonly id: number;\r\n    public readonly hasDetails: boolean;\r\n    public readonly newest: number;\r\n\r\n    constructor(id: number, hasDetails: boolean = false, newest: number = 0) {\r\n        this.id = id;\r\n        this.hasDetails = hasDetails;\r\n        this.newest = newest;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            id: this.id.toString(),\r\n            hasDetails: this.hasDetails.toString(),\r\n            newest: this.newest.toString()\r\n        };\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type PricedItem = {\r\n    Id: number;\r\n    ChatLink: string;\r\n    Name: string;\r\n    Icon: string;\r\n    Description: string;\r\n    Type: ItemType;\r\n    Rarity: ItemRarity;\r\n    Level: number;\r\n\r\n    BuyPrice: number;\r\n    SellPrice: number;\r\n    Appeal: number;\r\n    Margin: number;\r\n    Sold: number;\r\n    Bought: number;\r\n}\r\n\r\nexport class PricedItemFactory {\r\n    static ToPricedItem(item: any): PricedItem | null {\r\n        try {\r\n            const result: PricedItem = { \r\n                Id: item.id, \r\n                ChatLink: item.chatLink,\r\n                Name: item.name, \r\n                Icon: item.icon, \r\n                Description: item.description,\r\n                Type: parseInt(item.type),\r\n                Rarity: parseInt(item.rarity),\r\n                Level: item.level,\r\n\r\n                BuyPrice: item.buyPrice,\r\n                SellPrice: item.sellPrice,\r\n                Appeal: parseFloat(parseFloat(item.appeal).toFixed(2)),\r\n                Margin: parseFloat(parseFloat(item.margin).toFixed(2)),\r\n                Sold: parseFloat(parseFloat(item.sold).toFixed(2)),\r\n                Bought: parseFloat(parseFloat(item.bought).toFixed(2))\r\n            };\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToPricedItems(items: any): PricedItem[] {\r\n        const arr: PricedItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = PricedItemFactory.ToPricedItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","const environment = {\r\n    urls: {\r\n        authority: \"https://auth.devwulfcodes.com\",\r\n        host: \"https://gw2.devwulfcodes.com\",\r\n        gw2calculator: \"https://gw2.devwulfcodes.com/api\"\r\n    }\r\n};\r\n\r\nexport default environment;","import { HistoryItem, HistoryItemFactory } from \"../dataContracts/HistoryItem\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem, PricedItemFactory } from \"../dataContracts/PricedItem\";\r\nimport environment from \"../environment\";\r\n\r\nclass ApiService {\r\n    public async GetItems(accessToken: string, query: ItemQuery, pageNumber: number): Promise<PricedItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems?\" + new URLSearchParams(query.toObject()) + `&pageNumber=${pageNumber}`;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return PricedItemFactory.ToPricedItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemPageCount(accessToken: string, query: ItemQuery): Promise<number> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems/pageCount?\" + new URLSearchParams(query.toObject());\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result;\r\n\r\n        console.log(result);\r\n        return 0;\r\n    }\r\n\r\n    public async GetHistoryItems(accessToken: string, queries: HistoryItemQuery[]): Promise<HistoryItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/historyItems\";\r\n        const response = await ApiService.Post(url, accessToken, queries);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return HistoryItemFactory.ToHistoryItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemLists(accessToken: string) : Promise<ItemList[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getLists\";\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemLists;\r\n            const itemLists: ItemList[] = [];\r\n            items.forEach((item: any) => {\r\n                const itemList: ItemList = {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n                \r\n                itemLists.push(itemList);\r\n            });\r\n\r\n            return itemLists;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemList(accessToken: string, id: string) : Promise<number[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getList/\" + id;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemIds;\r\n            const itemIds: number[] = [];\r\n            items.forEach((id: any) => {\r\n                const idNum = parseInt(id);\r\n                itemIds.push(idNum);\r\n            });\r\n\r\n            return itemIds;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async CreateList(accessToken: string, name: string) : Promise<string | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/createList\";\r\n        const response = await ApiService.Post(url, accessToken, {name});\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result.listId;\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async UpdateListName(accessToken: string, id: string, name: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/updateName\";\r\n        const response = await ApiService.Post(url, accessToken, {id, name});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async AddListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/addItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n        \r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteList(accessToken: string, id: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteList\";\r\n        const response = await ApiService.Post(url, accessToken, {id});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    private static async Get(url: string, accessToken: string) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            }\r\n        });\r\n    }\r\n\r\n    private static async Post(url: string, accessToken: string, body: any) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            },\r\n            body: body ? JSON.stringify(body) : undefined\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemComparisonSlot from \"../components/ItemComparisonSlot\";\r\nimport ListSortingBar from \"../components/ListSortingBar\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport { HistoryItem } from \"../dataContracts/HistoryItem\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport type MyListProps = {\r\n    listId?: string;\r\n}\r\n\r\nexport type MyListState = {\r\n    id: string,\r\n    user: User | undefined;\r\n    items: PricedItem[];\r\n    timespan: HistoryTimespan;\r\n    isLoading: boolean;\r\n    isDataStale: boolean;\r\n}\r\n\r\nexport default class MyList extends React.Component<MyListProps, MyListState> {\r\n    constructor(props: MyListProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            user: undefined,\r\n            /*[19721, 46736, 46738, 46739, 72224, 9576, 24277, 67015],*/\r\n            items: [],\r\n            timespan: HistoryTimespan.OneMonth,\r\n            isLoading: false,\r\n            isDataStale: false\r\n        };\r\n\r\n        this.updateId = this.updateId.bind(this);\r\n        this.updateItems = this.updateItems.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.onReload = this.onReload.bind(this);\r\n        this.setTimespan = this.setTimespan.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async updateId() {\r\n        const { listId } = this.props;\r\n        const { id } = this.state;\r\n        if (listId && id !== listId)\r\n            this.setState({id: listId, items: [], isLoading: true}, async () => {\r\n                await this.updateItems();\r\n            });\r\n    }\r\n\r\n    async updateItems() {\r\n        const { user, id, timespan } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        this.setState({items: [], isLoading: true, isDataStale: false}, async () => {\r\n            const ids = await ApiService.GetItemList(user.access_token, id);\r\n            if (!ids)\r\n                return;\r\n    \r\n            const historyItemQueries: HistoryItemQuery[] = [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n                const itemId = ids[i];\r\n                const newest = await LocalDB.getNewestTime(itemId);\r\n                const hasDetails = await LocalDB.hasDetails(itemId);\r\n                historyItemQueries.push(new HistoryItemQuery(itemId, hasDetails, newest));\r\n            }\r\n    \r\n            const historyItems = await ApiService.GetHistoryItems(user.access_token, historyItemQueries);\r\n            if (!historyItems)\r\n                return;\r\n    \r\n            const pricedItems: PricedItem[] = [];\r\n            for (var i = 0; i < historyItems.length; i++) {\r\n                const item = historyItems[i];\r\n                const itemQuery = historyItemQueries[i];\r\n                await LocalDB.deleteOldPrices(item.Id);\r\n                if (!itemQuery.hasDetails)\r\n                    await LocalDB.setHistoryItem(item);\r\n                else\r\n                    await LocalDB.setHistoryItemPrices(item.Id, item.History);\r\n    \r\n                const dbItem = await LocalDB.getHistoryItem(item.Id, timespan);\r\n                if (!dbItem)\r\n                    continue;\r\n    \r\n                const pricedItem = MyList.historyToPriced(dbItem);\r\n                pricedItems.push(pricedItem);\r\n            }\r\n\r\n            this.setState({items: pricedItems, isLoading: false}, () => {\r\n                setTimeout(() => {\r\n                    this.setState({isDataStale: true});\r\n                }, 300000);\r\n            });\r\n        });\r\n    }\r\n\r\n    static historyToPriced(item: HistoryItem): PricedItem {\r\n        const newestPrice = item.History[0];\r\n        const buyPrice = newestPrice.buyPrice;\r\n        const sellPrice = newestPrice.sellPrice;\r\n        const margin = (sellPrice - buyPrice) / sellPrice * 100;\r\n        let sumSold: number = 0;\r\n        let sumBought: number = 0;\r\n        item.History.forEach(price => {\r\n            sumSold += price.sold;\r\n            sumBought += price.bought;\r\n        });\r\n\r\n        const avgSold = sumSold / item.History.length;\r\n        const avgBought = sumBought / item.History.length;\r\n\r\n        const appeal = margin > 15 ? margin * avgSold * avgBought : 0;\r\n\r\n        const pricedItem: PricedItem = {\r\n            Id: item.Id,\r\n            ChatLink: item.ChatLink,\r\n            Name: item.Name,\r\n            Icon: item.Icon,\r\n            Description: item.Description,\r\n            Type: item.Type,\r\n            Rarity: item.Rarity,\r\n            Level: item.Level,\r\n        \r\n            BuyPrice: buyPrice,\r\n            SellPrice: sellPrice,\r\n            Appeal: appeal,\r\n            Margin: margin,\r\n            Sold: avgSold,\r\n            Bought: avgBought\r\n        };\r\n\r\n        return pricedItem;\r\n    }\r\n\r\n    async deleteItem(itemId: number) {\r\n        const { id, user, items } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteListItem(user.access_token, id, itemId);\r\n        const tempItems = [...items];\r\n        if (result) {\r\n            const itemIndex = tempItems.findIndex(item => item.Id === itemId);\r\n            tempItems.splice(itemIndex, 1);\r\n            this.setState({items: tempItems});\r\n        }\r\n    }\r\n\r\n    async onReload() {\r\n        this.setState({items: [], isLoading: true}, async () => {\r\n            await this.updateItems();\r\n        });\r\n    }\r\n\r\n    async setTimespan(timespan: HistoryTimespan) {\r\n        this.setState({items: [], timespan: timespan, isLoading: true}, async () => {\r\n            const { user, id } = this.state;\r\n            if (!user)\r\n                return;\r\n\r\n            const ids = await ApiService.GetItemList(user.access_token, id);\r\n            if (!ids)\r\n                return;\r\n\r\n            const pricedItems: PricedItem[] = [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n                const itemId = ids[i];\r\n                const item = await LocalDB.getHistoryItem(itemId, timespan);\r\n                if (!item)\r\n                    continue;\r\n                \r\n                const pricedItem = MyList.historyToPriced(item);\r\n                pricedItems.push(pricedItem);\r\n            }\r\n\r\n            this.setState({items: pricedItems, isLoading: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, items, isLoading, isDataStale } = this.state;\r\n\r\n        return (\r\n            <div className=\"main w-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n                            \r\n                        if (user) {\r\n                            return(\r\n                                <ListSortingBar items={items} name=\"Tracked Items\" isDataStale={isDataStale} onReload={this.onReload} onSetTimespan={this.setTimespan}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX style={{height: \"calc(100vh - 11rem)\"}}>\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemComparisonSlot item={value} deleteItem={this.deleteItem} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"flex justify-center\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </ListSortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(<>\r\n                            <ListSortingBar items={[]} name=\"Items\" isDataStale={true} onReload={async () => {}} onSetTimespan={async () => {}}>\r\n                                {sortedItems => (<></>)}\r\n                            </ListSortingBar>\r\n\r\n                            {/*\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                            */}\r\n                        </>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n                \r\n                {/*\r\n                <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                <div className=\"block\">\r\n                    <div id=\"head\" className=\"\">\r\n                        <div className=\"flex flex-row flex-wrap\">\r\n                            <div className=\"font-bold\">Name</div>\r\n                            <div className=\"font-bold\">Buys</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"body\" className=\"\">\r\n\r\n                    </div>\r\n                </div>\r\n                */}\r\n\r\n                {/*\r\n                <table className=\"table-fixed w-full\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"w-2/8\">Name</th>\r\n                            <th className=\"w-1/8\">Buys</th>\r\n                            <th className=\"w-1/8\">Sells</th>\r\n                            <th className=\"w-1/8\">Fee</th>\r\n                            <th className=\"w-1/8\">Appeal</th>\r\n                            <th className=\"w-1/8\">Margin</th>\r\n                            <th className=\"w-1/8\">Transaction Rate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                    </tbody>\r\n                </table>\r\n                */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex bg-gray-800 text-gray-200\"></div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemSummarySlotProps = {\r\n    item: PricedItem;\r\n    accessToken: string;\r\n}\r\n\r\nexport type ItemSummarySlotState = {\r\n    isDragging: boolean;\r\n    isAdding: boolean;\r\n}\r\n\r\nexport default class ItemSummarySlot extends React.Component<ItemSummarySlotProps, ItemSummarySlotState> {\r\n    private dragTarget: React.RefObject<HTMLDivElement>;\r\n    \r\n    constructor(props: ItemSummarySlotProps) {\r\n        super(props);\r\n\r\n        this.dragTarget = React.createRef();\r\n\r\n        this.state = {\r\n            isDragging: false,\r\n            isAdding: false\r\n        };\r\n\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    onDragStart(event: React.DragEvent<HTMLDivElement>) {\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData(\"text\", this.props.item.Id.toString());\r\n\r\n        requestAnimationFrame(() => {\r\n            this.dragTarget.current?.classList.add(\"hide\");\r\n        });\r\n\r\n        this.setState({isDragging: true});\r\n    }\r\n\r\n    onDragEnd(event: React.DragEvent<HTMLDivElement>) {\r\n        this.dragTarget.current?.classList.remove(\"hide\");\r\n        this.setState({isDragging: false});\r\n    }\r\n\r\n    onAdd() {\r\n        this.setState(prevState => ({isAdding: !prevState.isAdding}));\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props;\r\n        const { isDragging, isAdding } = this.state;\r\n\r\n        return(\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-3/12 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <span className=\"italic text-gray-200\">{item.Name}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Buys</label>\r\n                    <Price price={item.BuyPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sells</label>\r\n                    <Price price={item.SellPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Margin</label>\r\n                    <span className={`${item.Margin > 15 ? \"text-green-500\" : \"text-red-500\"}`}>{item.Margin}%</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sold</label>\r\n                    <span className=\"\">{item.Sold}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Bought</label>\r\n                    <span className=\"\">{item.Bought}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Appeal</label>\r\n                    <span className=\"\">{item.Appeal}</span>\r\n                </div>\r\n                <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                    <div className=\"relative px-2 py-1 mr-3 rounded shadow-lg bg-gray-800 text-gray-300 cursor-move\"\r\n                        draggable\r\n                        onDragStart={this.onDragStart}\r\n                        onDragEnd={this.onDragEnd}>\r\n                        <FontAwesomeIcon icon=\"arrows-alt\" />\r\n                        <div ref={this.dragTarget} className={`${isDragging ? \"\" : \"hidden\"} absolute px-2 py-1 flex flex-row items-center justify-center w-32 h-12 rounded bg-gray-800`} style={{top: \"-0.25rem\", left: \"-2.75rem\"}}>\r\n                            <img src={item.Icon} alt={item.Name} className=\"mr-3 w-8 h-8 select-none\"/>\r\n                            <span className=\"italic text-sm truncate text-gray-300 select-none\">{item.Name}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"relative\">\r\n                        <button className=\"transition duration-150 ease-in-out px-3 py-2 rounded shadow-lg bg-green-700 text-green-300 hover:bg-green-800 hover:text-green-200\"\r\n                            onClick={this.onAdd}>\r\n                            <FontAwesomeIcon icon=\"plus\" />\r\n                        </button>\r\n                        <div className={`${isAdding ? \"\" : \"hidden\"} arrow-up absolute flex flex-col justify-center w-24 rounded bg-gray-900 text-gray-300`} style={{height: \"5.45rem\", top: \"3.25rem\", left: \"-1.875rem\"}}>\r\n                            <Scrollbar noScrollX>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                            </Scrollbar>\r\n                        </div>\r\n                    </div>\r\n                    */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type SortingBarProps = {\r\n    name: string;\r\n    onLoadingStart(): void;\r\n    onLoadingStop(): void;\r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type SortingBarState = {\r\n    user: User | undefined;\r\n    pendingQuery: ItemQuery;\r\n    currentQuery: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    currentPage: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport default class SortingBar extends React.Component<SortingBarProps, SortingBarState> {\r\n    constructor(props: SortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            pendingQuery: new ItemQuery(),\r\n            currentQuery: new ItemQuery(),\r\n            filteredItems: [],\r\n            isFilterOpen: false,\r\n            currentPage: 1,\r\n            totalPages: 1\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onToPage = this.onToPage.bind(this);\r\n        this.onFirstPage = this.onFirstPage.bind(this);\r\n        this.onLastPage = this.onLastPage.bind(this);\r\n        this.onNextPage = this.onNextPage.bind(this);\r\n        this.onPrevPage = this.onPrevPage.bind(this);\r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({pendingQuery: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    async onFilter() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            const totalPages = await ApiService.GetItemPageCount(user.access_token, pendingQuery);\r\n            if (totalPages <= 0)\r\n                return;       \r\n    \r\n            onLoadingStart(); \r\n        \r\n            const items = await ApiService.GetItems(user.access_token, pendingQuery, 1) ?? [];\r\n            this.setState({filteredItems: items, currentQuery: pendingQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        const nameOnlyQuery = new ItemQuery({name: pendingQuery.name});\r\n        this.setState({filteredItems: []}, async () => {\r\n            const totalPages = await ApiService.GetItemPageCount(user.access_token, nameOnlyQuery);\r\n            if (totalPages <= 0)\r\n                return;  \r\n    \r\n            onLoadingStart();\r\n            \r\n            const items = await ApiService.GetItems(user.access_token, nameOnlyQuery, 1) ?? [];\r\n            this.setState({filteredItems: items, currentQuery: nameOnlyQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onToPage(pageNumber: number) {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (pageNumber <= 0 || pageNumber > totalPages)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n    \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, pageNumber) ?? [];\r\n            this.setState({filteredItems: items, currentPage: pageNumber}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onFirstPage() {\r\n        await this.onToPage(1);\r\n    }\r\n\r\n    async onLastPage() {\r\n        const { totalPages } = this.state;\r\n        await this.onToPage(totalPages);\r\n    }\r\n\r\n    async onNextPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage >= totalPages)\r\n            return;\r\n\r\n        \r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n    \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage + 1) ?? [];\r\n            this.setState({filteredItems: items, currentPage: currentPage + 1}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onPrevPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage <= 1)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n            \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage - 1) ?? [];\r\n            this.setState({filteredItems: items, currentPage: currentPage - 1}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.name = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.type = newType;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.rarity = newRarity;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            if (value > query.maxLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.minLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            if (value < query.minLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.maxLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.minBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.maxBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.minSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.maxSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        const { pendingQuery, filteredItems, isFilterOpen, currentPage, totalPages } = this.state;\r\n\r\n        const isSortAscending: boolean = pendingQuery.sortDirection === ItemFieldSort.Ascending;\r\n        const pageNums: number[] = [];\r\n        \r\n        for (var i = currentPage < 5 ? 1 : currentPage - 4; \r\n            i <= ((currentPage + 4) <= totalPages ? currentPage + 4 : totalPages); \r\n            i++) {\r\n            pageNums.push(i);\r\n        }\r\n\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <AuthenticationContext.Consumer>\r\n                        {props => {\r\n                            if (props.oidcUser != null && !this.state.user)\r\n                                this.setState({user: props.oidcUser}, this.onFilter);\r\n\r\n                            return(\r\n                                <></>\r\n                            );\r\n                        }}\r\n                    </AuthenticationContext.Consumer>\r\n                    <span className=\"\">{name}</span>\r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={pendingQuery.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-700 text-gray-300\" \r\n                            value={pendingQuery.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r border-l border-gray-800 bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\", zIndex: 100}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={pendingQuery.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={pendingQuery.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={pendingQuery.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={async () => {\r\n                                                    await this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            onClick={this.onFilter}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n                {totalPages > 0 && (\r\n                    <div className=\"mt-4 flex flex-row-reverse w-full\">\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onFirstPage}>\r\n                                <FontAwesomeIcon icon=\"angle-double-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">First</span>\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onPrevPage}>\r\n                                <FontAwesomeIcon icon=\"arrow-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">Prev</span>\r\n                            </button>\r\n                            {pageNums.map((value, index) => (\r\n                                <button key={index} disabled={currentPage === value} \r\n                                    className={`transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded ${currentPage === value ? \"bg-gray-900 text-gray-200 cursor-default\" : \"bg-gray-700 text-gray-300 hover:bg-gray-900 hover:text-gray-200 hover:shadow-lg\"}`}\r\n                                    onClick={() => this.onToPage(value)}>\r\n                                    {value}\r\n                                </button>\r\n                            ))}\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onNextPage}>\r\n                                <span className=\"mr-1\">Next</span>\r\n                                <FontAwesomeIcon icon=\"arrow-right\" className=\"text-xs\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onLastPage}>\r\n                                <span className=\"mr-1\">Last</span>\r\n                                <FontAwesomeIcon icon=\"angle-double-right\" className=\"text-xs\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { faDivide } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemSummarySlot from \"../components/ItemSummarySlot\";\r\nimport SortingBar from \"../components/SortingBar\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport type GeneralSearchProps = {\r\n\r\n}\r\n\r\nexport type GeneralSearchState = {\r\n    user: User | undefined;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default class GeneralSearch extends React.Component<GeneralSearchProps, GeneralSearchState> {\r\n    constructor(props: GeneralSearchProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            isLoading: false\r\n        };\r\n\r\n        this.onLoadingStart = this.onLoadingStart.bind(this);\r\n        this.onLoadingStop = this.onLoadingStop.bind(this);\r\n    }\r\n\r\n    onLoadingStart() {\r\n        this.setState({isLoading: true});\r\n    }\r\n\r\n    onLoadingStop() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const { user, isLoading } = this.state;\r\n\r\n        return(\r\n            <div className=\"main w-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n\r\n                        if (user) {\r\n                            return(\r\n                                <SortingBar name=\"Results\" onLoadingStart={this.onLoadingStart} onLoadingStop={this.onLoadingStop}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX style={{height: \"calc(100vh - 14rem)\"}}>\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemSummarySlot item={value} accessToken={user.access_token} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </SortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import environment from \"./environment\";\r\n\r\nconst configuration = {\r\n    client_id: \"gw2_calculator_app\",\r\n    response_type: \"id_token token\",\r\n    scope: \"openid email roles profile gw2calculator\",\r\n    automaticSilentRenew: true,\r\n    loadUserInfo: true,\r\n    authority: environment.urls.authority,\r\n    redirect_uri: `${environment.urls.host}/authentication/callback`,\r\n    post_logout_redirect_uri: `${environment.urls.host}/`,\r\n    silent_redirect_uri: `${environment.urls.host}/authentication/silent_callback`\r\n};\r\n\r\nexport default configuration;","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return(\r\n            <header className=\"\" style={{boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.2)\", zIndex: 100}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        return(\r\n                            <div className=\"flex justify-between items-center px-4 bg-indigo-700 text-indigo-200\">\r\n                                <div className=\"flex flex-row items-center\">\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-6 text-lg font-bold hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        GW2 Calculator\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/search\">\r\n                                        Search\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                {props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <span className=\"mr-4\">Hello, {props.oidcUser.profile.name}!</span>\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.logout()}>\r\n                                            Logout\r\n                                        </button>\r\n                                    </div>\r\n                                ) ||\r\n                                (!props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.login()}>\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </header>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type AddItemListSlotProps = {\r\n    onAddItemList(name: string): Promise<void>;\r\n}\r\n\r\nexport type AddItemListSlotState = {\r\n    isAdding: boolean;\r\n    name: string;\r\n}\r\n\r\nexport default class AddItemListSlot extends React.Component<AddItemListSlotProps, AddItemListSlotState> {\r\n    constructor(props: AddItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdding: false,\r\n            name: \"\"\r\n        };\r\n\r\n        this.onAddItemListStart = this.onAddItemListStart.bind(this);\r\n        this.onAddItemListStop = this.onAddItemListStop.bind(this);\r\n        this.onAddItemList = this.onAddItemList.bind(this);\r\n    }\r\n\r\n    onAddItemListStart(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: true});\r\n    }\r\n\r\n    onAddItemListStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    async onAddItemList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { onAddItemList } = this.props;\r\n        const { name } = this.state;\r\n        if (!name)\r\n            return;\r\n        \r\n        await onAddItemList(name);\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    render() {\r\n        const { isAdding, name } = this.state;\r\n\r\n        return(\r\n            <div className=\"transition duration-150 ease-in-out flex flex-row items-center justify-between mx-2 border-2 border-dashed rounded-lg border-indigo-700 bg-opacity-0 bg-indigo-700 text-indigo-300 hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer\"\r\n                tabIndex={0}\r\n                onClick={this.onAddItemListStart}>\r\n                {(!isAdding && \r\n                    <div className=\"px-4 py-3\">\r\n                        <div className=\"pointer-events-none select-none\">\r\n                            <FontAwesomeIcon icon=\"plus\" className=\"mr-3\" />\r\n                            Add New List...\r\n                        </div>\r\n                    </div>\r\n                ) || \r\n                (isAdding && \r\n                    <div className=\"px-2 py-3 flex flex-row\">\r\n                        <input type=\"text\" className=\"px-2 mr-1 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={name} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({name: event.target.value})} />\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onAddItemList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onAddItemListStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport interface CustomLinkProps extends React.HTMLAttributes<HTMLElement> {\r\n    to: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function CustomLink(props: CustomLinkProps) {\r\n    const { push } = useHistory();\r\n    const { to, children, ...rest } = props;\r\n    return(\r\n        <div onClick={() => push(to)} {...rest}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type ItemListSlotProps = {\r\n    itemList: ItemList;\r\n    onDrop(id: string, itemId: number): Promise<void>;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteList(id: string): Promise<void>;\r\n}\r\n\r\nexport type ItemListSlotState = {\r\n    isMouseHover: boolean;\r\n    isDragHover: boolean;\r\n    isEditing: boolean;\r\n    newName: string;\r\n}\r\n\r\nexport default class ItemListSlot extends React.Component<ItemListSlotProps, ItemListSlotState> {\r\n    constructor(props: ItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isMouseHover: false,\r\n            isDragHover: false,\r\n            isEditing: false,\r\n            newName: props.itemList.name\r\n        };\r\n\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.onDragEnter = this.onDragEnter.bind(this);\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDragLeave = this.onDragLeave.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n\r\n        this.onEditNameStart = this.onEditNameStart.bind(this);\r\n        this.onEditNameStop = this.onEditNameStop.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.setState({isMouseHover: true});\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.setState({isMouseHover: false});\r\n    }\r\n\r\n    async onDragEnter(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: true});\r\n    }\r\n\r\n    onDragOver(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    async onDragLeave(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    async onDrop(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        const { itemList, onDrop } = this.props;\r\n        const itemId = parseInt(event.dataTransfer.getData(\"text\"));\r\n        await onDrop(itemList.id, itemId);\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    onEditNameStart(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: true, newName: this.props.itemList.name});\r\n    }\r\n\r\n    onEditNameStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onEditName(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onEditName } = this.props;\r\n        const { newName } = this.state;\r\n        if (!newName)\r\n            return;\r\n\r\n        await onEditName(itemList.id, newName);\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onDeleteList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onDeleteList } = this.props;\r\n        await onDeleteList(itemList.id);\r\n    }\r\n\r\n    render() {\r\n        const { itemList } = this.props;\r\n        const { isMouseHover, isDragHover, isEditing, newName } = this.state;\r\n\r\n        return(\r\n            <CustomLink className={`transition duration-150 ease-in-out flex flex-row items-center justify-between px-4 py-3 bg-opacity-25 ${isDragHover ? \"bg-green-700 text-green-300\" : \"bg-indigo-700 text-indigo-300\"} hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer`}\r\n                to={`/list/${itemList.id}`}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onMouseLeave={this.onMouseLeave}\r\n                onDragEnter={this.onDragEnter}\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={this.onDrop}>\r\n                {(!isEditing && \r\n                    <>\r\n                        <span className=\"truncate pointer-events-none select-none\">{itemList.name}</span>\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditNameStart}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"pencil-alt\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onDeleteList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) || \r\n                (isEditing && \r\n                    <>\r\n                        <input type=\"text\" className=\"px-2 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={newName} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({newName: event.target.value})} />\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditName}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onEditNameStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </CustomLink>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport AddItemListSlot from \"./AddItemListSlot\";\r\nimport ItemListSlot from \"./ItemListSlot\";\r\n\r\nexport type SidebarProps = {\r\n\r\n}\r\n\r\nexport type SidebarState = {\r\n    user: User | undefined;\r\n    itemLists: ItemList[];\r\n}\r\n\r\nexport default class Sidebar extends React.Component<SidebarProps, SidebarState> {\r\n    constructor(props: SidebarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            itemLists: []\r\n        };\r\n\r\n        this.refreshItemLists = this.refreshItemLists.bind(this);\r\n\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onAddList = this.onAddList.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    async refreshItemLists() {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const itemLists = await ApiService.GetItemLists(user.access_token);\r\n        if (!itemLists)\r\n            return;\r\n\r\n        this.setState({itemLists});\r\n    }\r\n\r\n    async onAddItem(id: string, itemId: number) {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        await ApiService.AddListItem(user.access_token, id, itemId);\r\n    }\r\n\r\n    async onEditName(id: string, name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.UpdateListName(user.access_token, id, name);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists[index].name = name;\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onAddList(name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.CreateList(user.access_token, name);\r\n        if (result) {\r\n            const itemList: ItemList = {\r\n                id: result,\r\n                name: name\r\n            };\r\n            itemLists.push(itemList);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onDeleteList(id: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteList(user.access_token, id);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists.splice(index, 1);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { itemLists, user } = this.state;\r\n\r\n        return(\r\n            <div className=\"sidebar hidden py-4 xl:flex xl:w-1/4 bg-gray-900\" style={{width: \"16rem\"}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser}, () => {\r\n                                this.refreshItemLists();\r\n                            });\r\n                        if (user) {\r\n                            return(\r\n                                <Scrollbar noScrollX>\r\n                                    {itemLists.map((itemList, index) => (\r\n                                        <div key={index} className=\"mb-2\">\r\n                                            <ItemListSlot itemList={itemList} onDrop={this.onAddItem} onEditName={this.onEditName} onDeleteList={this.onDeleteList} />\r\n                                        </div>\r\n                                    ))}\r\n                                    <div className=\"w-full flex flex-col\">\r\n                                        <AddItemListSlot onAddItemList={this.onAddList} />\r\n                                    </div>\r\n                                </Scrollbar>\r\n                            );\r\n                        }\r\n\r\n                        return(<>\r\n                            <Scrollbar noScrollX>\r\n                                <div className=\"w-full flex flex-col\">\r\n                                    <AddItemListSlot onAddItemList={this.onAddList} />\r\n                                </div>\r\n                            </Scrollbar>\r\n                        </>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class NotFound extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex items-center justify-center bg-gray-800 text-gray-200\">\r\n                <div className=\"flex flex-col\">\r\n                    <span className=\"text-6xl\">404</span>\r\n                    <span className=\"text-2xl\">Page Not Found.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport MyList from \"./pages/MyList\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport GeneralSearch from \"./pages/GeneralSearch\";\r\nimport { BrowserRouter, Redirect, Route, Switch, useParams } from \"react-router-dom\";\r\nimport { AuthenticationProvider, withOidcSecure } from \"@axa-fr/react-oidc-context\";\r\nimport configuration from \"./open-id-config\";\r\nimport Header from \"./components/Header\";\r\nimport { config } from \"process\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NotFound from \"./pages/error/NotFound\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    const afterLogin = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                <span className=\"\">Logging in...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const afterLogout = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                <span className=\"\">Logging out...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    return(\r\n        <div className=\"flex flex-col\">\r\n            <BrowserRouter>\r\n                <AuthenticationProvider configuration={configuration}\r\n                    callbackComponentOverride={afterLogin}\r\n                    authenticating={afterLogout}>\r\n                    <Header />\r\n                    <Redirect path=\"/authentication/callback\" to=\"/\" />\r\n                    <div className=\"flex flex-row\" style={{height: \"calc(100vh - 4rem)\"}}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Dashboard} />\r\n                            <Route path=\"/search\" component={GeneralSearch} />\r\n                            <Route exact path=\"/list/:id\" component={MyListComponent} />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                        <Sidebar />\r\n                    </div>\r\n                </AuthenticationProvider>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MyListComponent() {\r\n    const { id } = useParams();\r\n\r\n    return(\r\n        <MyList listId={id} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}