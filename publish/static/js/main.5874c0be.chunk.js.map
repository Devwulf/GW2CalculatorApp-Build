{"version":3,"sources":["components/Price.tsx","utils/ItemField.ts","utils/ItemRarity.ts","utils/ItemType.ts","components/ItemComparisonSlot.tsx","dataContracts/ItemQuery.ts","utils/HistoryTimespan.ts","components/RarityMultiSelect.tsx","components/TypeMultiSelect.tsx","components/ListSortingBar.tsx","dataContracts/HistoryItemQuery.ts","dataContracts/HistoryItem.ts","dataContracts/PricedItem.ts","environment.ts","services/ApiService.ts","services/LocalDB.ts","pages/MyList.tsx","components/ItemGraph.tsx","pages/Dashboard.tsx","components/ItemSummarySlot.tsx","components/SortingBar.tsx","pages/GeneralSearch.tsx","open-id-config.ts","components/Header.tsx","components/AddItemListSlot.tsx","components/CustomLink.tsx","components/ItemListSlot.tsx","components/Sidebar.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["Price","props","state","this","price","priceColor","isNegative","absPrice","Math","abs","gold","floor","silver","copper","className","id","icon","style","fontSize","src","alt","React","Component","defaultProps","ItemField","ItemFieldSort","ItemRarity","ItemType","ItemComparisonSlot","amount","item","deleteItem","revenue","round","SellPrice","expenditure","BuyPrice","totalFees","netProfit","Icon","Name","htmlFor","type","defaultValue","onChange","event","value","parseInt","target","console","log","isNaN","setState","Appeal","toFixed","Margin","Sold","Bought","onClick","Id","HistoryTimespan","ItemQuery","options","name","rarity","minLevel","maxLevel","minBuyPrice","maxBuyPrice","minSellPrice","maxSellPrice","sortBy","sortDirection","All","Descending","valueOf","toString","RarityMultiSelect","isOpen","toggleOpen","bind","toggleRarity","checkRarity","otherRarity","newRarity","None","selectedText","isPowerOf2","tabIndex","width","top","zIndex","Object","keys","filter","map","index","itemRarity","key","TypeMultiSelect","toggleType","checkType","otherType","newType","itemType","ListSortingBar","query","filteredItems","items","isFilterOpen","timespan","OneMonth","resetQueryValues","toggleFilter","onFilterOpen","onFilterClose","onFilter","onSearch","sortCompare","onNameChange","onTypeChange","onRarityChange","onMinLevelChange","onMaxLevelChange","onMinBuyPriceChange","onMaxBuyPriceChange","onMinSellPriceChange","onMaxSellPriceChange","onSort","onSortDirection","onSetTimespan","prevProps","toLowerCase","includes","Type","Rarity","Level","sort","preventDefault","a","b","isSortAscending","Ascending","localeCompare","Buys","Sells","prevState","callback","isDataStale","onReload","children","onSubmit","OneHour","SixHours","TwelveHours","OneDay","ThreeDays","OneWeek","TwoWeeks","padding","height","right","title","HistoryItemQuery","hasDetails","newest","HistoryItem","chatLink","description","level","history","ChatLink","Description","History","predicate","HistoryItemFactory","e","arr","forEach","itemResult","ToHistoryItem","push","PricedItemFactory","buyPrice","sellPrice","parseFloat","appeal","margin","sold","bought","ToPricedItem","environment","urls","authority","host","gw2calculator","accessToken","pageNumber","url","URLSearchParams","toObject","ApiService","Get","response","json","result","ok","ToPricedItems","queries","Post","ToHistoryItems","itemLists","itemList","itemIds","idNum","listId","itemId","fetch","method","mode","cache","headers","body","JSON","stringify","undefined","historyItems","version","stores","open","catch","error","table","mapToClass","get","now","Date","timeFromNow","setTime","getTime","setDate","getDate","filterHistory","time","getHistoryItem","add","update","newHistory","unshift","currentPrices","monthFromNow","Dexie","MyList","user","isLoading","updateId","updateItems","setTimespan","GetItemList","access_token","ids","historyItemQueries","i","length","LocalDB","getNewestTime","GetHistoryItems","pricedItems","itemQuery","deleteOldPrices","setHistoryItem","setHistoryItemPrices","dbItem","pricedItem","historyToPriced","setTimeout","DeleteListItem","tempItems","itemIndex","findIndex","splice","Consumer","oidcUser","sortedItems","noScrollX","newestPrice","sumSold","sumBought","avgSold","avgBought","ItemGraph","dashboard","buyPriceChart","sellPriceChart","createChart","createOHLCChart","timeSpanInMs","firstPriceSnapshot","startingTime","buyPricesData","sellPricesData","pricesIn15Mins","timeTracker","priceSnapshot","nextPriceSnapshot","minBuy","Number","POSITIVE_INFINITY","maxBuy","minSell","maxSell","j","firstSnapshot","lastSnapshot","buyDataPoint","sellDataPoint","lightningChart","Dashboard","theme","Themes","dark","numberOfColumns","numberOfRows","container","columnIndex","rowIndex","columnSpan","rowSpan","data","chart","createChartXY","dateOrigin","getDefaultAxisX","setTickStrategy","AxisTickStrategies","DateTime","tickStrategy","setDateOrigin","setTitle","setAutoCursor","cursor","disposeTickMarkerY","setGridStrokeYStyle","emptyLine","setPadding","buyPriceLegend","addLegendBox","LegendBoxBuilders","HorizontalLegendBox","setPosition","x","y","setOrigin","UIOrigins","RightTop","priceAxisY","getDefaultAxisY","setScrollStrategy","AxisScrollStrategies","expansion","areaRangeFill","SolidFill","setColor","ColorRGBA","areaRangeStroke","SolidLine","setFillStyle","setThickness","areaRange","addAreaRangeSeries","yAxis","setName","setHighFillStyle","setLowFillStyle","setHighStrokeStyle","setLowStrokeStyle","setMaxPointCount","setMouseInteractions","setCursorEnabled","lineStroke","movingAverage","addLineSeries","setStrokeStyle","borderBlack","fillBrightRed","fillDimRed","fillBrightGreen","fillDimGreen","candles","addOHLCSeries","setFigureWidth","setPositiveStyle","candlestick","setBodyFillStyle","setBodyStrokeStyle","setNegativeStyle","priceNums","n","setButtonOnFillStyle","getFillStyle","setButtonOnStrokeStyle","setResultTableFormatter","builder","series","segment","getOpen","close","getClose","addRow","getName","axisX","formatValue","getPosition","getHigh","getLow","ohlc","shift","priceSum","num","priceAverage","sqrDeviationSum","pow","stdDeviation","sqrt","areaPoint","position","high","low","smaPoint","yBoundsPrice","min","getYMin","max","getYMax","range","setInterval","setViewNicely","dispose","ItemSummarySlot","dragTarget","createRef","isDragging","isAdding","onDragStart","onDragEnd","onAdd","stopPropagation","dataTransfer","setData","requestAnimationFrame","current","classList","remove","draggable","ref","left","SortingBar","pendingQuery","currentQuery","currentPage","totalPages","onToPage","onFirstPage","onLastPage","onNextPage","onPrevPage","onLoadingStart","onLoadingStop","GetItemPageCount","GetItems","nameOnlyQuery","pageNums","disabled","GeneralSearch","configuration","client_id","response_type","scope","automaticSilentRenew","loadUserInfo","redirect_uri","post_logout_redirect_uri","silent_redirect_uri","Header","boxShadow","to","profile","logout","login","AddItemListSlot","onAddItemListStart","onAddItemListStop","onAddItemList","paddingTop","paddingBottom","CustomLink","useHistory","rest","ItemListSlot","isMouseHover","isDragHover","isEditing","newName","onMouseEnter","onMouseLeave","onDragEnter","onDragOver","onDragLeave","onDrop","onEditNameStart","onEditNameStop","onEditName","onDeleteList","getData","Sidebar","refreshItemLists","onAddItem","onAddList","GetItemLists","AddListItem","UpdateListName","list","CreateList","DeleteList","MyListComponent","useParams","library","fas","App","callbackComponentOverride","logo","authenticating","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.5874c0be.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nexport type PriceProps = {\r\n    price: number;\r\n    priceColor: string;\r\n}\r\n\r\nexport type PriceState = {\r\n\r\n}\r\n\r\nexport default class Price extends React.Component<PriceProps, PriceState> {\r\n\r\n    static defaultProps: PriceProps = {\r\n        price: 0,\r\n        priceColor: \"text-gray-200\"\r\n    }\r\n\r\n    constructor(props: PriceProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { price, priceColor } = this.props;\r\n        const isNegative = price < 0;\r\n        const absPrice = Math.abs(price);\r\n\r\n        const gold = Math.floor(absPrice / 10000);\r\n        const silver = Math.floor(absPrice % 10000 / 100);\r\n        const copper = Math.floor(absPrice % 10000 % 100);\r\n\r\n        return (\r\n            <div className=\"flex flex-row\">\r\n                <div id=\"gold\" className=\"mr-1 flex flex-row items-center\">\r\n                    <FontAwesomeIcon icon=\"minus\" className={`${isNegative ? \"\" : \"hidden\"} ${priceColor} mr-1`} style={{fontSize: \"0.5rem\"}} />\r\n                    <img src=\"https://wiki.guildwars2.com/images/d/d1/Gold_coin.png\" alt=\"Gold Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{gold}</span>\r\n                </div>\r\n                <div id=\"silver\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/3/3c/Silver_coin.png\" alt=\"Silver Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{silver}</span>\r\n                </div>\r\n                <div id=\"copper\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/e/eb/Copper_coin.png\" alt=\"Copper Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{copper}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export enum ItemField {\r\n    Name,\r\n    Buys,\r\n    Sells,\r\n    Appeal,\r\n    Margin,\r\n    Sold,\r\n    Bought\r\n}\r\n\r\nexport enum ItemFieldSort {\r\n    Ascending,\r\n    Descending  \r\n}","export enum ItemRarity {\r\n    None = 0,\r\n    Junk = 1,\r\n    Basic = 2,\r\n    Fine = 4,\r\n    Masterwork = 8,\r\n    Rare = 16,\r\n    Exotic = 32,\r\n    Ascended = 64,\r\n    Legendary = 128,\r\n    All = 255\r\n}","export enum ItemType {\r\n    None = 0,\r\n    Armor = 1,\r\n    Back = 2,\r\n    Bag = 4,\r\n    Consumable = 8,\r\n    Container = 16,\r\n    CraftingMaterial = 32,\r\n    Gathering = 64,\r\n    Gizmo = 128,\r\n    Key = 256,\r\n    MiniPet = 512,\r\n    Tool = 1024,\r\n    Trait = 2048,\r\n    Trinket = 4096,\r\n    Trophy = 8192,\r\n    UpgradeComponent = 16384,\r\n    Weapon = 32768,\r\n    All = 65535\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemComparisonSlotProps = {\r\n    item: PricedItem;\r\n    deleteItem(itemId: number): Promise<void>;\r\n}\r\n\r\nexport type ItemComparisonSlotState = {\r\n    amount: number;\r\n}\r\n\r\nexport default class ItemComparisonSlot extends React.Component<ItemComparisonSlotProps, ItemComparisonSlotState> {\r\n    constructor(props: ItemComparisonSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            amount: 1\r\n        };\r\n\r\n        //this.getNetProfit = this.getNetProfit.bind(this);\r\n    }\r\n\r\n    /*\r\n    getNetProfit(): number {\r\n        const { item, amount } = this.state;\r\n\r\n        if (item == null)\r\n            return 0;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const totalFees = item.Fee * amount;\r\n        return revenue - expenditure - totalFees;\r\n    }\r\n    */\r\n    \r\n    render() {\r\n        const { item, deleteItem } = this.props;\r\n        const { amount } = this.state;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const fee = Math.round(item.SellPrice * 0.15);\r\n        const totalFees = fee * amount;\r\n        const netProfit = revenue - expenditure - totalFees;\r\n\r\n        // TODO: Amount is not sorting with items\r\n\r\n        return (\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-2/8 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <span className=\"italic text-gray-200\">{item.Name}</span>\r\n                </div>\r\n                <div className=\"flex flex-col xl:flex-row w-5/12 items-center\">\r\n                    <div className=\"flex flex-row xl:mr-4\">\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Amount</label>\r\n                            <input type=\"number\" className=\"w-16 px-1 text-sm bg-gray-600 text-gray-200\"\r\n                                defaultValue={1}\r\n                                onChange={event => {\r\n                                    const value: number = parseInt(event.target.value);\r\n                                    console.log(value);\r\n                                    if (value != null && !isNaN(value))\r\n                                        this.setState({amount: value});\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Net Profit</label>\r\n                            <Price price={netProfit} priceColor={`${ netProfit < 0 ? \"text-red-500\" : \"text-green-500\" }`} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-row\">\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Buys</label>\r\n                            <Price price={expenditure} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Sells</label>\r\n                            <Price price={revenue} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Fees</label>\r\n                            <Price price={totalFees} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-2/8\">\r\n                    <div className=\"flex flex-col xl:flex-row justify-evenly w-full h-full\">\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 font-bold text-gray-500\">Appeal</label>\r\n                            <span className=\"text-gray-200\">{item.Appeal.toFixed(2)}</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Margin</label>\r\n                            <span className={item.Margin < 15 ? \"text-red-500\" : \"text-green-500\"}>{item.Margin.toFixed(2)}%</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Sold</label>\r\n                            <span className=\"text-gray-200\">{item.Sold.toFixed(2)}</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Bought</label>\r\n                            <span className=\"text-gray-200\">{item.Bought.toFixed(2)}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                    <button className=\"transition duration-150 ease-in-out px-3 py-1 rounded shadow-lg bg-red-700 text-red-300 hover:bg-red-800 hover:text-red-200\"\r\n                        onClick={() => deleteItem(item.Id)}>\r\n                        <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        /*\r\n        return (\r\n            <tr className=\"bg-gray-700\">\r\n                <td className=\"\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <span className=\"italic\">{item.Name}</span>\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.BuyPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.SellPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.Fee} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.AppealValue}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.Margin}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.TransactionRate}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n        */\r\n    }\r\n}","import { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport class ItemQuery {\r\n    public name: string;\r\n    public type: ItemType;\r\n    public rarity: ItemRarity;\r\n    public minLevel: number;\r\n    public maxLevel: number;\r\n    public minBuyPrice: number;\r\n    public maxBuyPrice: number;\r\n    public minSellPrice: number;\r\n    public maxSellPrice: number;\r\n    public sortBy: ItemField;\r\n    public sortDirection: ItemFieldSort;\r\n\r\n    constructor(options?: ItemQueryOptions) {\r\n        this.name = options?.name ?? \"\";\r\n        this.type = options?.type ?? ItemType.All;\r\n        this.rarity = options?.rarity ?? ItemRarity.All;\r\n        this.minLevel = options?.minLevel ?? 0;\r\n        this.maxLevel = options?.maxLevel ?? 80;\r\n        this.minBuyPrice = options?.minBuyPrice ?? 0;\r\n        this.maxBuyPrice = options?.maxBuyPrice ?? 100000000;\r\n        this.minSellPrice = options?.minSellPrice ?? 0;\r\n        this.maxSellPrice = options?.maxSellPrice ?? 100000000;\r\n        this.sortBy = options?.sortBy ?? ItemField.Appeal;\r\n        this.sortDirection = options?.sortDirection ?? ItemFieldSort.Descending;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            name: this.name,\r\n            type: this.type.valueOf().toString(),\r\n            rarity: this.rarity.valueOf().toString(),\r\n            minLevel: this.minLevel.toString(),\r\n            maxLevel: this.maxLevel.toString(),\r\n            minBuyPrice: this.minBuyPrice.toString(),\r\n            maxBuyPrice: this.maxBuyPrice.toString(),\r\n            minSellPrice: this.minSellPrice.toString(),\r\n            maxSellPrice: this.maxSellPrice.toString(),\r\n            sortBy: this.sortBy.valueOf().toString(),\r\n            sortDirection: this.sortDirection.valueOf().toString()\r\n        };\r\n    }\r\n}\r\n\r\nexport interface ItemQueryOptions {\r\n    name?: string;\r\n    type?: ItemType;\r\n    rarity?: ItemRarity;\r\n    minLevel?: number;\r\n    maxLevel?: number;\r\n    minBuyPrice?: number;\r\n    maxBuyPrice?: number;\r\n    minSellPrice?: number;\r\n    maxSellPrice?: number;\r\n    sortBy?: ItemField;\r\n    sortDirection?: ItemFieldSort;\r\n}","export enum HistoryTimespan {\r\n    OneHour,\r\n    SixHours,\r\n    TwelveHours,\r\n    OneDay,\r\n    ThreeDays,\r\n    OneWeek,\r\n    TwoWeeks,\r\n    OneMonth\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\n\r\nexport type RarityMultiSelectProps = {\r\n    rarity: ItemRarity;\r\n    onChange(rarity: ItemRarity, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type RarityMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class RarityMultiSelect extends React.Component<RarityMultiSelectProps, RarityMultiSelectState> {\r\n    constructor(props: RarityMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleRarity = this.toggleRarity.bind(this);\r\n        this.checkRarity = this.checkRarity.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(rarity: ItemRarity): boolean {\r\n        const rarityNum = rarity as number;\r\n        return (rarityNum !== 0) && ((rarityNum & (rarityNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleRarity(otherRarity: ItemRarity) {\r\n        const { rarity, onChange } = this.props;\r\n        let newRarity: ItemRarity;\r\n        switch (otherRarity) {\r\n        case ItemRarity.None:\r\n        case ItemRarity.All:\r\n            newRarity = otherRarity;\r\n            break;\r\n        default:\r\n            newRarity = rarity ^ otherRarity;\r\n            break;\r\n        }\r\n\r\n        onChange(newRarity, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkRarity(otherRarity: ItemRarity): boolean {\r\n        const { rarity } = this.props;\r\n        if (rarity !== ItemRarity.All && otherRarity === ItemRarity.All)\r\n            return false;\r\n        return (rarity & otherRarity) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { rarity } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (rarity === ItemRarity.None)\r\n            selectedText = ItemRarity[ItemRarity.None];\r\n        else if (rarity === ItemRarity.All)\r\n            selectedText = ItemRarity[ItemRarity.All];\r\n        else if (RarityMultiSelect.isPowerOf2(rarity))\r\n            selectedText = ItemRarity[rarity];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center justify-between rounded-r text-sm bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"6.9rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemRarity).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemRarity: ItemRarity = ItemRarity[value as keyof typeof ItemRarity];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleRarity(itemRarity)}>\r\n                                    {(this.checkRarity(itemRarity) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkRarity(itemRarity) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemRarity[itemRarity]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type TypeMultiSelectProps = {\r\n    type: ItemType;\r\n    onChange(type: ItemType, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type TypeMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class TypeMultiSelect extends React.Component<TypeMultiSelectProps, TypeMultiSelectState> {\r\n    constructor(props: TypeMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleType = this.toggleType.bind(this);\r\n        this.checkType = this.checkType.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(type: ItemType): boolean {\r\n        const typeNum = type as number;\r\n        return (typeNum !== 0) && ((typeNum & (typeNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleType(otherType: ItemType) {\r\n        const { type, onChange } = this.props;\r\n        let newType: ItemType;\r\n        switch (otherType) {\r\n        case ItemType.None:\r\n        case ItemType.All:\r\n            newType = otherType;\r\n            break;\r\n        default:\r\n            newType = type ^ otherType;\r\n            break;\r\n        }\r\n\r\n        onChange(newType, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkType(otherType: ItemType): boolean {\r\n        const { type } = this.props;\r\n        if (type !== ItemType.All && otherType === ItemType.All)\r\n            return false;\r\n        return (type & otherType) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { type } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (type === ItemType.None)\r\n            selectedText = ItemType[ItemType.None];\r\n        else if (type === ItemType.All)\r\n            selectedText = ItemType[ItemType.All];\r\n        else if (TypeMultiSelect.isPowerOf2(type))\r\n            selectedText = ItemType[type];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm flex items-center justify-between rounded-r bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"10.29rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemType).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemType: ItemType = ItemType[value as keyof typeof ItemType];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleType(itemType)}>\r\n                                    {(this.checkType(itemType) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkType(itemType) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemType[itemType]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemQuery, ItemQueryOptions } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type ListSortingBarProps = {\r\n    name: string;\r\n    items: PricedItem[];\r\n    isDataStale: boolean;\r\n    onReload(): Promise<void>;\r\n    onSetTimespan(timespan: HistoryTimespan): Promise<void>; \r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type ListSortingBarState = {\r\n    query: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    timespan: HistoryTimespan;\r\n}\r\n\r\nexport default class ListSortingBar extends React.Component<ListSortingBarProps, ListSortingBarState> {\r\n    constructor(props: ListSortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            query: new ItemQuery(),\r\n            filteredItems: props.items,\r\n            isFilterOpen: false,\r\n            timespan: HistoryTimespan.OneMonth\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.sortCompare = this.sortCompare.bind(this); \r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n        this.onSetTimespan = this.onSetTimespan.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFilter();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ListSortingBarProps) {\r\n        if (prevProps.items !== this.props.items)\r\n            this.onFilter();\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({query: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    onFilter() {\r\n        // TODO: Implement filtering of the items from props here\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase()) &&\r\n                   (query.type & item.Type) !== 0 &&\r\n                   (query.rarity & item.Rarity) !== 0 &&\r\n                   item.Level >= query.minLevel &&\r\n                   item.Level <= query.maxLevel &&\r\n                   item.BuyPrice >= query.minBuyPrice &&\r\n                   item.BuyPrice <= query.maxBuyPrice &&\r\n                   item.SellPrice >= query.minSellPrice &&\r\n                   item.SellPrice <= query.maxSellPrice;\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    // Does an unfiltered search.\r\n    onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase());\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    sortCompare(a: PricedItem, b: PricedItem): number {\r\n        const { query } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n\r\n        if (query.sortBy === ItemField.Name) {\r\n            if (isSortAscending)\r\n                return a.Name.toLowerCase().localeCompare(b.Name.toLowerCase());\r\n            \r\n            return b.Name.toLowerCase().localeCompare(a.Name.toLowerCase());\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Appeal) {\r\n            if (isSortAscending)\r\n                return a.Appeal - b.Appeal;\r\n\r\n            return b.Appeal - a.Appeal;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Margin) {\r\n            if (isSortAscending)\r\n                return a.Margin - b.Margin;\r\n\r\n            return b.Margin - a.Margin;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sold) {\r\n            if (isSortAscending)\r\n                return a.Sold - b.Sold;\r\n\r\n            return b.Sold - a.Sold;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Bought) {\r\n            if (isSortAscending)\r\n                return a.Bought - b.Bought;\r\n\r\n            return b.Bought - a.Bought;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Buys) {\r\n            if (isSortAscending)\r\n                return a.BuyPrice - b.BuyPrice;\r\n\r\n            return b.BuyPrice - a.BuyPrice;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sells) {\r\n            if (isSortAscending)\r\n                return a.SellPrice - b.SellPrice;\r\n\r\n            return b.SellPrice - a.SellPrice;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.name = value;\r\n            return {query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.type = newType;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.rarity = newRarity;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            if (value > query.maxLevel)\r\n                return {query};\r\n\r\n            query.minLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            if (value < query.minLevel)\r\n                return {query};\r\n\r\n            query.maxLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.minBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.maxBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.minSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.maxSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    async onSetTimespan(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const { onSetTimespan } = this.props;\r\n        const value = event.target.value;\r\n        const timespan = parseInt(value) as HistoryTimespan;\r\n        this.setState({timespan}, async () => await onSetTimespan(timespan));\r\n    }\r\n\r\n    render() {\r\n        const { name, isDataStale, onReload, children } = this.props;\r\n        const { query, isFilterOpen, filteredItems, timespan } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <span className=\"\">{name}</span>\r\n                    \r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={query.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={query.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Time Span</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 mr-4 rounded h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={timespan} \r\n                            onChange={this.onSetTimespan}>\r\n                            <option value={HistoryTimespan.OneHour} className=\"\">{HistoryTimespan[HistoryTimespan.OneHour]}</option>\r\n                            <option value={HistoryTimespan.SixHours} className=\"\">{HistoryTimespan[HistoryTimespan.SixHours]}</option>\r\n                            <option value={HistoryTimespan.TwelveHours} className=\"\">{HistoryTimespan[HistoryTimespan.TwelveHours]}</option>\r\n                            <option value={HistoryTimespan.OneDay} className=\"\">{HistoryTimespan[HistoryTimespan.OneDay]}</option>\r\n                            <option value={HistoryTimespan.ThreeDays} className=\"\">{HistoryTimespan[HistoryTimespan.ThreeDays]}</option>\r\n                            <option value={HistoryTimespan.OneWeek} className=\"\">{HistoryTimespan[HistoryTimespan.OneWeek]}</option>\r\n                            <option value={HistoryTimespan.TwoWeeks} className=\"\">{HistoryTimespan[HistoryTimespan.TwoWeeks]}</option>\r\n                            <option value={HistoryTimespan.OneMonth} className=\"\">{HistoryTimespan[HistoryTimespan.OneMonth]}</option>\r\n                        </select>\r\n\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\", zIndex: 100}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={query.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={query.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={query.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={() => {\r\n                                                    this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out relative flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            title={`${isDataStale ? \"Reload Data (Data may be stale)\" : \"Reload Data\"}`}\r\n                            onClick={onReload}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                            {isDataStale && (\r\n                                <div className=\"absolute flex h-3 w-3\" style={{top: \"-0.35rem\", right: \"-0.35rem\"}}>\r\n                                    <span className=\"animate-ping h-3 w-3 absolute rounded-full bg-yellow-500 opacity-75\"></span>\r\n                                    <span className=\"relative rounded-full h-3 w-3 bg-yellow-500\"></span>\r\n                                </div>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n            </>\r\n        );\r\n    }\r\n}","export class HistoryItemQuery {\r\n    public readonly id: number;\r\n    public readonly hasDetails: boolean;\r\n    public readonly newest: number;\r\n\r\n    constructor(id: number, hasDetails: boolean = false, newest: number = 0) {\r\n        this.id = id;\r\n        this.hasDetails = hasDetails;\r\n        this.newest = newest;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            id: this.id.toString(),\r\n            hasDetails: this.hasDetails.toString(),\r\n            newest: this.newest.toString()\r\n        };\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { ItemPriceSnapshot } from \"./ItemPriceSnapshot\";\r\n\r\nexport class HistoryItemPrices {\r\n    public readonly Id: number;\r\n    public readonly History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.History = history;\r\n    }\r\n}\r\n\r\nexport class HistoryItem {\r\n    public readonly Id: number;\r\n    public readonly ChatLink: string;\r\n    public readonly Name: string;\r\n    public readonly Icon: string;\r\n    public readonly Description: string;\r\n    public readonly Type: ItemType;\r\n    public readonly Rarity: ItemRarity;\r\n    public readonly Level: number;\r\n    public History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, chatLink: string, name: string, icon: string, description: string, type: ItemType, rarity: ItemRarity, level: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.ChatLink = chatLink;\r\n        this.Name = name;\r\n        this.Icon = icon;\r\n        this.Description = description;\r\n        this.Type = type;\r\n        this.Rarity = rarity;\r\n        this.Level = level;\r\n        this.History = history;\r\n    }\r\n\r\n    filterHistory(predicate: (value: ItemPriceSnapshot, index: number, array: ItemPriceSnapshot[]) => unknown) {\r\n        this.History = this.History.filter(predicate);\r\n    }\r\n}\r\n\r\nexport class HistoryItemFactory {\r\n    static ToHistoryItem(item: any): HistoryItem | null {\r\n        try {\r\n            const result = new HistoryItem (\r\n                item.id, \r\n                item.chatLink,\r\n                item.name, \r\n                item.icon, \r\n                item.description,\r\n                parseInt(item.type),\r\n                parseInt(item.rarity),\r\n                item.level,\r\n                item.history\r\n            );\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToHistoryItems(items: any): HistoryItem[] {\r\n        const arr: HistoryItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = HistoryItemFactory.ToHistoryItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type PricedItem = {\r\n    Id: number;\r\n    ChatLink: string;\r\n    Name: string;\r\n    Icon: string;\r\n    Description: string;\r\n    Type: ItemType;\r\n    Rarity: ItemRarity;\r\n    Level: number;\r\n\r\n    BuyPrice: number;\r\n    SellPrice: number;\r\n    Appeal: number;\r\n    Margin: number;\r\n    Sold: number;\r\n    Bought: number;\r\n}\r\n\r\nexport class PricedItemFactory {\r\n    static ToPricedItem(item: any): PricedItem | null {\r\n        try {\r\n            const result: PricedItem = { \r\n                Id: item.id, \r\n                ChatLink: item.chatLink,\r\n                Name: item.name, \r\n                Icon: item.icon, \r\n                Description: item.description,\r\n                Type: parseInt(item.type),\r\n                Rarity: parseInt(item.rarity),\r\n                Level: item.level,\r\n\r\n                BuyPrice: item.buyPrice,\r\n                SellPrice: item.sellPrice,\r\n                Appeal: parseFloat(parseFloat(item.appeal).toFixed(2)),\r\n                Margin: parseFloat(parseFloat(item.margin).toFixed(2)),\r\n                Sold: parseFloat(parseFloat(item.sold).toFixed(2)),\r\n                Bought: parseFloat(parseFloat(item.bought).toFixed(2))\r\n            };\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToPricedItems(items: any): PricedItem[] {\r\n        const arr: PricedItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = PricedItemFactory.ToPricedItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","const environment = {\r\n    urls: {\r\n        authority: \"https://auth.devwulfcodes.com\",\r\n        host: \"https://gw2.devwulfcodes.com\",\r\n        gw2calculator: \"https://gw2.devwulfcodes.com/api\"\r\n    }\r\n};\r\n\r\nexport default environment;","import { HistoryItem, HistoryItemFactory } from \"../dataContracts/HistoryItem\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem, PricedItemFactory } from \"../dataContracts/PricedItem\";\r\nimport environment from \"../environment\";\r\n\r\nclass ApiService {\r\n    public async GetItems(accessToken: string, query: ItemQuery, pageNumber: number): Promise<PricedItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems?\" + new URLSearchParams(query.toObject()) + `&pageNumber=${pageNumber}`;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return PricedItemFactory.ToPricedItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemPageCount(accessToken: string, query: ItemQuery): Promise<number> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems/pageCount?\" + new URLSearchParams(query.toObject());\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result;\r\n\r\n        console.log(result);\r\n        return 0;\r\n    }\r\n\r\n    public async GetHistoryItems(accessToken: string, queries: HistoryItemQuery[]): Promise<HistoryItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/historyItems\";\r\n        const response = await ApiService.Post(url, accessToken, queries);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return HistoryItemFactory.ToHistoryItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemLists(accessToken: string) : Promise<ItemList[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getLists\";\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemLists;\r\n            const itemLists: ItemList[] = [];\r\n            items.forEach((item: any) => {\r\n                const itemList: ItemList = {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n                \r\n                itemLists.push(itemList);\r\n            });\r\n\r\n            return itemLists;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemList(accessToken: string, id: string) : Promise<number[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getList/\" + id;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemIds;\r\n            const itemIds: number[] = [];\r\n            items.forEach((id: any) => {\r\n                const idNum = parseInt(id);\r\n                itemIds.push(idNum);\r\n            });\r\n\r\n            return itemIds;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async CreateList(accessToken: string, name: string) : Promise<string | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/createList\";\r\n        const response = await ApiService.Post(url, accessToken, {name});\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result.listId;\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async UpdateListName(accessToken: string, id: string, name: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/updateName\";\r\n        const response = await ApiService.Post(url, accessToken, {id, name});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async AddListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/addItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n        \r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteList(accessToken: string, id: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteList\";\r\n        const response = await ApiService.Post(url, accessToken, {id});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    private static async Get(url: string, accessToken: string) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            }\r\n        });\r\n    }\r\n\r\n    private static async Post(url: string, accessToken: string, body: any) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            },\r\n            body: body ? JSON.stringify(body) : undefined\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import Dexie from \"dexie\";\r\nimport { HistoryItem, HistoryItemPrices } from \"../dataContracts/HistoryItem\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nclass LocalDB extends Dexie {\r\n    private historyItems: Dexie.Table<HistoryItem, number>;\r\n\r\n    constructor() {\r\n        super(\"GW2History\");\r\n\r\n        this.version(1).stores({\r\n            historyItems: \"Id\"\r\n        });\r\n        this.open().catch(error => {\r\n            console.error(`Opening the db '${this.name}' failed: ${error}`);\r\n        });\r\n\r\n        this.historyItems = this.table(\"historyItems\");\r\n        this.historyItems.mapToClass(HistoryItem);\r\n    }\r\n\r\n    async getHistoryItem(id: number, timespan: HistoryTimespan): Promise<HistoryItem | null> {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return null;\r\n        \r\n        if (timespan === HistoryTimespan.OneMonth)\r\n            return item;\r\n\r\n        const now = new Date();\r\n        let timeFromNow: number;\r\n        switch (timespan) {\r\n        case HistoryTimespan.OneHour:\r\n            timeFromNow = now.setTime(now.getTime() - (1 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.SixHours:\r\n            timeFromNow = now.setTime(now.getTime() - (6 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.TwelveHours:\r\n            timeFromNow = now.setTime(now.getTime() - (12 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.OneDay:\r\n            timeFromNow = now.setDate(now.getDate() - 1);\r\n            break;\r\n        case HistoryTimespan.ThreeDays:\r\n            timeFromNow = now.setDate(now.getDate() - 3);\r\n            break;\r\n        case HistoryTimespan.OneWeek:\r\n            timeFromNow = now.setDate(now.getDate() - 7);\r\n            break;\r\n        case HistoryTimespan.TwoWeeks:\r\n            timeFromNow = now.setDate(now.getDate() - 14);\r\n            break;\r\n        default:\r\n            timeFromNow = now.setDate(now.getDate() - 30);\r\n            break;\r\n        }\r\n        \r\n        item.filterHistory(price => price.time >= timeFromNow);\r\n        return item;\r\n    }\r\n\r\n    async hasDetails(id: number): Promise<boolean> {\r\n        const item = await this.historyItems.get(id);\r\n        if (item && item.Name)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    async getNewestTime(id: number): Promise<number> {\r\n        const item = await this.getHistoryItem(id, HistoryTimespan.OneMonth);\r\n        if (!item || !item.History)\r\n            return 0;\r\n        \r\n        return item.History[0].time;\r\n    }\r\n\r\n    async setHistoryItem(item: HistoryItem) {\r\n        if (!item)\r\n            return;\r\n            \r\n        const dbItem = await this.historyItems.get(item.Id);\r\n        if (!dbItem)\r\n            await this.historyItems.add(item, item.Id);\r\n\r\n        await this.historyItems.update(item.Id, {\r\n            ChatLink: item.ChatLink,\r\n            Name: item.Name,\r\n            Icon: item.Icon,\r\n            Description: item.Description,\r\n            Type: item.Type,\r\n            Rarity: item.Rarity,\r\n            Level: item.Level,\r\n            History: item.History\r\n        });\r\n    }\r\n\r\n    async setHistoryItemPrices(id: number, newHistory: ItemPriceSnapshot[]) {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return;\r\n\r\n        // Else, update the history of the current item to include the new history\r\n        // Unshift (push to front) here because history is sorted by time descending,\r\n        // and the higher the time value, the newer it is.\r\n        item.History.unshift(...newHistory);\r\n        await this.historyItems.update(id, {History: item.History});\r\n    }\r\n\r\n    async deleteOldPrices(id: number) {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return;\r\n        \r\n        const currentPrices: ItemPriceSnapshot[] = [];\r\n        const now: Date = new Date();\r\n        const monthFromNow: number = now.setDate(now.getDate() - 30);\r\n        item.History.forEach(price => {\r\n            if (price.time >= monthFromNow)\r\n                currentPrices.push(price);\r\n        });\r\n\r\n        await this.historyItems.update(id, {History: currentPrices});\r\n    }\r\n}\r\n\r\nexport default new LocalDB();","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemComparisonSlot from \"../components/ItemComparisonSlot\";\r\nimport ListSortingBar from \"../components/ListSortingBar\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport { HistoryItem } from \"../dataContracts/HistoryItem\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport type MyListProps = {\r\n    listId?: string;\r\n}\r\n\r\nexport type MyListState = {\r\n    id: string,\r\n    user: User | undefined;\r\n    items: PricedItem[];\r\n    timespan: HistoryTimespan;\r\n    isLoading: boolean;\r\n    isDataStale: boolean;\r\n}\r\n\r\nexport default class MyList extends React.Component<MyListProps, MyListState> {\r\n    constructor(props: MyListProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            user: undefined,\r\n            /*[19721, 46736, 46738, 46739, 72224, 9576, 24277, 67015],*/\r\n            items: [],\r\n            timespan: HistoryTimespan.OneMonth,\r\n            isLoading: false,\r\n            isDataStale: false\r\n        };\r\n\r\n        this.updateId = this.updateId.bind(this);\r\n        this.updateItems = this.updateItems.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.onReload = this.onReload.bind(this);\r\n        this.setTimespan = this.setTimespan.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async updateId() {\r\n        const { listId } = this.props;\r\n        const { id } = this.state;\r\n        if (listId && id !== listId)\r\n            this.setState({id: listId, items: [], isLoading: true}, async () => {\r\n                await this.updateItems();\r\n            });\r\n    }\r\n\r\n    async updateItems() {\r\n        const { user, id, timespan } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        this.setState({items: [], isLoading: true, isDataStale: false}, async () => {\r\n            const ids = await ApiService.GetItemList(user.access_token, id);\r\n            if (!ids)\r\n                return;\r\n    \r\n            const historyItemQueries: HistoryItemQuery[] = [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n                const itemId = ids[i];\r\n                const newest = await LocalDB.getNewestTime(itemId);\r\n                const hasDetails = await LocalDB.hasDetails(itemId);\r\n                historyItemQueries.push(new HistoryItemQuery(itemId, hasDetails, newest));\r\n            }\r\n    \r\n            const historyItems = await ApiService.GetHistoryItems(user.access_token, historyItemQueries);\r\n            if (!historyItems)\r\n                return;\r\n    \r\n            const pricedItems: PricedItem[] = [];\r\n            for (var i = 0; i < historyItems.length; i++) {\r\n                const item = historyItems[i];\r\n                const itemQuery = historyItemQueries[i];\r\n                await LocalDB.deleteOldPrices(item.Id);\r\n                if (!itemQuery.hasDetails)\r\n                    await LocalDB.setHistoryItem(item);\r\n                else\r\n                    await LocalDB.setHistoryItemPrices(item.Id, item.History);\r\n    \r\n                const dbItem = await LocalDB.getHistoryItem(item.Id, timespan);\r\n                if (!dbItem)\r\n                    continue;\r\n    \r\n                const pricedItem = MyList.historyToPriced(dbItem);\r\n                pricedItems.push(pricedItem);\r\n            }\r\n\r\n            this.setState({items: pricedItems, isLoading: false}, () => {\r\n                setTimeout(() => {\r\n                    this.setState({isDataStale: true});\r\n                }, 300000);\r\n            });\r\n        });\r\n    }\r\n\r\n    static historyToPriced(item: HistoryItem): PricedItem {\r\n        const newestPrice = item.History[0];\r\n        const buyPrice = newestPrice.buyPrice;\r\n        const sellPrice = newestPrice.sellPrice;\r\n        const margin = (sellPrice - buyPrice) / sellPrice * 100;\r\n        let sumSold: number = 0;\r\n        let sumBought: number = 0;\r\n        item.History.forEach(price => {\r\n            sumSold += price.sold;\r\n            sumBought += price.bought;\r\n        });\r\n\r\n        const avgSold = sumSold / item.History.length;\r\n        const avgBought = sumBought / item.History.length;\r\n\r\n        const appeal = margin > 15 ? margin * avgSold * avgBought : 0;\r\n\r\n        const pricedItem: PricedItem = {\r\n            Id: item.Id,\r\n            ChatLink: item.ChatLink,\r\n            Name: item.Name,\r\n            Icon: item.Icon,\r\n            Description: item.Description,\r\n            Type: item.Type,\r\n            Rarity: item.Rarity,\r\n            Level: item.Level,\r\n        \r\n            BuyPrice: buyPrice,\r\n            SellPrice: sellPrice,\r\n            Appeal: appeal,\r\n            Margin: margin,\r\n            Sold: avgSold,\r\n            Bought: avgBought\r\n        };\r\n\r\n        return pricedItem;\r\n    }\r\n\r\n    async deleteItem(itemId: number) {\r\n        const { id, user, items } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteListItem(user.access_token, id, itemId);\r\n        const tempItems = [...items];\r\n        if (result) {\r\n            const itemIndex = tempItems.findIndex(item => item.Id === itemId);\r\n            tempItems.splice(itemIndex, 1);\r\n            this.setState({items: tempItems});\r\n        }\r\n    }\r\n\r\n    async onReload() {\r\n        this.setState({items: [], isLoading: true}, async () => {\r\n            await this.updateItems();\r\n        });\r\n    }\r\n\r\n    async setTimespan(timespan: HistoryTimespan) {\r\n        this.setState({items: [], timespan: timespan, isLoading: true}, async () => {\r\n            const { user, id } = this.state;\r\n            if (!user)\r\n                return;\r\n\r\n            const ids = await ApiService.GetItemList(user.access_token, id);\r\n            if (!ids)\r\n                return;\r\n\r\n            const pricedItems: PricedItem[] = [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n                const itemId = ids[i];\r\n                const item = await LocalDB.getHistoryItem(itemId, timespan);\r\n                if (!item)\r\n                    continue;\r\n                \r\n                const pricedItem = MyList.historyToPriced(item);\r\n                pricedItems.push(pricedItem);\r\n            }\r\n\r\n            this.setState({items: pricedItems, isLoading: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, items, isLoading, isDataStale } = this.state;\r\n\r\n        return (\r\n            <div className=\"main w-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n                            \r\n                        if (user) {\r\n                            return(\r\n                                <ListSortingBar items={items} name=\"Tracked Items\" isDataStale={isDataStale} onReload={this.onReload} onSetTimespan={this.setTimespan}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX style={{height: \"calc(100vh - 11rem)\"}}>\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemComparisonSlot item={value} deleteItem={this.deleteItem} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"flex justify-center\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </ListSortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(<>\r\n                            <ListSortingBar items={[]} name=\"Items\" isDataStale={true} onReload={async () => {}} onSetTimespan={async () => {}}>\r\n                                {sortedItems => (<></>)}\r\n                            </ListSortingBar>\r\n\r\n                            {/*\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                            */}\r\n                        </>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n                \r\n                {/*\r\n                <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                <div className=\"block\">\r\n                    <div id=\"head\" className=\"\">\r\n                        <div className=\"flex flex-row flex-wrap\">\r\n                            <div className=\"font-bold\">Name</div>\r\n                            <div className=\"font-bold\">Buys</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"body\" className=\"\">\r\n\r\n                    </div>\r\n                </div>\r\n                */}\r\n\r\n                {/*\r\n                <table className=\"table-fixed w-full\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"w-2/8\">Name</th>\r\n                            <th className=\"w-1/8\">Buys</th>\r\n                            <th className=\"w-1/8\">Sells</th>\r\n                            <th className=\"w-1/8\">Fee</th>\r\n                            <th className=\"w-1/8\">Appeal</th>\r\n                            <th className=\"w-1/8\">Margin</th>\r\n                            <th className=\"w-1/8\">Transaction Rate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                    </tbody>\r\n                </table>\r\n                */}\r\n            </div>\r\n        );\r\n    }\r\n}","import { AreaPoint, AxisScrollStrategies, AxisTickStrategies, ChartOptions, ChartXY, ColorRGBA, Dashboard, emptyLine, InternalBackground, LegendBox, LegendBoxBuilders, LegendBoxEntry, lightningChart, LineStyle, Point, PointableBackground, PointMarker, SolidFill, SolidLine, Themes, UIBackground, UIElement, UIOrigins, UIPartWithBackground, UITextBox, XOHLC } from \"@arction/lcjs\";\r\nimport { createOHLCGenerator } from \"@arction/xydata\";\r\nimport React from \"react\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nexport type ItemGraphProps = {\r\n    itemId: number;\r\n}\r\n\r\nexport type ItemGraphState = {\r\n\r\n}\r\n\r\nexport default class ItemGraph extends React.Component<ItemGraphProps, ItemGraphState> {\r\n    private dashboard: Dashboard | undefined;\r\n    private buyPriceChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private sellPriceChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n\r\n    constructor(props: ItemGraphProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.createChart = this.createChart.bind(this);\r\n        this.createOHLCChart = this.createOHLCChart.bind(this);\r\n    }\r\n\r\n    async createChart() {\r\n        const { itemId } = this.props;\r\n        // Get the history item from the local db here\r\n        /* */\r\n        const item = await LocalDB.getHistoryItem(itemId, HistoryTimespan.OneMonth);\r\n        if (!item)\r\n            return;\r\n\r\n        // TODO: Replace this big number with the time of the earliest price snapshot in history\r\n        const timeSpanInMs = 15 * 60 * 1000; // 15 mins\r\n        const firstPriceSnapshot = item.History[item.History.length - 1];\r\n        const startingTime = firstPriceSnapshot.time - (firstPriceSnapshot.time % timeSpanInMs);\r\n        const buyPricesData: XOHLC[] = [];\r\n        const sellPricesData: XOHLC[] = [];\r\n\r\n        let pricesIn15Mins: ItemPriceSnapshot[] = [];\r\n        let timeTracker = 0;\r\n        // Go backwards here because the history is sorted in reverse\r\n        for (var i = item.History.length - 1; i >= 0; i--) {\r\n            const priceSnapshot = item.History[i];\r\n            const time = timeTracker + startingTime;\r\n            if (priceSnapshot.time < time + timeSpanInMs && priceSnapshot.time >= time)\r\n                pricesIn15Mins.push(priceSnapshot);\r\n\r\n            // This is for checking if there's no next price snapshot\r\n            const nextPriceSnapshot = i - 1 >= 0 ? item.History[i - 1] : undefined;\r\n            \r\n            // This means the next price snapshot is already beyond the time interval we're compiling\r\n            if (!nextPriceSnapshot || nextPriceSnapshot.time >= time + timeSpanInMs) {\r\n                timeTracker += timeSpanInMs;\r\n                if (pricesIn15Mins.length <= 0)\r\n                    continue;\r\n\r\n                let minBuy = Number.POSITIVE_INFINITY;\r\n                let maxBuy = 0;\r\n                let minSell = Number.POSITIVE_INFINITY;\r\n                let maxSell = 0;\r\n\r\n                for (var j = 0; j < pricesIn15Mins.length; j++) {\r\n                    const price = pricesIn15Mins[j];\r\n                    if (price.buyPrice < minBuy)\r\n                        minBuy = price.buyPrice;\r\n                    if (price.buyPrice > maxBuy)\r\n                        maxBuy = price.buyPrice;\r\n\r\n                    if (price.sellPrice < minSell)\r\n                        minSell = price.sellPrice;\r\n                    if (price.sellPrice > maxSell)\r\n                        maxSell = price.sellPrice;\r\n                }\r\n\r\n                const firstSnapshot = pricesIn15Mins[0];\r\n                const lastSnapshot = pricesIn15Mins[pricesIn15Mins.length - 1];\r\n                const buyDataPoint: XOHLC = [timeTracker, firstSnapshot.buyPrice, maxBuy, minBuy, lastSnapshot.buyPrice];\r\n                const sellDataPoint: XOHLC = [timeTracker, firstSnapshot.sellPrice, maxSell, minSell, lastSnapshot.sellPrice];\r\n\r\n                buyPricesData.push(buyDataPoint);\r\n                sellPricesData.push(sellDataPoint);\r\n\r\n                minBuy = Number.POSITIVE_INFINITY;\r\n                maxBuy = 0;\r\n                minSell = Number.POSITIVE_INFINITY;\r\n                maxSell = 0;\r\n                pricesIn15Mins = [];\r\n            }\r\n        }\r\n        /**/\r\n\r\n        // Define all chart options here\r\n        this.dashboard = lightningChart().Dashboard({\r\n            theme: Themes.dark,\r\n            numberOfColumns: 2,\r\n            numberOfRows: 1,\r\n            container: itemId.toString()\r\n        });\r\n\r\n        this.buyPriceChart = this.createOHLCChart(\"Buy Prices\", startingTime, buyPricesData, {\r\n            columnIndex: 0,\r\n            rowIndex: 0,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n        this.sellPriceChart = this.createOHLCChart(\"Sell Prices\", startingTime, sellPricesData, {\r\n            columnIndex: 1,\r\n            rowIndex: 0,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n    }\r\n\r\n    createOHLCChart(title: string, startingTime: number, data: XOHLC[], options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        //#region Buy Price Chart\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        // TODO: Make this the date and time of the very first price snapshot for an item\r\n        const dateOrigin = new Date(startingTime); \r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                (tickStrategy) => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setAutoCursor(cursor => {\r\n                cursor.disposeTickMarkerY();\r\n                cursor.setGridStrokeYStyle(emptyLine);\r\n            })\r\n            .setPadding({right: 40});\r\n\r\n        const buyPriceLegend = chart\r\n            .addLegendBox(LegendBoxBuilders.HorizontalLegendBox)\r\n            .setPosition({x: 100, y: 100})\r\n            .setOrigin(UIOrigins.RightTop);\r\n\r\n        const priceAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(\"Price\");\r\n\r\n        // Colors of the Bollinger Band\r\n        const areaRangeFill = new SolidFill().setColor(ColorRGBA(100, 149, 237, 50));\r\n        const areaRangeStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(100, 149, 237)))\r\n            .setThickness(1);\r\n\r\n        // Settings of the Bollinger Band\r\n        const areaRange = chart.addAreaRangeSeries({ yAxis: priceAxisY })\r\n            .setName(\"Bollinger Band\")\r\n            .setHighFillStyle(areaRangeFill)\r\n            .setLowFillStyle(areaRangeFill)\r\n            .setHighStrokeStyle(areaRangeStroke)\r\n            .setLowStrokeStyle(areaRangeStroke)\r\n            .setMaxPointCount(0) // Solves the part of the area vanishing when zooming in\r\n            .setMouseInteractions(false)\r\n            .setCursorEnabled(false);\r\n\r\n        const lineStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(237, 137, 54)))\r\n            .setThickness(2);\r\n        const movingAverage = chart.addLineSeries()\r\n            .setName(\"Moving Average\")\r\n            .setStrokeStyle(lineStroke)\r\n            .setMouseInteractions(false)\r\n            .setCursorEnabled(false);\r\n\r\n        const priceFigureWidth = 5.0;\r\n        const borderBlack = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(26, 32, 44)))\r\n            .setThickness(1);\r\n        const fillBrightRed = new SolidFill().setColor(ColorRGBA(229, 62, 62));\r\n        const fillDimRed = new SolidFill().setColor(ColorRGBA(116, 42, 42));\r\n        const fillBrightGreen = new SolidFill().setColor(ColorRGBA(62, 225, 62));\r\n        const fillDimGreen = new SolidFill().setColor(ColorRGBA(34, 84, 61));\r\n\r\n        const candles = chart\r\n            .addOHLCSeries({yAxis: priceAxisY});\r\n\r\n        candles.setName(\"Candlesticks\")\r\n            .setFigureWidth(priceFigureWidth)\r\n            .setPositiveStyle(candlestick => \r\n                candlestick\r\n                    .setBodyFillStyle(fillBrightGreen)\r\n                    .setBodyStrokeStyle(borderBlack)\r\n                    .setStrokeStyle(new SolidLine()\r\n                        .setFillStyle(fillDimGreen)\r\n                        .setThickness(2))\r\n            )\r\n            .setNegativeStyle(candlestick => \r\n                candlestick\r\n                    .setBodyFillStyle(fillBrightRed)\r\n                    .setBodyStrokeStyle(borderBlack)\r\n                    .setStrokeStyle(new SolidLine()\r\n                        .setFillStyle(fillDimRed)\r\n                        .setThickness(2))\r\n            );\r\n\r\n        const priceNums: number[] = [];\r\n        let n: number = 0;\r\n        const period = 30;\r\n        const add: (ohlc: XOHLC) => void = (ohlc) => {\r\n            candles.add(ohlc);\r\n\r\n            priceNums.push((ohlc[2] + ohlc[3] + ohlc[4]) / 3);\r\n\r\n            if (n < period) {\r\n                n++;\r\n            } else {\r\n                priceNums.shift();\r\n            }\r\n\r\n            let priceSum = 0;\r\n            priceNums.forEach(num => priceSum += num);\r\n            const priceAverage = priceSum / n;\r\n\r\n            let sqrDeviationSum = 0;\r\n            priceNums.forEach(num => sqrDeviationSum += Math.pow(num - priceAverage, 2));\r\n            const stdDeviation = Math.sqrt(sqrDeviationSum / n);\r\n            \r\n            const areaPoint: AreaPoint = {\r\n                position: ohlc[0],\r\n                high: priceAverage + (stdDeviation * 2),\r\n                low: priceAverage - (stdDeviation * 2)\r\n            };\r\n            areaRange.add(areaPoint);\r\n\r\n            const smaPoint: Point = {\r\n                x: ohlc[0],\r\n                y: priceAverage\r\n            };\r\n            movingAverage.add(smaPoint);\r\n        };\r\n\r\n        /*\r\n        createOHLCGenerator()\r\n            .setNumberOfPoints(100)\r\n            .setDataFrequency(15 * 60 * 1000)\r\n            .generate()\r\n            .toPromise()\r\n            .then(data => {\r\n                data.forEach(add);\r\n                setViewNicely();\r\n            });\r\n        /**/\r\n        //#endregion\r\n\r\n        const entries: LegendBoxEntry[] = buyPriceLegend.add(chart) as LegendBoxEntry[];\r\n        entries[0]\r\n            .setButtonOnFillStyle(areaRangeStroke.getFillStyle())\r\n            .setButtonOnStrokeStyle(emptyLine);\r\n\r\n        const setViewNicely = () => {\r\n            const yBoundsPrice = { min: (areaRange.getYMin() ?? 0), max: (areaRange.getYMax() ?? 0), range: (areaRange.getYMax() ?? 0) - (areaRange.getYMin() ?? 0) };\r\n            // Set Y axis intervals so that series don't overlap and volume is under stocks.\r\n            priceAxisY.setInterval(yBoundsPrice.min - yBoundsPrice.range * .33, yBoundsPrice.max);\r\n        };\r\n\r\n        // For the candlesticks on hover tooltip\r\n        candles.setResultTableFormatter((builder, series, segment) => {\r\n            const open = segment.getOpen();\r\n            const close = segment.getClose();\r\n            return builder\r\n                .addRow(series.getName())\r\n                .addRow(series.axisX.formatValue(segment.getPosition()))\r\n                .addRow(`High ${segment.getHigh().toFixed(2)}`)\r\n                .addRow(`${open > close ? `Open ${open.toFixed(2)}` : `Close ${close.toFixed(2)}`}`)\r\n                .addRow(`${open < close ? `Open ${open.toFixed(2)}` : `Close ${close.toFixed(2)}`}`)\r\n                .addRow(`Low ${segment.getLow().toFixed(2)}`);\r\n        });\r\n\r\n        /* */\r\n        data.forEach(add);\r\n        setViewNicely();\r\n        /**/\r\n\r\n        return chart;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.createChart();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.sellPriceChart?.dispose();\r\n        this.buyPriceChart?.dispose();\r\n        this.dashboard?.dispose();\r\n\r\n        this.sellPriceChart = undefined;\r\n        this.buyPriceChart = undefined;\r\n        this.dashboard = undefined;\r\n    }\r\n\r\n    render() {\r\n        const { itemId } = this.props;\r\n\r\n        return(\r\n            <div id={itemId.toString()} className=\"h-full\"></div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ItemGraph from \"../components/ItemGraph\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex bg-gray-800 text-gray-200\">\r\n                <div className=\"h-1/2 w-full\">\r\n                    <ItemGraph itemId={19721} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemSummarySlotProps = {\r\n    item: PricedItem;\r\n    accessToken: string;\r\n}\r\n\r\nexport type ItemSummarySlotState = {\r\n    isDragging: boolean;\r\n    isAdding: boolean;\r\n}\r\n\r\nexport default class ItemSummarySlot extends React.Component<ItemSummarySlotProps, ItemSummarySlotState> {\r\n    private dragTarget: React.RefObject<HTMLDivElement>;\r\n    \r\n    constructor(props: ItemSummarySlotProps) {\r\n        super(props);\r\n\r\n        this.dragTarget = React.createRef();\r\n\r\n        this.state = {\r\n            isDragging: false,\r\n            isAdding: false\r\n        };\r\n\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    onDragStart(event: React.DragEvent<HTMLDivElement>) {\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData(\"text\", this.props.item.Id.toString());\r\n\r\n        requestAnimationFrame(() => {\r\n            this.dragTarget.current?.classList.add(\"hide\");\r\n        });\r\n\r\n        this.setState({isDragging: true});\r\n    }\r\n\r\n    onDragEnd(event: React.DragEvent<HTMLDivElement>) {\r\n        this.dragTarget.current?.classList.remove(\"hide\");\r\n        this.setState({isDragging: false});\r\n    }\r\n\r\n    onAdd() {\r\n        this.setState(prevState => ({isAdding: !prevState.isAdding}));\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props;\r\n        const { isDragging, isAdding } = this.state;\r\n\r\n        return(\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-3/12 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <span className=\"italic text-gray-200\">{item.Name}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Buys</label>\r\n                    <Price price={item.BuyPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sells</label>\r\n                    <Price price={item.SellPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Margin</label>\r\n                    <span className={`${item.Margin > 15 ? \"text-green-500\" : \"text-red-500\"}`}>{item.Margin}%</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sold</label>\r\n                    <span className=\"\">{item.Sold}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Bought</label>\r\n                    <span className=\"\">{item.Bought}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Appeal</label>\r\n                    <span className=\"\">{item.Appeal}</span>\r\n                </div>\r\n                <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                    <div className=\"relative px-2 py-1 mr-3 rounded shadow-lg bg-gray-800 text-gray-300 cursor-move\"\r\n                        draggable\r\n                        onDragStart={this.onDragStart}\r\n                        onDragEnd={this.onDragEnd}>\r\n                        <FontAwesomeIcon icon=\"arrows-alt\" />\r\n                        <div ref={this.dragTarget} className={`${isDragging ? \"\" : \"hidden\"} absolute px-2 py-1 flex flex-row items-center justify-center w-32 h-12 rounded bg-gray-800`} style={{top: \"-0.25rem\", left: \"-2.75rem\"}}>\r\n                            <img src={item.Icon} alt={item.Name} className=\"mr-3 w-8 h-8 select-none\"/>\r\n                            <span className=\"italic text-sm truncate text-gray-300 select-none\">{item.Name}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"relative\">\r\n                        <button className=\"transition duration-150 ease-in-out px-3 py-2 rounded shadow-lg bg-green-700 text-green-300 hover:bg-green-800 hover:text-green-200\"\r\n                            onClick={this.onAdd}>\r\n                            <FontAwesomeIcon icon=\"plus\" />\r\n                        </button>\r\n                        <div className={`${isAdding ? \"\" : \"hidden\"} arrow-up absolute flex flex-col justify-center w-24 rounded bg-gray-900 text-gray-300`} style={{height: \"5.45rem\", top: \"3.25rem\", left: \"-1.875rem\"}}>\r\n                            <Scrollbar noScrollX>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                            </Scrollbar>\r\n                        </div>\r\n                    </div>\r\n                    */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type SortingBarProps = {\r\n    name: string;\r\n    onLoadingStart(): void;\r\n    onLoadingStop(): void;\r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type SortingBarState = {\r\n    user: User | undefined;\r\n    pendingQuery: ItemQuery;\r\n    currentQuery: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    currentPage: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport default class SortingBar extends React.Component<SortingBarProps, SortingBarState> {\r\n    constructor(props: SortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            pendingQuery: new ItemQuery(),\r\n            currentQuery: new ItemQuery(),\r\n            filteredItems: [],\r\n            isFilterOpen: false,\r\n            currentPage: 1,\r\n            totalPages: 1\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onToPage = this.onToPage.bind(this);\r\n        this.onFirstPage = this.onFirstPage.bind(this);\r\n        this.onLastPage = this.onLastPage.bind(this);\r\n        this.onNextPage = this.onNextPage.bind(this);\r\n        this.onPrevPage = this.onPrevPage.bind(this);\r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({pendingQuery: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    async onFilter() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            const totalPages = await ApiService.GetItemPageCount(user.access_token, pendingQuery);\r\n            if (totalPages <= 0)\r\n                return;       \r\n    \r\n            onLoadingStart(); \r\n        \r\n            const items = await ApiService.GetItems(user.access_token, pendingQuery, 1) ?? [];\r\n            this.setState({filteredItems: items, currentQuery: pendingQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        const nameOnlyQuery = new ItemQuery({name: pendingQuery.name});\r\n        this.setState({filteredItems: []}, async () => {\r\n            const totalPages = await ApiService.GetItemPageCount(user.access_token, nameOnlyQuery);\r\n            if (totalPages <= 0)\r\n                return;  \r\n    \r\n            onLoadingStart();\r\n            \r\n            const items = await ApiService.GetItems(user.access_token, nameOnlyQuery, 1) ?? [];\r\n            this.setState({filteredItems: items, currentQuery: nameOnlyQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onToPage(pageNumber: number) {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (pageNumber <= 0 || pageNumber > totalPages)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n    \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, pageNumber) ?? [];\r\n            this.setState({filteredItems: items, currentPage: pageNumber}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onFirstPage() {\r\n        await this.onToPage(1);\r\n    }\r\n\r\n    async onLastPage() {\r\n        const { totalPages } = this.state;\r\n        await this.onToPage(totalPages);\r\n    }\r\n\r\n    async onNextPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage >= totalPages)\r\n            return;\r\n\r\n        \r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n    \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage + 1) ?? [];\r\n            this.setState({filteredItems: items, currentPage: currentPage + 1}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onPrevPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage <= 1)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n            \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage - 1) ?? [];\r\n            this.setState({filteredItems: items, currentPage: currentPage - 1}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.name = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.type = newType;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.rarity = newRarity;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            if (value > query.maxLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.minLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            if (value < query.minLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.maxLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.minBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.maxBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.minSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.maxSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        const { pendingQuery, filteredItems, isFilterOpen, currentPage, totalPages } = this.state;\r\n\r\n        const isSortAscending: boolean = pendingQuery.sortDirection === ItemFieldSort.Ascending;\r\n        const pageNums: number[] = [];\r\n        \r\n        for (var i = currentPage < 5 ? 1 : currentPage - 4; \r\n            i <= ((currentPage + 4) <= totalPages ? currentPage + 4 : totalPages); \r\n            i++) {\r\n            pageNums.push(i);\r\n        }\r\n\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <AuthenticationContext.Consumer>\r\n                        {props => {\r\n                            if (props.oidcUser != null && !this.state.user)\r\n                                this.setState({user: props.oidcUser}, this.onFilter);\r\n\r\n                            return(\r\n                                <></>\r\n                            );\r\n                        }}\r\n                    </AuthenticationContext.Consumer>\r\n                    <span className=\"\">{name}</span>\r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={pendingQuery.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-700 text-gray-300\" \r\n                            value={pendingQuery.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r border-l border-gray-800 bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\", zIndex: 100}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={pendingQuery.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={pendingQuery.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={pendingQuery.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={async () => {\r\n                                                    await this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            onClick={this.onFilter}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n                {totalPages > 0 && (\r\n                    <div className=\"mt-4 flex flex-row-reverse w-full\">\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onFirstPage}>\r\n                                <FontAwesomeIcon icon=\"angle-double-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">First</span>\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onPrevPage}>\r\n                                <FontAwesomeIcon icon=\"arrow-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">Prev</span>\r\n                            </button>\r\n                            {pageNums.map((value, index) => (\r\n                                <button key={index} disabled={currentPage === value} \r\n                                    className={`transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded ${currentPage === value ? \"bg-gray-900 text-gray-200 cursor-default\" : \"bg-gray-700 text-gray-300 hover:bg-gray-900 hover:text-gray-200 hover:shadow-lg\"}`}\r\n                                    onClick={() => this.onToPage(value)}>\r\n                                    {value}\r\n                                </button>\r\n                            ))}\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onNextPage}>\r\n                                <span className=\"mr-1\">Next</span>\r\n                                <FontAwesomeIcon icon=\"arrow-right\" className=\"text-xs\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onLastPage}>\r\n                                <span className=\"mr-1\">Last</span>\r\n                                <FontAwesomeIcon icon=\"angle-double-right\" className=\"text-xs\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { faDivide } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemSummarySlot from \"../components/ItemSummarySlot\";\r\nimport SortingBar from \"../components/SortingBar\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport type GeneralSearchProps = {\r\n\r\n}\r\n\r\nexport type GeneralSearchState = {\r\n    user: User | undefined;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default class GeneralSearch extends React.Component<GeneralSearchProps, GeneralSearchState> {\r\n    constructor(props: GeneralSearchProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            isLoading: false\r\n        };\r\n\r\n        this.onLoadingStart = this.onLoadingStart.bind(this);\r\n        this.onLoadingStop = this.onLoadingStop.bind(this);\r\n    }\r\n\r\n    onLoadingStart() {\r\n        this.setState({isLoading: true});\r\n    }\r\n\r\n    onLoadingStop() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const { user, isLoading } = this.state;\r\n\r\n        return(\r\n            <div className=\"main w-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n\r\n                        if (user) {\r\n                            return(\r\n                                <SortingBar name=\"Results\" onLoadingStart={this.onLoadingStart} onLoadingStop={this.onLoadingStop}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX style={{height: \"calc(100vh - 14rem)\"}}>\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemSummarySlot item={value} accessToken={user.access_token} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </SortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import environment from \"./environment\";\r\n\r\nconst configuration = {\r\n    client_id: \"gw2_calculator_app\",\r\n    response_type: \"id_token token\",\r\n    scope: \"openid email roles profile gw2calculator\",\r\n    automaticSilentRenew: true,\r\n    loadUserInfo: true,\r\n    authority: environment.urls.authority,\r\n    redirect_uri: `${environment.urls.host}/authentication/callback`,\r\n    post_logout_redirect_uri: `${environment.urls.host}/`,\r\n    silent_redirect_uri: `${environment.urls.host}/authentication/silent_callback`\r\n};\r\n\r\nexport default configuration;","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return(\r\n            <header className=\"\" style={{boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.2)\", zIndex: 100}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        return(\r\n                            <div className=\"flex justify-between items-center px-4 bg-indigo-700 text-indigo-200\">\r\n                                <div className=\"flex flex-row items-center\">\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-6 text-lg font-bold hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        GW2 Calculator\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/search\">\r\n                                        Search\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/list\">\r\n                                        My List\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                {props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <span className=\"mr-4\">Hello, {props.oidcUser.profile.name}!</span>\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.logout()}>\r\n                                            Logout\r\n                                        </button>\r\n                                    </div>\r\n                                ) ||\r\n                                (!props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.login()}>\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </header>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type AddItemListSlotProps = {\r\n    onAddItemList(name: string): Promise<void>;\r\n}\r\n\r\nexport type AddItemListSlotState = {\r\n    isAdding: boolean;\r\n    name: string;\r\n}\r\n\r\nexport default class AddItemListSlot extends React.Component<AddItemListSlotProps, AddItemListSlotState> {\r\n    constructor(props: AddItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdding: false,\r\n            name: \"\"\r\n        };\r\n\r\n        this.onAddItemListStart = this.onAddItemListStart.bind(this);\r\n        this.onAddItemListStop = this.onAddItemListStop.bind(this);\r\n        this.onAddItemList = this.onAddItemList.bind(this);\r\n    }\r\n\r\n    onAddItemListStart(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: true});\r\n    }\r\n\r\n    onAddItemListStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    async onAddItemList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { onAddItemList } = this.props;\r\n        const { name } = this.state;\r\n        if (!name)\r\n            return;\r\n        \r\n        await onAddItemList(name);\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    render() {\r\n        const { isAdding, name } = this.state;\r\n\r\n        return(\r\n            <div className=\"transition duration-150 ease-in-out flex flex-row items-center justify-between mx-2 border-2 border-dashed rounded-lg border-indigo-700 bg-opacity-0 bg-indigo-700 text-indigo-300 hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer\"\r\n                tabIndex={0}\r\n                onClick={this.onAddItemListStart}>\r\n                {(!isAdding && \r\n                    <div className=\"px-4 py-3\">\r\n                        <div className=\"pointer-events-none select-none\">\r\n                            <FontAwesomeIcon icon=\"plus\" className=\"mr-3\" />\r\n                            Add New List...\r\n                        </div>\r\n                    </div>\r\n                ) || \r\n                (isAdding && \r\n                    <div className=\"px-2 py-3 flex flex-row\">\r\n                        <input type=\"text\" className=\"px-2 mr-1 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={name} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({name: event.target.value})} />\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onAddItemList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onAddItemListStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport interface CustomLinkProps extends React.HTMLAttributes<HTMLElement> {\r\n    to: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function CustomLink(props: CustomLinkProps) {\r\n    const { push } = useHistory();\r\n    const { to, children, ...rest } = props;\r\n    return(\r\n        <div onClick={() => push(to)} {...rest}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type ItemListSlotProps = {\r\n    itemList: ItemList;\r\n    onDrop(id: string, itemId: number): Promise<void>;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteList(id: string): Promise<void>;\r\n}\r\n\r\nexport type ItemListSlotState = {\r\n    isMouseHover: boolean;\r\n    isDragHover: boolean;\r\n    isEditing: boolean;\r\n    newName: string;\r\n}\r\n\r\nexport default class ItemListSlot extends React.Component<ItemListSlotProps, ItemListSlotState> {\r\n    constructor(props: ItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isMouseHover: false,\r\n            isDragHover: false,\r\n            isEditing: false,\r\n            newName: props.itemList.name\r\n        };\r\n\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.onDragEnter = this.onDragEnter.bind(this);\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDragLeave = this.onDragLeave.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n\r\n        this.onEditNameStart = this.onEditNameStart.bind(this);\r\n        this.onEditNameStop = this.onEditNameStop.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.setState({isMouseHover: true});\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.setState({isMouseHover: false});\r\n    }\r\n\r\n    async onDragEnter(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: true});\r\n    }\r\n\r\n    onDragOver(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    async onDragLeave(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    async onDrop(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        const { itemList, onDrop } = this.props;\r\n        const itemId = parseInt(event.dataTransfer.getData(\"text\"));\r\n        await onDrop(itemList.id, itemId);\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    onEditNameStart(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: true, newName: this.props.itemList.name});\r\n    }\r\n\r\n    onEditNameStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onEditName(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onEditName } = this.props;\r\n        const { newName } = this.state;\r\n        if (!newName)\r\n            return;\r\n\r\n        await onEditName(itemList.id, newName);\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onDeleteList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onDeleteList } = this.props;\r\n        await onDeleteList(itemList.id);\r\n    }\r\n\r\n    render() {\r\n        const { itemList } = this.props;\r\n        const { isMouseHover, isDragHover, isEditing, newName } = this.state;\r\n\r\n        return(\r\n            <CustomLink className={`transition duration-150 ease-in-out flex flex-row items-center justify-between px-4 py-3 bg-opacity-25 ${isDragHover ? \"bg-green-700 text-green-300\" : \"bg-indigo-700 text-indigo-300\"} hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer`}\r\n                to={`/list/${itemList.id}`}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onMouseLeave={this.onMouseLeave}\r\n                onDragEnter={this.onDragEnter}\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={this.onDrop}>\r\n                {(!isEditing && \r\n                    <>\r\n                        <span className=\"truncate pointer-events-none select-none\">{itemList.name}</span>\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditNameStart}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"pencil-alt\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onDeleteList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) || \r\n                (isEditing && \r\n                    <>\r\n                        <input type=\"text\" className=\"px-2 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={newName} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({newName: event.target.value})} />\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditName}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onEditNameStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </CustomLink>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport AddItemListSlot from \"./AddItemListSlot\";\r\nimport ItemListSlot from \"./ItemListSlot\";\r\n\r\nexport type SidebarProps = {\r\n\r\n}\r\n\r\nexport type SidebarState = {\r\n    user: User | undefined;\r\n    itemLists: ItemList[];\r\n}\r\n\r\nexport default class Sidebar extends React.Component<SidebarProps, SidebarState> {\r\n    constructor(props: SidebarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            itemLists: []\r\n        };\r\n\r\n        this.refreshItemLists = this.refreshItemLists.bind(this);\r\n\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onAddList = this.onAddList.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    async refreshItemLists() {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const itemLists = await ApiService.GetItemLists(user.access_token);\r\n        if (!itemLists)\r\n            return;\r\n\r\n        this.setState({itemLists});\r\n    }\r\n\r\n    async onAddItem(id: string, itemId: number) {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        await ApiService.AddListItem(user.access_token, id, itemId);\r\n    }\r\n\r\n    async onEditName(id: string, name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.UpdateListName(user.access_token, id, name);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists[index].name = name;\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onAddList(name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.CreateList(user.access_token, name);\r\n        if (result) {\r\n            const itemList: ItemList = {\r\n                id: result,\r\n                name: name\r\n            };\r\n            itemLists.push(itemList);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onDeleteList(id: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteList(user.access_token, id);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists.splice(index, 1);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { itemLists, user } = this.state;\r\n\r\n        return(\r\n            <div className=\"sidebar hidden py-4 xl:flex xl:w-1/4 bg-gray-900\" style={{width: \"16rem\"}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser}, () => {\r\n                                this.refreshItemLists();\r\n                            });\r\n                        if (user) {\r\n                            return(\r\n                                <Scrollbar noScrollX>\r\n                                    {itemLists.map((itemList, index) => (\r\n                                        <div key={index} className=\"mb-2\">\r\n                                            <ItemListSlot itemList={itemList} onDrop={this.onAddItem} onEditName={this.onEditName} onDeleteList={this.onDeleteList} />\r\n                                        </div>\r\n                                    ))}\r\n                                    <div className=\"w-full flex flex-col\">\r\n                                        <AddItemListSlot onAddItemList={this.onAddList} />\r\n                                    </div>\r\n                                </Scrollbar>\r\n                            );\r\n                        }\r\n\r\n                        return(<>\r\n                            <Scrollbar noScrollX>\r\n                                <div className=\"w-full flex flex-col\">\r\n                                    <AddItemListSlot onAddItemList={this.onAddList} />\r\n                                </div>\r\n                            </Scrollbar>\r\n                        </>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport MyList from \"./pages/MyList\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport GeneralSearch from \"./pages/GeneralSearch\";\r\nimport { BrowserRouter, Redirect, Route, Switch, useParams } from \"react-router-dom\";\r\nimport { AuthenticationProvider, withOidcSecure } from \"@axa-fr/react-oidc-context\";\r\nimport configuration from \"./open-id-config\";\r\nimport Header from \"./components/Header\";\r\nimport { config } from \"process\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    const afterLogin = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                <span className=\"\">Logging in...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const afterLogout = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                <span className=\"\">Logging out...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    return(\r\n        <div className=\"flex flex-col\">\r\n            <BrowserRouter>\r\n                <AuthenticationProvider configuration={configuration}\r\n                    callbackComponentOverride={afterLogin}\r\n                    authenticating={afterLogout}>\r\n                    <Header />\r\n                    <Redirect path=\"/authentication/callback\" to=\"/\" />\r\n                    <div className=\"flex flex-row\" style={{height: \"calc(100vh - 4rem)\"}}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Dashboard} />\r\n                            <Route path=\"/search\" component={GeneralSearch} />\r\n                            <Route exact path=\"/list\" component={MyList} />\r\n                            <Route path=\"/list/:id\" component={MyListComponent} />\r\n                        </Switch>\r\n                        <Sidebar />\r\n                    </div>\r\n                </AuthenticationProvider>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MyListComponent() {\r\n    const { id } = useParams();\r\n\r\n    return(\r\n        <MyList listId={id} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}