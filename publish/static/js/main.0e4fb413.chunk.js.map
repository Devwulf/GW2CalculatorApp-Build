{"version":3,"sources":["utils/HistoryTimespan.ts","utils/ItemHelper.ts","dataContracts/HistoryItem.ts","services/LocalDB.ts","components/ItemGraph.tsx","components/Price.tsx","utils/ItemField.ts","utils/ItemRarity.ts","utils/ItemType.ts","components/ItemComparisonSlot.tsx","dataContracts/ItemQuery.ts","components/RarityMultiSelect.tsx","components/TypeMultiSelect.tsx","components/ListSortingBar.tsx","dataContracts/HistoryItemQuery.ts","dataContracts/PricedItem.ts","environment.ts","services/ApiService.ts","pages/MyList.tsx","pages/Dashboard.tsx","components/ItemSummarySlot.tsx","components/SortingBar.tsx","pages/GeneralSearch.tsx","open-id-config.ts","components/Header.tsx","components/AddItemListSlot.tsx","components/CustomLink.tsx","components/ItemListSlot.tsx","components/Sidebar.tsx","pages/error/NotFound.tsx","pages/error/NotAuthenticated.tsx","pages/error/NotAuthorized.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HistoryTimespan","ItemHelper","chatLink","encodeURIComponent","HistoryItem","id","name","icon","description","type","rarity","level","history","Id","ChatLink","Name","Icon","Description","Type","Rarity","Level","History","this","predicate","filter","HistoryItemFactory","item","parseInt","e","console","log","items","arr","forEach","itemResult","ToHistoryItem","push","historyItems","version","stores","open","catch","error","table","mapToClass","timespan","get","OneMonth","now","Date","OneHour","SixHours","TwelveHours","OneDay","ThreeDays","OneWeek","TwoWeeks","timeFromNow","setTime","getTime","setDate","getDate","filterHistory","price","time","getHistoryItem","add","update","newHistory","unshift","currentPrices","monthFromNow","Dexie","ItemGraph","props","dashboard","buyPriceChart","sellPriceChart","marginChart","buyVolumeChart","sellVolumeChart","state","createChart","bind","createOHLCChart","itemId","LocalDB","timeSpanInMs","firstPriceSnapshot","length","startingTime","buyPricesData","sellPricesData","actualBuyPricesData","actualSellPricesData","marginData","buyVolumeData","sellVolumeData","pricesIn15Mins","timeTracker","i","priceSnapshot","timeFromStart","margin","sellPrice","buyPrice","x","y","position","high","bought","low","bid","sold","offers","nextPriceSnapshot","undefined","minBuy","Number","POSITIVE_INFINITY","maxBuy","minSell","maxSell","j","firstSnapshot","lastSnapshot","buyDataPoint","sellDataPoint","lightningChart","Dashboard","theme","Themes","dark","numberOfColumns","numberOfRows","container","toString","columnIndex","rowIndex","columnSpan","rowSpan","createBaselineAreaChart","createAreaChart","title","invertCandleColors","data","priceData","options","chart","createChartXY","dateOrigin","getDefaultAxisX","setTickStrategy","AxisTickStrategies","DateTime","tickStrategy","setDateOrigin","setTitle","setAutoCursor","cursor","disposeTickMarkerY","setGridStrokeYStyle","emptyLine","setPadding","right","priceLegend","addLegendBox","LegendBoxBuilders","VerticalLegendBox","setPosition","setOrigin","UIOrigins","RightTop","priceAxisY","getDefaultAxisY","setScrollStrategy","AxisScrollStrategies","expansion","areaRangeFill","SolidFill","setColor","ColorRGBA","areaRangeStroke","SolidLine","setFillStyle","setThickness","areaRange","addAreaRangeSeries","yAxis","setName","setHighFillStyle","setLowFillStyle","setHighStrokeStyle","setLowStrokeStyle","setMaxPointCount","setMouseInteractions","setCursorEnabled","movingAverageStroke","movingAverage","addLineSeries","setStrokeStyle","pricesLineStroke","pricesLine","setCursorInterpolationEnabled","borderBlack","fillBrightRed","fillDimRed","fillBrightGreen","fillDimGreen","candles","addOHLCSeries","setFigureWidth","setPositiveStyle","candlestick","setBodyFillStyle","setBodyStrokeStyle","setNegativeStyle","priceNums","n","entries","setButtonOnFillStyle","getFillStyle","setButtonOnStrokeStyle","setOn","setResultTableFormatter","builder","series","segment","getOpen","close","getClose","addRow","getName","axisX","formatValue","getPosition","toPriceString","getHigh","getLow","ohlc","shift","priceSum","num","priceAverage","sqrDeviationSum","Math","pow","stdDeviation","sqrt","areaPoint","smaPoint","yBoundsPrice","min","getYMin","max","getYMax","range","setInterval","setViewNicely","topTitle","bottomTitle","volumeLegend","volumeAxisY","topAreaFill","topAreaStroke","topArea","addAreaSeries","AreaSeriesTypes","Positive","bottomAreaFill","bottomAreaStroke","bottomArea","Negative","toFixed","dataPoint","yTitle","baseline","lineAxisY","area","Bipolar","setPositiveFillStyle","setPositiveStrokeStyle","setNegativeFillStyle","setNegativeStrokeStyle","dispose","className","gold","floor","silver","copper","React","Component","Price","priceColor","isNegative","absPrice","abs","style","fontSize","src","alt","defaultProps","ItemField","ItemFieldSort","ItemRarity","ItemType","ItemComparisonSlot","dragTarget","createRef","amount","isOpen","isDragging","toggleOpen","onDragStart","onDragEnd","setState","event","stopPropagation","dataTransfer","setData","requestAnimationFrame","current","classList","remove","deleteItem","revenue","round","SellPrice","expenditure","BuyPrice","totalFees","netProfit","onClick","href","getWikiLink","target","rel","htmlFor","defaultValue","onChange","value","isNaN","Appeal","Margin","Sold","Bought","draggable","ref","top","left","height","ItemQuery","minLevel","maxLevel","minBuyPrice","maxBuyPrice","minSellPrice","maxSellPrice","sortBy","sortDirection","All","Descending","valueOf","RarityMultiSelect","toggleRarity","checkRarity","otherRarity","newRarity","None","selectedText","isPowerOf2","tabIndex","width","zIndex","Object","keys","map","index","itemRarity","key","TypeMultiSelect","toggleType","checkType","otherType","newType","itemType","ListSortingBar","query","filteredItems","isFilterOpen","resetQueryValues","toggleFilter","onFilterOpen","onFilterClose","onFilter","onSearch","sortCompare","onNameChange","onTypeChange","onRarityChange","onMinLevelChange","onMaxLevelChange","onMinBuyPriceChange","onMaxBuyPriceChange","onMinSellPriceChange","onMaxSellPriceChange","onSort","onSortDirection","onSetTimespan","prevProps","toLowerCase","includes","sort","preventDefault","a","b","isSortAscending","Ascending","localeCompare","Buys","Sells","prevState","callback","isDataStale","onReload","children","onSubmit","padding","HistoryItemQuery","hasDetails","newest","PricedItemFactory","parseFloat","appeal","ToPricedItem","environment","urls","authority","host","gw2calculator","accessToken","pageNumber","url","URLSearchParams","toObject","ApiService","Get","response","json","result","ok","ToPricedItems","queries","Post","ToHistoryItems","itemLists","itemList","itemIds","idNum","listId","fetch","method","mode","cache","headers","body","JSON","stringify","MyList","user","isLoading","updateId","updateItems","setTimespan","GetItemList","access_token","ids","historyItemQueries","getNewestTime","GetHistoryItems","pricedItems","itemQuery","deleteOldPrices","setHistoryItem","setHistoryItemPrices","dbItem","pricedItem","historyToPriced","setTimeout","DeleteListItem","tempItems","itemIndex","findIndex","splice","Consumer","oidcUser","sortedItems","noScrollX","newestPrice","sumSold","sumBought","avgSold","avgBought","ItemSummarySlot","isAdding","onAdd","SortingBar","pendingQuery","currentQuery","currentPage","totalPages","onToPage","onFirstPage","onLastPage","onNextPage","onPrevPage","onLoadingStart","onLoadingStop","GetItemPageCount","GetItems","nameOnlyQuery","pageNums","disabled","GeneralSearch","configuration","client_id","response_type","scope","automaticSilentRenew","loadUserInfo","redirect_uri","post_logout_redirect_uri","silent_redirect_uri","Header","boxShadow","to","profile","logout","login","AddItemListSlot","onAddItemListStart","onAddItemListStop","onAddItemList","paddingTop","paddingBottom","CustomLink","useHistory","rest","ItemListSlot","isMouseHover","isDragHover","isEditing","newName","onMouseEnter","onMouseLeave","onDragEnter","onDragOver","onDragLeave","onDrop","onEditNameStart","onEditNameStop","onEditName","onDeleteList","getData","Sidebar","refreshItemLists","onAddItem","onAddList","GetItemLists","AddListItem","UpdateListName","list","CreateList","DeleteList","Fragment","NotFound","NotAuthenticated","NotAuthorized","MyListComponent","useParams","library","fas","App","notAuthenticated","notAuthorized","callbackComponentOverride","authenticating","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e4fb413.chunk.js","sourcesContent":["export enum HistoryTimespan {\r\n    OneHour,\r\n    SixHours,\r\n    TwelveHours,\r\n    OneDay,\r\n    ThreeDays,\r\n    OneWeek,\r\n    TwoWeeks,\r\n    OneMonth\r\n}","export default class ItemHelper {\r\n    static getWikiLink(chatLink: string): string {\r\n        return `https://wiki.guildwars2.com/index.php?title=Special%3ASearch&search=${encodeURIComponent(chatLink)}&go=Go`;\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { ItemPriceSnapshot } from \"./ItemPriceSnapshot\";\r\n\r\nexport class HistoryItemPrices {\r\n    public readonly Id: number;\r\n    public readonly History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.History = history;\r\n    }\r\n}\r\n\r\nexport class HistoryItem {\r\n    public readonly Id: number;\r\n    public readonly ChatLink: string;\r\n    public readonly Name: string;\r\n    public readonly Icon: string;\r\n    public readonly Description: string;\r\n    public readonly Type: ItemType;\r\n    public readonly Rarity: ItemRarity;\r\n    public readonly Level: number;\r\n    public History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, chatLink: string, name: string, icon: string, description: string, type: ItemType, rarity: ItemRarity, level: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.ChatLink = chatLink;\r\n        this.Name = name;\r\n        this.Icon = icon;\r\n        this.Description = description;\r\n        this.Type = type;\r\n        this.Rarity = rarity;\r\n        this.Level = level;\r\n        this.History = history;\r\n    }\r\n\r\n    filterHistory(predicate: (value: ItemPriceSnapshot, index: number, array: ItemPriceSnapshot[]) => unknown) {\r\n        this.History = this.History.filter(predicate);\r\n    }\r\n}\r\n\r\nexport class HistoryItemFactory {\r\n    static ToHistoryItem(item: any): HistoryItem | null {\r\n        try {\r\n            const result = new HistoryItem (\r\n                item.id, \r\n                item.chatLink,\r\n                item.name, \r\n                item.icon, \r\n                item.description,\r\n                parseInt(item.type),\r\n                parseInt(item.rarity),\r\n                item.level,\r\n                item.history\r\n            );\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToHistoryItems(items: any): HistoryItem[] {\r\n        const arr: HistoryItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = HistoryItemFactory.ToHistoryItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import Dexie from \"dexie\";\r\nimport { HistoryItem, HistoryItemPrices } from \"../dataContracts/HistoryItem\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nclass LocalDB extends Dexie {\r\n    private historyItems: Dexie.Table<HistoryItem, number>;\r\n\r\n    constructor() {\r\n        super(\"GW2History\");\r\n\r\n        this.version(1).stores({\r\n            historyItems: \"Id\"\r\n        });\r\n        this.open().catch(error => {\r\n            console.error(`Opening the db '${this.name}' failed: ${error}`);\r\n        });\r\n\r\n        this.historyItems = this.table(\"historyItems\");\r\n        this.historyItems.mapToClass(HistoryItem);\r\n    }\r\n\r\n    async getHistoryItem(id: number, timespan: HistoryTimespan): Promise<HistoryItem | null> {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return null;\r\n        \r\n        if (timespan === HistoryTimespan.OneMonth)\r\n            return item;\r\n\r\n        const now = new Date();\r\n        let timeFromNow: number;\r\n        switch (timespan) {\r\n        case HistoryTimespan.OneHour:\r\n            timeFromNow = now.setTime(now.getTime() - (1 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.SixHours:\r\n            timeFromNow = now.setTime(now.getTime() - (6 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.TwelveHours:\r\n            timeFromNow = now.setTime(now.getTime() - (12 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.OneDay:\r\n            timeFromNow = now.setDate(now.getDate() - 1);\r\n            break;\r\n        case HistoryTimespan.ThreeDays:\r\n            timeFromNow = now.setDate(now.getDate() - 3);\r\n            break;\r\n        case HistoryTimespan.OneWeek:\r\n            timeFromNow = now.setDate(now.getDate() - 7);\r\n            break;\r\n        case HistoryTimespan.TwoWeeks:\r\n            timeFromNow = now.setDate(now.getDate() - 14);\r\n            break;\r\n        default:\r\n            timeFromNow = now.setDate(now.getDate() - 30);\r\n            break;\r\n        }\r\n        \r\n        item.filterHistory(price => price.time >= timeFromNow);\r\n        return item;\r\n    }\r\n\r\n    async hasDetails(id: number): Promise<boolean> {\r\n        const item = await this.historyItems.get(id);\r\n        if (item && item.Name)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    async getNewestTime(id: number): Promise<number> {\r\n        const item = await this.getHistoryItem(id, HistoryTimespan.OneMonth);\r\n        if (!item || !item.History)\r\n            return 0;\r\n        \r\n        return item.History[0].time;\r\n    }\r\n\r\n    async setHistoryItem(item: HistoryItem) {\r\n        if (!item)\r\n            return;\r\n            \r\n        const dbItem = await this.historyItems.get(item.Id);\r\n        if (!dbItem)\r\n            await this.historyItems.add(item, item.Id);\r\n\r\n        await this.historyItems.update(item.Id, {\r\n            ChatLink: item.ChatLink,\r\n            Name: item.Name,\r\n            Icon: item.Icon,\r\n            Description: item.Description,\r\n            Type: item.Type,\r\n            Rarity: item.Rarity,\r\n            Level: item.Level,\r\n            History: item.History\r\n        });\r\n    }\r\n\r\n    async setHistoryItemPrices(id: number, newHistory: ItemPriceSnapshot[]) {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return;\r\n\r\n        // Else, update the history of the current item to include the new history\r\n        // Unshift (push to front) here because history is sorted by time descending,\r\n        // and the higher the time value, the newer it is.\r\n        item.History.unshift(...newHistory);\r\n        await this.historyItems.update(id, {History: item.History});\r\n    }\r\n\r\n    async deleteOldPrices(id: number) {\r\n        const item = await this.historyItems.get(id);\r\n        if (!item)\r\n            return;\r\n        \r\n        const currentPrices: ItemPriceSnapshot[] = [];\r\n        const now: Date = new Date();\r\n        const monthFromNow: number = now.setDate(now.getDate() - 30);\r\n        item.History.forEach(price => {\r\n            if (price.time >= monthFromNow)\r\n                currentPrices.push(price);\r\n        });\r\n\r\n        await this.historyItems.update(id, {History: currentPrices});\r\n    }\r\n}\r\n\r\nexport default new LocalDB();","import { AreaPoint, AreaSeriesTypes, AutoCursorModes, AxisScrollStrategies, AxisTickStrategies, ChartOptions, ChartXY, ColorRGBA, Dashboard, emptyLine, InternalBackground, LegendBox, LegendBoxBuilders, LegendBoxEntry, lightningChart, LineStyle, Point, PointableBackground, PointMarker, SolidFill, SolidLine, Themes, UIBackground, UIElement, UIOrigins, UIPartWithBackground, UITextBox, XOHLC } from \"@arction/lcjs\";\r\nimport { createOHLCGenerator } from \"@arction/xydata\";\r\nimport React from \"react\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nexport type ItemGraphProps = {\r\n    itemId: number;\r\n}\r\n\r\nexport type ItemGraphState = {\r\n\r\n}\r\n\r\nexport default class ItemGraph extends React.Component<ItemGraphProps, ItemGraphState> {\r\n    private dashboard: Dashboard | undefined;\r\n    private buyPriceChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private sellPriceChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private marginChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private buyVolumeChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n    private sellVolumeChart: ChartXY<PointMarker, UIBackground, PointableBackground, PointableBackground> | undefined;\r\n\r\n    constructor(props: ItemGraphProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.createChart = this.createChart.bind(this);\r\n        this.createOHLCChart = this.createOHLCChart.bind(this);\r\n    }\r\n\r\n    async createChart() {\r\n        const { itemId } = this.props;\r\n        // Get the history item from the local db here\r\n        /* */\r\n        const item = await LocalDB.getHistoryItem(itemId, HistoryTimespan.OneMonth);\r\n        if (!item)\r\n            return;\r\n\r\n        // TODO: Replace this big number with the time of the earliest price snapshot in history\r\n        const timeSpanInMs = 15 * 60 * 1000; // 15 mins\r\n        const firstPriceSnapshot = item.History[item.History.length - 1];\r\n        const startingTime = firstPriceSnapshot.time - (firstPriceSnapshot.time % timeSpanInMs);\r\n        const buyPricesData: XOHLC[] = [];\r\n        const sellPricesData: XOHLC[] = [];\r\n        const actualBuyPricesData: Point[] = [];\r\n        const actualSellPricesData: Point[] = [];\r\n        const marginData: Point[] = [];\r\n        const buyVolumeData: AreaPoint[] = [];\r\n        const sellVolumeData: AreaPoint[] = [];\r\n\r\n        let pricesIn15Mins: ItemPriceSnapshot[] = [];\r\n        let timeTracker = 0;\r\n        // Go backwards here because the history is sorted in reverse\r\n        for (var i = item.History.length - 1; i >= 0; i--) {\r\n            const priceSnapshot = item.History[i];\r\n            const time = timeTracker + startingTime;\r\n            const timeFromStart = priceSnapshot.time - startingTime;\r\n            const margin = ((priceSnapshot.sellPrice - priceSnapshot.buyPrice) / priceSnapshot.sellPrice) * 100;\r\n\r\n            actualBuyPricesData.push({x: timeFromStart, y: priceSnapshot.buyPrice});\r\n            actualSellPricesData.push({x: timeFromStart, y: priceSnapshot.sellPrice});\r\n            marginData.push({x: timeFromStart, y: margin});\r\n            buyVolumeData.push({position: priceSnapshot.time - startingTime, high: priceSnapshot.bought, low: priceSnapshot.bid * -1});\r\n            sellVolumeData.push({position: priceSnapshot.time - startingTime, high: priceSnapshot.sold, low: priceSnapshot.offers * -1});\r\n\r\n            if (priceSnapshot.time < time + timeSpanInMs && priceSnapshot.time >= time)\r\n                pricesIn15Mins.push(priceSnapshot);\r\n\r\n            // This is for checking if there's no next price snapshot\r\n            const nextPriceSnapshot = i - 1 >= 0 ? item.History[i - 1] : undefined;\r\n            \r\n            // This means the next price snapshot is already beyond the time interval we're compiling\r\n            if (!nextPriceSnapshot || nextPriceSnapshot.time >= time + timeSpanInMs) {\r\n                timeTracker += timeSpanInMs;\r\n                if (pricesIn15Mins.length <= 0)\r\n                    continue;\r\n\r\n                let minBuy = Number.POSITIVE_INFINITY;\r\n                let maxBuy = 0;\r\n                let minSell = Number.POSITIVE_INFINITY;\r\n                let maxSell = 0;\r\n\r\n                for (var j = 0; j < pricesIn15Mins.length; j++) {\r\n                    const price = pricesIn15Mins[j];\r\n                    if (price.buyPrice < minBuy)\r\n                        minBuy = price.buyPrice;\r\n                    if (price.buyPrice > maxBuy)\r\n                        maxBuy = price.buyPrice;\r\n\r\n                    if (price.sellPrice < minSell)\r\n                        minSell = price.sellPrice;\r\n                    if (price.sellPrice > maxSell)\r\n                        maxSell = price.sellPrice;\r\n                }\r\n\r\n                const firstSnapshot = pricesIn15Mins[0];\r\n                const lastSnapshot = pricesIn15Mins[pricesIn15Mins.length - 1];\r\n                const buyDataPoint: XOHLC = [timeTracker, firstSnapshot.buyPrice, maxBuy, minBuy, lastSnapshot.buyPrice];\r\n                const sellDataPoint: XOHLC = [timeTracker, firstSnapshot.sellPrice, maxSell, minSell, lastSnapshot.sellPrice];\r\n\r\n                buyPricesData.push(buyDataPoint);\r\n                sellPricesData.push(sellDataPoint);\r\n\r\n                minBuy = Number.POSITIVE_INFINITY;\r\n                maxBuy = 0;\r\n                minSell = Number.POSITIVE_INFINITY;\r\n                maxSell = 0;\r\n                pricesIn15Mins = [];\r\n            }\r\n        }\r\n        /**/\r\n\r\n        // Define all chart options here\r\n        this.dashboard = lightningChart().Dashboard({\r\n            theme: Themes.dark,\r\n            numberOfColumns: 2,\r\n            numberOfRows: 3,\r\n            container: itemId.toString()\r\n        });\r\n\r\n        this.buyPriceChart = this.createOHLCChart(\"Buy Prices\", startingTime, true, buyPricesData, actualBuyPricesData, {\r\n            columnIndex: 0,\r\n            rowIndex: 0,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n        this.sellPriceChart = this.createOHLCChart(\"Sell Prices\", startingTime, false, sellPricesData, actualSellPricesData, {\r\n            columnIndex: 1,\r\n            rowIndex: 0,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n\r\n        this.marginChart = this.createBaselineAreaChart(\"Margin\", \"Margin\", 15, startingTime, marginData, {\r\n            columnIndex: 0,\r\n            rowIndex: 1,\r\n            columnSpan: 2,\r\n            rowSpan: 1\r\n        });\r\n\r\n        this.buyVolumeChart = this.createAreaChart(\"Buy Volume \\ud835\\udeab\", \"Bought\", \"Bid\", startingTime, buyVolumeData, {\r\n            columnIndex: 0,\r\n            rowIndex: 2,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n        this.sellVolumeChart = this.createAreaChart(\"Sell Volume \\ud835\\udeab\", \"Sold\", \"Offers\", startingTime, sellVolumeData, {\r\n            columnIndex: 1,\r\n            rowIndex: 2,\r\n            columnSpan: 1,\r\n            rowSpan: 1\r\n        });\r\n    }\r\n\r\n    createOHLCChart(title: string, startingTime: number, invertCandleColors: boolean, data: XOHLC[], priceData: Point[], options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        //#region Buy Price Chart\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        // TODO: Make this the date and time of the very first price snapshot for an item\r\n        const dateOrigin = new Date(startingTime); \r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                (tickStrategy) => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setAutoCursor(cursor => {\r\n                cursor.disposeTickMarkerY();\r\n                cursor.setGridStrokeYStyle(emptyLine);\r\n            })\r\n            .setPadding({right: 40});\r\n\r\n        const priceLegend = chart\r\n            .addLegendBox(LegendBoxBuilders.VerticalLegendBox)\r\n            .setPosition({x: 100, y: 100})\r\n            .setOrigin(UIOrigins.RightTop);\r\n\r\n        const priceAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(\"Price\");\r\n\r\n        // Colors of the Bollinger Band\r\n        const areaRangeFill = new SolidFill().setColor(ColorRGBA(100, 149, 237, 50));\r\n        const areaRangeStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(100, 149, 237)))\r\n            .setThickness(1);\r\n\r\n        // Settings of the Bollinger Band\r\n        const areaRange = chart.addAreaRangeSeries({ yAxis: priceAxisY })\r\n            .setName(\"Bollinger Band\")\r\n            .setHighFillStyle(areaRangeFill)\r\n            .setLowFillStyle(areaRangeFill)\r\n            .setHighStrokeStyle(areaRangeStroke)\r\n            .setLowStrokeStyle(areaRangeStroke)\r\n            .setMaxPointCount(0) // Solves the part of the area vanishing when zooming in\r\n            .setMouseInteractions(false)\r\n            .setCursorEnabled(false);\r\n\r\n        const movingAverageStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(236, 201, 75)))\r\n            .setThickness(2);\r\n        const movingAverage = chart.addLineSeries()\r\n            .setName(\"Moving Average\")\r\n            .setStrokeStyle(movingAverageStroke)\r\n            .setMouseInteractions(false)\r\n            .setCursorEnabled(false);\r\n\r\n        const pricesLineStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(237, 137, 54)))\r\n            .setThickness(2);\r\n        const pricesLine = chart.addLineSeries()\r\n            .setName(\"Actual Prices\")\r\n            .setStrokeStyle(pricesLineStroke)\r\n            .setCursorInterpolationEnabled(false);\r\n\r\n        const priceFigureWidth = 5.0;\r\n        const borderBlack = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(26, 32, 44)))\r\n            .setThickness(1);\r\n        const fillBrightRed = new SolidFill().setColor(ColorRGBA(229, 62, 62));\r\n        const fillDimRed = new SolidFill().setColor(ColorRGBA(116, 42, 42));\r\n        const fillBrightGreen = new SolidFill().setColor(ColorRGBA(62, 225, 62));\r\n        const fillDimGreen = new SolidFill().setColor(ColorRGBA(34, 84, 61));\r\n\r\n        const candles = chart\r\n            .addOHLCSeries({yAxis: priceAxisY});\r\n\r\n        candles.setName(\"Candlesticks\")\r\n            .setFigureWidth(priceFigureWidth)\r\n            .setPositiveStyle(candlestick => \r\n                candlestick\r\n                    .setBodyFillStyle(invertCandleColors ? fillBrightRed : fillBrightGreen)\r\n                    .setBodyStrokeStyle(borderBlack)\r\n                    .setStrokeStyle(new SolidLine()\r\n                        .setFillStyle(invertCandleColors ? fillDimRed : fillDimGreen)\r\n                        .setThickness(2))\r\n            )\r\n            .setNegativeStyle(candlestick => \r\n                candlestick\r\n                    .setBodyFillStyle(invertCandleColors ? fillBrightGreen : fillBrightRed)\r\n                    .setBodyStrokeStyle(borderBlack)\r\n                    .setStrokeStyle(new SolidLine()\r\n                        .setFillStyle(invertCandleColors ? fillDimGreen : fillDimRed)\r\n                        .setThickness(2))\r\n            );\r\n\r\n        const priceNums: number[] = [];\r\n        let n: number = 0;\r\n        const period = 30;\r\n        const add: (ohlc: XOHLC) => void = (ohlc) => {\r\n            candles.add(ohlc);\r\n\r\n            priceNums.push((ohlc[2] + ohlc[3] + ohlc[4]) / 3);\r\n\r\n            if (n < period) {\r\n                n++;\r\n            } else {\r\n                priceNums.shift();\r\n            }\r\n\r\n            let priceSum = 0;\r\n            priceNums.forEach(num => priceSum += num);\r\n            const priceAverage = priceSum / n;\r\n\r\n            let sqrDeviationSum = 0;\r\n            priceNums.forEach(num => sqrDeviationSum += Math.pow(num - priceAverage, 2));\r\n            const stdDeviation = Math.sqrt(sqrDeviationSum / n);\r\n            \r\n            const areaPoint: AreaPoint = {\r\n                position: ohlc[0],\r\n                high: priceAverage + (stdDeviation * 2),\r\n                low: priceAverage - (stdDeviation * 2)\r\n            };\r\n            areaRange.add(areaPoint);\r\n\r\n            const smaPoint: Point = {\r\n                x: ohlc[0],\r\n                y: priceAverage\r\n            };\r\n            movingAverage.add(smaPoint);\r\n        };\r\n\r\n        /*\r\n        createOHLCGenerator()\r\n            .setNumberOfPoints(100)\r\n            .setDataFrequency(15 * 60 * 1000)\r\n            .generate()\r\n            .toPromise()\r\n            .then(data => {\r\n                data.forEach(add);\r\n                setViewNicely();\r\n            });\r\n        /**/\r\n        //#endregion\r\n\r\n        const entries: LegendBoxEntry[] = priceLegend.add(chart) as LegendBoxEntry[];\r\n        entries[0]\r\n            .setButtonOnFillStyle(areaRangeStroke.getFillStyle())\r\n            .setButtonOnStrokeStyle(emptyLine);\r\n\r\n        entries[1]\r\n            .setOn(false);\r\n        entries[2]\r\n            .setOn(false);\r\n\r\n        const setViewNicely = () => {\r\n            const yBoundsPrice = { min: (areaRange.getYMin() ?? 0), max: (areaRange.getYMax() ?? 0), range: (areaRange.getYMax() ?? 0) - (areaRange.getYMin() ?? 0) };\r\n            // Set Y axis intervals so that series don't overlap and volume is under stocks.\r\n            priceAxisY.setInterval(yBoundsPrice.min - yBoundsPrice.range * .33, yBoundsPrice.max);\r\n        };\r\n\r\n        // For the candlesticks on hover tooltip\r\n        candles.setResultTableFormatter((builder, series, segment) => {\r\n            const open = segment.getOpen();\r\n            const close = segment.getClose();\r\n            return builder\r\n                .addRow(series.getName())\r\n                .addRow(series.axisX.formatValue(segment.getPosition()))\r\n                .addRow(`High: ${ItemGraph.toPriceString(segment.getHigh())}`)\r\n                .addRow(`${open > close ? `Open: ${ItemGraph.toPriceString(open)}` : `Close: ${ItemGraph.toPriceString(close)}`}`)\r\n                .addRow(`${open < close ? `Open: ${ItemGraph.toPriceString(open)}` : `Close: ${ItemGraph.toPriceString(close)}`}`)\r\n                .addRow(`Low: ${ItemGraph.toPriceString(segment.getLow())}`);\r\n        });\r\n\r\n        pricesLine.setResultTableFormatter((builder, series, x, y) => {\r\n            return builder\r\n                .addRow(series.getName())\r\n                .addRow(series.axisX.formatValue(x))\r\n                .addRow(`Price: ${ItemGraph.toPriceString(y)}`);\r\n        });\r\n\r\n        /* */\r\n        data.forEach(add);\r\n        pricesLine.add(priceData);\r\n        setViewNicely();\r\n        /**/\r\n\r\n        return chart;\r\n    }\r\n\r\n    createAreaChart(title: string, topTitle: string, bottomTitle: string, startingTime: number, data: AreaPoint[], options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        const dateOrigin = new Date(startingTime);\r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                tickStrategy => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setPadding({right: 40});\r\n\r\n        const volumeLegend = chart\r\n            .addLegendBox(LegendBoxBuilders.VerticalLegendBox)\r\n            .setPosition({x: 100, y: 100})\r\n            .setOrigin(UIOrigins.RightTop);\r\n\r\n        const volumeAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(\"Volume\");\r\n\r\n        \r\n        const topAreaFill = new SolidFill().setColor(ColorRGBA(72, 187, 120, 50));\r\n        const topAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(72, 187, 120)))\r\n            .setThickness(1);\r\n        \r\n        const topArea = chart.addAreaSeries({ type: AreaSeriesTypes.Positive, yAxis: volumeAxisY })\r\n            .setName(topTitle)\r\n            .setFillStyle(topAreaFill)\r\n            .setStrokeStyle(topAreaStroke)\r\n            .setCursorInterpolationEnabled(false)\r\n            .setMaxPointCount(0); // Solves the part of the area vanishing when zooming in\r\n            \r\n        const bottomAreaFill = new SolidFill().setColor(ColorRGBA(245, 101, 101, 50));\r\n        const bottomAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(245, 101, 101)))\r\n            .setThickness(1);\r\n        \r\n        const bottomArea = chart.addAreaSeries({ type: AreaSeriesTypes.Negative, yAxis: volumeAxisY })\r\n            .setName(bottomTitle)\r\n            .setFillStyle(bottomAreaFill)\r\n            .setStrokeStyle(bottomAreaStroke)\r\n            .setCursorInterpolationEnabled(false)\r\n            .setMaxPointCount(0); // Solves the part of the area vanishing when zooming in\r\n        \r\n        topArea.setResultTableFormatter((builder, series, position, high) => {\r\n            return builder\r\n                .addRow(topTitle)\r\n                .addRow(series.axisX.formatValue(position))\r\n                .addRow(`Amount: ${high.toFixed(0)}`);\r\n        });\r\n        \r\n        bottomArea.setResultTableFormatter((builder, series, position, high) => {\r\n            return builder\r\n                .addRow(bottomTitle)\r\n                .addRow(series.axisX.formatValue(position))\r\n                .addRow(`Amount: ${(high * -1).toFixed(0)}`);\r\n        });\r\n\r\n        volumeLegend.add(chart);\r\n\r\n        data.forEach(dataPoint => {\r\n            topArea.add({x: dataPoint.position, y: dataPoint.high});\r\n            bottomArea.add({x: dataPoint.position, y: dataPoint.low});\r\n        });\r\n\r\n        return chart;\r\n    }\r\n\r\n    createBaselineAreaChart(title: string, yTitle: string, baseline: number, startingTime: number, data: Point[], options: ChartOptions<PointMarker, UIBackground, PointableBackground, PointableBackground>) {\r\n        if (!this.dashboard)\r\n            return;\r\n\r\n        const chart = this.dashboard.createChartXY(options);\r\n\r\n        const dateOrigin = new Date(startingTime);\r\n        chart.getDefaultAxisX()\r\n            .setTickStrategy(\r\n                AxisTickStrategies.DateTime,\r\n                tickStrategy => tickStrategy.setDateOrigin(dateOrigin)\r\n            );\r\n\r\n        chart.setTitle(title)\r\n            .setPadding({right: 40});\r\n\r\n        const lineAxisY = chart\r\n            .getDefaultAxisY()\r\n            .setScrollStrategy(AxisScrollStrategies.expansion)\r\n            .setTitle(yTitle);\r\n\r\n        \r\n        const topAreaFill = new SolidFill().setColor(ColorRGBA(72, 187, 120, 50));\r\n        const topAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(72, 187, 120)))\r\n            .setThickness(1);\r\n        \r\n        const bottomAreaFill = new SolidFill().setColor(ColorRGBA(245, 101, 101, 50));\r\n        const bottomAreaStroke = new SolidLine()\r\n            .setFillStyle(new SolidFill().setColor(ColorRGBA(245, 101, 101)))\r\n            .setThickness(1);\r\n\r\n        const area = chart.addAreaSeries({baseline: baseline, type: AreaSeriesTypes.Bipolar, yAxis: lineAxisY})\r\n            .setName(title)\r\n            .setPositiveFillStyle(topAreaFill)\r\n            .setPositiveStrokeStyle(topAreaStroke)\r\n            .setNegativeFillStyle(bottomAreaFill)\r\n            .setNegativeStrokeStyle(bottomAreaStroke)\r\n            .setCursorInterpolationEnabled(false);\r\n\r\n        area.setResultTableFormatter((builder, series, x, y) => {\r\n            return builder\r\n                .addRow(series.getName())\r\n                .addRow(series.axisX.formatValue(x))\r\n                .addRow(`${yTitle}: ${y.toFixed(2)}%`);\r\n        });\r\n\r\n        area.add(data);\r\n\r\n        return chart;\r\n    }\r\n\r\n    static toPriceString(price: number) {\r\n        const gold = Math.floor(price / 10000);\r\n        const silver = Math.floor(price % 10000 / 100);\r\n        const copper = Math.floor(price % 10000 % 100);\r\n\r\n        return `${gold}g ${silver}s ${copper}c`;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.createChart();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.sellVolumeChart?.dispose();\r\n        this.buyVolumeChart?.dispose();\r\n        this.marginChart?.dispose();\r\n        this.sellPriceChart?.dispose();\r\n        this.buyPriceChart?.dispose();\r\n        this.dashboard?.dispose();\r\n\r\n        this.sellVolumeChart = undefined;\r\n        this.buyVolumeChart = undefined;\r\n        this.marginChart = undefined;\r\n        this.sellPriceChart = undefined;\r\n        this.buyPriceChart = undefined;\r\n        this.dashboard = undefined;\r\n    }\r\n\r\n    render() {\r\n        const { itemId } = this.props;\r\n\r\n        return(\r\n            <div id={itemId.toString()} className=\"h-full\"></div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nexport type PriceProps = {\r\n    price: number;\r\n    priceColor: string;\r\n}\r\n\r\nexport type PriceState = {\r\n\r\n}\r\n\r\nexport default class Price extends React.Component<PriceProps, PriceState> {\r\n\r\n    static defaultProps: PriceProps = {\r\n        price: 0,\r\n        priceColor: \"text-gray-200\"\r\n    }\r\n\r\n    constructor(props: PriceProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { price, priceColor } = this.props;\r\n        const isNegative = price < 0;\r\n        const absPrice = Math.abs(price);\r\n\r\n        const gold = Math.floor(absPrice / 10000);\r\n        const silver = Math.floor(absPrice % 10000 / 100);\r\n        const copper = Math.floor(absPrice % 10000 % 100);\r\n\r\n        return (\r\n            <div className=\"flex flex-row\">\r\n                <div id=\"gold\" className=\"mr-1 flex flex-row items-center\">\r\n                    <FontAwesomeIcon icon=\"minus\" className={`${isNegative ? \"\" : \"hidden\"} ${priceColor} mr-1`} style={{fontSize: \"0.5rem\"}} />\r\n                    <img src=\"https://wiki.guildwars2.com/images/d/d1/Gold_coin.png\" alt=\"Gold Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{gold}</span>\r\n                </div>\r\n                <div id=\"silver\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/3/3c/Silver_coin.png\" alt=\"Silver Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{silver}</span>\r\n                </div>\r\n                <div id=\"copper\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/e/eb/Copper_coin.png\" alt=\"Copper Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{copper}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export enum ItemField {\r\n    Name,\r\n    Buys,\r\n    Sells,\r\n    Appeal,\r\n    Margin,\r\n    Sold,\r\n    Bought\r\n}\r\n\r\nexport enum ItemFieldSort {\r\n    Ascending,\r\n    Descending  \r\n}","export enum ItemRarity {\r\n    None = 0,\r\n    Junk = 1,\r\n    Basic = 2,\r\n    Fine = 4,\r\n    Masterwork = 8,\r\n    Rare = 16,\r\n    Exotic = 32,\r\n    Ascended = 64,\r\n    Legendary = 128,\r\n    All = 255\r\n}","export enum ItemType {\r\n    None = 0,\r\n    Armor = 1,\r\n    Back = 2,\r\n    Bag = 4,\r\n    Consumable = 8,\r\n    Container = 16,\r\n    CraftingMaterial = 32,\r\n    Gathering = 64,\r\n    Gizmo = 128,\r\n    Key = 256,\r\n    MiniPet = 512,\r\n    Tool = 1024,\r\n    Trait = 2048,\r\n    Trinket = 4096,\r\n    Trophy = 8192,\r\n    UpgradeComponent = 16384,\r\n    Weapon = 32768,\r\n    All = 65535\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport ItemHelper from \"../utils/ItemHelper\";\r\nimport ItemGraph from \"./ItemGraph\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemComparisonSlotProps = {\r\n    item: PricedItem;\r\n    deleteItem(itemId: number): Promise<void>;\r\n}\r\n\r\nexport type ItemComparisonSlotState = {\r\n    amount: number;\r\n    isOpen: boolean;\r\n    isDragging: boolean;\r\n}\r\n\r\nexport default class ItemComparisonSlot extends React.Component<ItemComparisonSlotProps, ItemComparisonSlotState> {\r\n    private dragTarget: React.RefObject<HTMLDivElement>;\r\n    \r\n    constructor(props: ItemComparisonSlotProps) {\r\n        super(props);\r\n\r\n        this.dragTarget = React.createRef();\r\n\r\n        this.state = {\r\n            amount: 1,\r\n            isOpen: false,\r\n            isDragging: false\r\n        };\r\n\r\n        //this.getNetProfit = this.getNetProfit.bind(this);\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    /*\r\n    getNetProfit(): number {\r\n        const { item, amount } = this.state;\r\n\r\n        if (item == null)\r\n            return 0;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const totalFees = item.Fee * amount;\r\n        return revenue - expenditure - totalFees;\r\n    }\r\n    */\r\n\r\n    toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true});\r\n    }\r\n\r\n    onDragStart(event: React.DragEvent<HTMLDivElement>) {\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData(\"text\", this.props.item.Id.toString());\r\n\r\n        requestAnimationFrame(() => {\r\n            this.dragTarget.current?.classList.add(\"hide\");\r\n        });\r\n\r\n        this.setState({isDragging: true});\r\n    }\r\n\r\n    onDragEnd(event: React.DragEvent<HTMLDivElement>) {\r\n        this.dragTarget.current?.classList.remove(\"hide\");\r\n        this.setState({isDragging: false});\r\n    }\r\n    \r\n    render() {\r\n        const { item, deleteItem } = this.props;\r\n        const { amount, isOpen, isDragging } = this.state;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const fee = Math.round(item.SellPrice * 0.15);\r\n        const totalFees = fee * amount;\r\n        const netProfit = revenue - expenditure - totalFees;\r\n\r\n        // TODO: Amount is not sorting with items\r\n\r\n        return (\r\n            <div className=\"flex flex-col px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row cursor-pointer\"\r\n                    onClick={this.toggleOpen}>\r\n                    <div className=\"flex flex-row w-2/8 items-center mr-6\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <a href={ItemHelper.getWikiLink(item.ChatLink)} target=\"_blank\" rel=\"noopener noreferrer\" \r\n                            className=\"transition duration-150 ease-in-out italic text-gray-200 hover:text-blue-400\"\r\n                            onClick={event => event.stopPropagation()}>\r\n                            {item.Name}\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"flex flex-col xl:flex-row w-5/12 items-center\">\r\n                        <div className=\"flex flex-row xl:mr-4\">\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Amount</label>\r\n                                <input type=\"number\" className=\"w-16 px-1 text-sm bg-gray-600 text-gray-200\"\r\n                                    defaultValue={1}\r\n                                    onClick={event => event.stopPropagation()}\r\n                                    onChange={event => {\r\n                                        const value: number = parseInt(event.target.value);\r\n                                        console.log(value);\r\n                                        if (value != null && !isNaN(value))\r\n                                            this.setState({amount: value});\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Net Profit</label>\r\n                                <Price price={netProfit} priceColor={`${ netProfit < 0 ? \"text-red-500\" : \"text-green-500\" }`} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-row\">\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Buys</label>\r\n                                <Price price={expenditure} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Sells</label>\r\n                                <Price price={revenue} />\r\n                            </div>\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Fees</label>\r\n                                <Price price={totalFees} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-2/8\">\r\n                        <div className=\"flex flex-col xl:flex-row justify-evenly w-full h-full\">\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 font-bold text-gray-500\">Appeal</label>\r\n                                <span className=\"text-gray-200\">{item.Appeal.toFixed(2)}</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Margin</label>\r\n                                <span className={item.Margin < 15 ? \"text-red-500\" : \"text-green-500\"}>{item.Margin.toFixed(2)}%</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Sold</label>\r\n                                <span className=\"text-gray-200\">{item.Sold.toFixed(2)}</span>\r\n                            </div>\r\n                            <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                                <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Bought</label>\r\n                                <span className=\"text-gray-200\">{item.Bought.toFixed(2)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                        <div className=\"relative px-2 py-1 mr-3 rounded shadow-lg bg-gray-800 text-gray-300 cursor-move\"\r\n                            draggable\r\n                            onDragStart={this.onDragStart}\r\n                            onDragEnd={this.onDragEnd}>\r\n                            <FontAwesomeIcon icon=\"arrows-alt\" />\r\n                            <div ref={this.dragTarget} className={`${isDragging ? \"\" : \"hidden\"} absolute px-2 py-1 flex flex-row items-center justify-center w-32 h-12 rounded bg-gray-800`} style={{top: \"-0.25rem\", left: \"-2.75rem\"}}>\r\n                                <img src={item.Icon} alt={item.Name} className=\"mr-3 w-8 h-8 select-none\"/>\r\n                                <span className=\"italic text-sm truncate text-gray-300 select-none\">{item.Name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out px-3 py-1 rounded shadow-lg bg-red-700 text-red-300 hover:bg-red-800 hover:text-red-200\"\r\n                            onClick={event => {\r\n                                event.stopPropagation();\r\n                                this.setState({isOpen: false}, () => deleteItem(item.Id));\r\n                            }}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {isOpen && (\r\n                    <div className=\"mt-2 w-full\" style={{height: \"48rem\"}}>\r\n                        <ItemGraph itemId={item.Id} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        /*\r\n        return (\r\n            <tr className=\"bg-gray-700\">\r\n                <td className=\"\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <span className=\"italic\">{item.Name}</span>\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.BuyPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.SellPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.Fee} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.AppealValue}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.Margin}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.TransactionRate}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n        */\r\n    }\r\n}","import { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport class ItemQuery {\r\n    public name: string;\r\n    public type: ItemType;\r\n    public rarity: ItemRarity;\r\n    public minLevel: number;\r\n    public maxLevel: number;\r\n    public minBuyPrice: number;\r\n    public maxBuyPrice: number;\r\n    public minSellPrice: number;\r\n    public maxSellPrice: number;\r\n    public sortBy: ItemField;\r\n    public sortDirection: ItemFieldSort;\r\n\r\n    constructor(options?: ItemQueryOptions) {\r\n        this.name = options?.name ?? \"\";\r\n        this.type = options?.type ?? ItemType.All;\r\n        this.rarity = options?.rarity ?? ItemRarity.All;\r\n        this.minLevel = options?.minLevel ?? 0;\r\n        this.maxLevel = options?.maxLevel ?? 80;\r\n        this.minBuyPrice = options?.minBuyPrice ?? 0;\r\n        this.maxBuyPrice = options?.maxBuyPrice ?? 100000000;\r\n        this.minSellPrice = options?.minSellPrice ?? 0;\r\n        this.maxSellPrice = options?.maxSellPrice ?? 100000000;\r\n        this.sortBy = options?.sortBy ?? ItemField.Appeal;\r\n        this.sortDirection = options?.sortDirection ?? ItemFieldSort.Descending;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            name: this.name,\r\n            type: this.type.valueOf().toString(),\r\n            rarity: this.rarity.valueOf().toString(),\r\n            minLevel: this.minLevel.toString(),\r\n            maxLevel: this.maxLevel.toString(),\r\n            minBuyPrice: this.minBuyPrice.toString(),\r\n            maxBuyPrice: this.maxBuyPrice.toString(),\r\n            minSellPrice: this.minSellPrice.toString(),\r\n            maxSellPrice: this.maxSellPrice.toString(),\r\n            sortBy: this.sortBy.valueOf().toString(),\r\n            sortDirection: this.sortDirection.valueOf().toString()\r\n        };\r\n    }\r\n}\r\n\r\nexport interface ItemQueryOptions {\r\n    name?: string;\r\n    type?: ItemType;\r\n    rarity?: ItemRarity;\r\n    minLevel?: number;\r\n    maxLevel?: number;\r\n    minBuyPrice?: number;\r\n    maxBuyPrice?: number;\r\n    minSellPrice?: number;\r\n    maxSellPrice?: number;\r\n    sortBy?: ItemField;\r\n    sortDirection?: ItemFieldSort;\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\n\r\nexport type RarityMultiSelectProps = {\r\n    rarity: ItemRarity;\r\n    onChange(rarity: ItemRarity, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type RarityMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class RarityMultiSelect extends React.Component<RarityMultiSelectProps, RarityMultiSelectState> {\r\n    constructor(props: RarityMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleRarity = this.toggleRarity.bind(this);\r\n        this.checkRarity = this.checkRarity.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(rarity: ItemRarity): boolean {\r\n        const rarityNum = rarity as number;\r\n        return (rarityNum !== 0) && ((rarityNum & (rarityNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleRarity(otherRarity: ItemRarity) {\r\n        const { rarity, onChange } = this.props;\r\n        let newRarity: ItemRarity;\r\n        switch (otherRarity) {\r\n        case ItemRarity.None:\r\n        case ItemRarity.All:\r\n            newRarity = otherRarity;\r\n            break;\r\n        default:\r\n            newRarity = rarity ^ otherRarity;\r\n            break;\r\n        }\r\n\r\n        onChange(newRarity, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkRarity(otherRarity: ItemRarity): boolean {\r\n        const { rarity } = this.props;\r\n        if (rarity !== ItemRarity.All && otherRarity === ItemRarity.All)\r\n            return false;\r\n        return (rarity & otherRarity) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { rarity } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (rarity === ItemRarity.None)\r\n            selectedText = ItemRarity[ItemRarity.None];\r\n        else if (rarity === ItemRarity.All)\r\n            selectedText = ItemRarity[ItemRarity.All];\r\n        else if (RarityMultiSelect.isPowerOf2(rarity))\r\n            selectedText = ItemRarity[rarity];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center justify-between rounded-r text-sm bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"6.9rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemRarity).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemRarity: ItemRarity = ItemRarity[value as keyof typeof ItemRarity];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleRarity(itemRarity)}>\r\n                                    {(this.checkRarity(itemRarity) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkRarity(itemRarity) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemRarity[itemRarity]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type TypeMultiSelectProps = {\r\n    type: ItemType;\r\n    onChange(type: ItemType, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type TypeMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class TypeMultiSelect extends React.Component<TypeMultiSelectProps, TypeMultiSelectState> {\r\n    constructor(props: TypeMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleType = this.toggleType.bind(this);\r\n        this.checkType = this.checkType.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(type: ItemType): boolean {\r\n        const typeNum = type as number;\r\n        return (typeNum !== 0) && ((typeNum & (typeNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleType(otherType: ItemType) {\r\n        const { type, onChange } = this.props;\r\n        let newType: ItemType;\r\n        switch (otherType) {\r\n        case ItemType.None:\r\n        case ItemType.All:\r\n            newType = otherType;\r\n            break;\r\n        default:\r\n            newType = type ^ otherType;\r\n            break;\r\n        }\r\n\r\n        onChange(newType, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkType(otherType: ItemType): boolean {\r\n        const { type } = this.props;\r\n        if (type !== ItemType.All && otherType === ItemType.All)\r\n            return false;\r\n        return (type & otherType) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { type } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (type === ItemType.None)\r\n            selectedText = ItemType[ItemType.None];\r\n        else if (type === ItemType.All)\r\n            selectedText = ItemType[ItemType.All];\r\n        else if (TypeMultiSelect.isPowerOf2(type))\r\n            selectedText = ItemType[type];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm flex items-center justify-between rounded-r bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"10.29rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemType).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemType: ItemType = ItemType[value as keyof typeof ItemType];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleType(itemType)}>\r\n                                    {(this.checkType(itemType) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkType(itemType) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemType[itemType]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemQuery, ItemQueryOptions } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type ListSortingBarProps = {\r\n    name: string;\r\n    items: PricedItem[];\r\n    isDataStale: boolean;\r\n    onReload(): Promise<void>;\r\n    onSetTimespan(timespan: HistoryTimespan): Promise<void>; \r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type ListSortingBarState = {\r\n    query: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    timespan: HistoryTimespan;\r\n}\r\n\r\nexport default class ListSortingBar extends React.Component<ListSortingBarProps, ListSortingBarState> {\r\n    constructor(props: ListSortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            query: new ItemQuery(),\r\n            filteredItems: props.items,\r\n            isFilterOpen: false,\r\n            timespan: HistoryTimespan.OneMonth\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.sortCompare = this.sortCompare.bind(this); \r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n        this.onSetTimespan = this.onSetTimespan.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFilter();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ListSortingBarProps) {\r\n        if (prevProps.items !== this.props.items)\r\n            this.onFilter();\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({query: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    onFilter() {\r\n        // TODO: Implement filtering of the items from props here\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase()) &&\r\n                   (query.type & item.Type) !== 0 &&\r\n                   (query.rarity & item.Rarity) !== 0 &&\r\n                   item.Level >= query.minLevel &&\r\n                   item.Level <= query.maxLevel &&\r\n                   item.BuyPrice >= query.minBuyPrice &&\r\n                   item.BuyPrice <= query.maxBuyPrice &&\r\n                   item.SellPrice >= query.minSellPrice &&\r\n                   item.SellPrice <= query.maxSellPrice;\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    // Does an unfiltered search.\r\n    onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase());\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    sortCompare(a: PricedItem, b: PricedItem): number {\r\n        const { query } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n\r\n        if (query.sortBy === ItemField.Name) {\r\n            if (isSortAscending)\r\n                return a.Name.toLowerCase().localeCompare(b.Name.toLowerCase());\r\n            \r\n            return b.Name.toLowerCase().localeCompare(a.Name.toLowerCase());\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Appeal) {\r\n            if (isSortAscending)\r\n                return a.Appeal - b.Appeal;\r\n\r\n            return b.Appeal - a.Appeal;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Margin) {\r\n            if (isSortAscending)\r\n                return a.Margin - b.Margin;\r\n\r\n            return b.Margin - a.Margin;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sold) {\r\n            if (isSortAscending)\r\n                return a.Sold - b.Sold;\r\n\r\n            return b.Sold - a.Sold;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Bought) {\r\n            if (isSortAscending)\r\n                return a.Bought - b.Bought;\r\n\r\n            return b.Bought - a.Bought;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Buys) {\r\n            if (isSortAscending)\r\n                return a.BuyPrice - b.BuyPrice;\r\n\r\n            return b.BuyPrice - a.BuyPrice;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sells) {\r\n            if (isSortAscending)\r\n                return a.SellPrice - b.SellPrice;\r\n\r\n            return b.SellPrice - a.SellPrice;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.name = value;\r\n            return {query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.type = newType;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.rarity = newRarity;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            if (value > query.maxLevel)\r\n                return {query};\r\n\r\n            query.minLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            if (value < query.minLevel)\r\n                return {query};\r\n\r\n            query.maxLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.minBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.maxBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.minSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.maxSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = prevState.query;\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    async onSetTimespan(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const { onSetTimespan } = this.props;\r\n        const value = event.target.value;\r\n        const timespan = parseInt(value) as HistoryTimespan;\r\n        this.setState({timespan}, async () => await onSetTimespan(timespan));\r\n    }\r\n\r\n    render() {\r\n        const { name, isDataStale, onReload, children } = this.props;\r\n        const { query, isFilterOpen, filteredItems, timespan } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <span className=\"\">{name}</span>\r\n                    \r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={query.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={query.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Time Span</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 mr-4 rounded h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={timespan} \r\n                            onChange={this.onSetTimespan}>\r\n                            <option value={HistoryTimespan.OneHour} className=\"\">{HistoryTimespan[HistoryTimespan.OneHour]}</option>\r\n                            <option value={HistoryTimespan.SixHours} className=\"\">{HistoryTimespan[HistoryTimespan.SixHours]}</option>\r\n                            <option value={HistoryTimespan.TwelveHours} className=\"\">{HistoryTimespan[HistoryTimespan.TwelveHours]}</option>\r\n                            <option value={HistoryTimespan.OneDay} className=\"\">{HistoryTimespan[HistoryTimespan.OneDay]}</option>\r\n                            <option value={HistoryTimespan.ThreeDays} className=\"\">{HistoryTimespan[HistoryTimespan.ThreeDays]}</option>\r\n                            <option value={HistoryTimespan.OneWeek} className=\"\">{HistoryTimespan[HistoryTimespan.OneWeek]}</option>\r\n                            <option value={HistoryTimespan.TwoWeeks} className=\"\">{HistoryTimespan[HistoryTimespan.TwoWeeks]}</option>\r\n                            <option value={HistoryTimespan.OneMonth} className=\"\">{HistoryTimespan[HistoryTimespan.OneMonth]}</option>\r\n                        </select>\r\n\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\", zIndex: 100}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={query.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={query.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={query.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={() => {\r\n                                                    this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out relative flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            title={`${isDataStale ? \"Reload Data (Data may be stale)\" : \"Reload Data\"}`}\r\n                            onClick={onReload}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                            {isDataStale && (\r\n                                <div className=\"absolute flex h-3 w-3\" style={{top: \"-0.35rem\", right: \"-0.35rem\"}}>\r\n                                    <span className=\"animate-ping h-3 w-3 absolute rounded-full bg-yellow-500 opacity-75\"></span>\r\n                                    <span className=\"relative rounded-full h-3 w-3 bg-yellow-500\"></span>\r\n                                </div>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n            </>\r\n        );\r\n    }\r\n}","export class HistoryItemQuery {\r\n    public readonly id: number;\r\n    public readonly hasDetails: boolean;\r\n    public readonly newest: number;\r\n\r\n    constructor(id: number, hasDetails: boolean = false, newest: number = 0) {\r\n        this.id = id;\r\n        this.hasDetails = hasDetails;\r\n        this.newest = newest;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            id: this.id.toString(),\r\n            hasDetails: this.hasDetails.toString(),\r\n            newest: this.newest.toString()\r\n        };\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type PricedItem = {\r\n    Id: number;\r\n    ChatLink: string;\r\n    Name: string;\r\n    Icon: string;\r\n    Description: string;\r\n    Type: ItemType;\r\n    Rarity: ItemRarity;\r\n    Level: number;\r\n\r\n    BuyPrice: number;\r\n    SellPrice: number;\r\n    Appeal: number;\r\n    Margin: number;\r\n    Sold: number;\r\n    Bought: number;\r\n}\r\n\r\nexport class PricedItemFactory {\r\n    static ToPricedItem(item: any): PricedItem | null {\r\n        try {\r\n            const result: PricedItem = { \r\n                Id: item.id, \r\n                ChatLink: item.chatLink,\r\n                Name: item.name, \r\n                Icon: item.icon, \r\n                Description: item.description,\r\n                Type: parseInt(item.type),\r\n                Rarity: parseInt(item.rarity),\r\n                Level: item.level,\r\n\r\n                BuyPrice: item.buyPrice,\r\n                SellPrice: item.sellPrice,\r\n                Appeal: parseFloat(parseFloat(item.appeal).toFixed(2)),\r\n                Margin: parseFloat(parseFloat(item.margin).toFixed(2)),\r\n                Sold: parseFloat(parseFloat(item.sold).toFixed(2)),\r\n                Bought: parseFloat(parseFloat(item.bought).toFixed(2))\r\n            };\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToPricedItems(items: any): PricedItem[] {\r\n        const arr: PricedItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = PricedItemFactory.ToPricedItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","const environment = {\r\n    urls: {\r\n        authority: \"https://auth.devwulfcodes.com\",\r\n        host: \"https://gw2.devwulfcodes.com\",\r\n        gw2calculator: \"https://gw2.devwulfcodes.com/api\"\r\n    }\r\n};\r\n\r\nexport default environment;","import { HistoryItem, HistoryItemFactory } from \"../dataContracts/HistoryItem\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem, PricedItemFactory } from \"../dataContracts/PricedItem\";\r\nimport environment from \"../environment\";\r\n\r\nclass ApiService {\r\n    public async GetItems(accessToken: string, query: ItemQuery, pageNumber: number): Promise<PricedItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems?\" + new URLSearchParams(query.toObject()) + `&pageNumber=${pageNumber}`;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return PricedItemFactory.ToPricedItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemPageCount(accessToken: string, query: ItemQuery): Promise<number> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems/pageCount?\" + new URLSearchParams(query.toObject());\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result;\r\n\r\n        console.log(result);\r\n        return 0;\r\n    }\r\n\r\n    public async GetHistoryItems(accessToken: string, queries: HistoryItemQuery[]): Promise<HistoryItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/historyItems\";\r\n        const response = await ApiService.Post(url, accessToken, queries);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return HistoryItemFactory.ToHistoryItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemLists(accessToken: string) : Promise<ItemList[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getLists\";\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemLists;\r\n            const itemLists: ItemList[] = [];\r\n            items.forEach((item: any) => {\r\n                const itemList: ItemList = {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n                \r\n                itemLists.push(itemList);\r\n            });\r\n\r\n            return itemLists;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemList(accessToken: string, id: string) : Promise<number[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getList/\" + id;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemIds;\r\n            const itemIds: number[] = [];\r\n            items.forEach((id: any) => {\r\n                const idNum = parseInt(id);\r\n                itemIds.push(idNum);\r\n            });\r\n\r\n            return itemIds;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async CreateList(accessToken: string, name: string) : Promise<string | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/createList\";\r\n        const response = await ApiService.Post(url, accessToken, {name});\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result.listId;\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async UpdateListName(accessToken: string, id: string, name: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/updateName\";\r\n        const response = await ApiService.Post(url, accessToken, {id, name});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async AddListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/addItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n        \r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteList(accessToken: string, id: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteList\";\r\n        const response = await ApiService.Post(url, accessToken, {id});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    private static async Get(url: string, accessToken: string) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            }\r\n        });\r\n    }\r\n\r\n    private static async Post(url: string, accessToken: string, body: any) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            },\r\n            body: body ? JSON.stringify(body) : undefined\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemComparisonSlot from \"../components/ItemComparisonSlot\";\r\nimport ListSortingBar from \"../components/ListSortingBar\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport { HistoryItem } from \"../dataContracts/HistoryItem\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport type MyListProps = {\r\n    listId?: string;\r\n}\r\n\r\nexport type MyListState = {\r\n    id: string,\r\n    user: User | undefined;\r\n    items: PricedItem[];\r\n    timespan: HistoryTimespan;\r\n    isLoading: boolean;\r\n    isDataStale: boolean;\r\n}\r\n\r\nexport default class MyList extends React.Component<MyListProps, MyListState> {\r\n    constructor(props: MyListProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            user: undefined,\r\n            /*[19721, 46736, 46738, 46739, 72224, 9576, 24277, 67015],*/\r\n            items: [],\r\n            timespan: HistoryTimespan.OneMonth,\r\n            isLoading: false,\r\n            isDataStale: false\r\n        };\r\n\r\n        this.updateId = this.updateId.bind(this);\r\n        this.updateItems = this.updateItems.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.onReload = this.onReload.bind(this);\r\n        this.setTimespan = this.setTimespan.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async updateId() {\r\n        const { listId } = this.props;\r\n        const { id } = this.state;\r\n        if (listId && id !== listId)\r\n            this.setState({id: listId, items: [], isLoading: true}, async () => {\r\n                await this.updateItems();\r\n            });\r\n    }\r\n\r\n    async updateItems() {\r\n        const { user, id, timespan } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        this.setState({items: [], isLoading: true, isDataStale: false}, async () => {\r\n            const ids = await ApiService.GetItemList(user.access_token, id);\r\n            if (!ids)\r\n                return;\r\n    \r\n            const historyItemQueries: HistoryItemQuery[] = [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n                const itemId = ids[i];\r\n                const newest = await LocalDB.getNewestTime(itemId);\r\n                const hasDetails = await LocalDB.hasDetails(itemId);\r\n                historyItemQueries.push(new HistoryItemQuery(itemId, hasDetails, newest));\r\n            }\r\n    \r\n            const historyItems = await ApiService.GetHistoryItems(user.access_token, historyItemQueries);\r\n            if (!historyItems)\r\n                return;\r\n    \r\n            const pricedItems: PricedItem[] = [];\r\n            for (var i = 0; i < historyItems.length; i++) {\r\n                const item = historyItems[i];\r\n                const itemQuery = historyItemQueries[i];\r\n                await LocalDB.deleteOldPrices(item.Id);\r\n                if (!itemQuery.hasDetails)\r\n                    await LocalDB.setHistoryItem(item);\r\n                else\r\n                    await LocalDB.setHistoryItemPrices(item.Id, item.History);\r\n    \r\n                const dbItem = await LocalDB.getHistoryItem(item.Id, timespan);\r\n                if (!dbItem)\r\n                    continue;\r\n    \r\n                const pricedItem = MyList.historyToPriced(dbItem);\r\n                pricedItems.push(pricedItem);\r\n            }\r\n\r\n            this.setState({items: pricedItems, isLoading: false}, () => {\r\n                setTimeout(() => {\r\n                    this.setState({isDataStale: true});\r\n                }, 300000);\r\n            });\r\n        });\r\n    }\r\n\r\n    static historyToPriced(item: HistoryItem): PricedItem {\r\n        const newestPrice = item.History[0];\r\n        const buyPrice = newestPrice.buyPrice;\r\n        const sellPrice = newestPrice.sellPrice;\r\n        const margin = (sellPrice - buyPrice) / sellPrice * 100;\r\n        let sumSold: number = 0;\r\n        let sumBought: number = 0;\r\n        item.History.forEach(price => {\r\n            sumSold += price.sold;\r\n            sumBought += price.bought;\r\n        });\r\n\r\n        const avgSold = sumSold / item.History.length;\r\n        const avgBought = sumBought / item.History.length;\r\n\r\n        const appeal = margin > 15 ? margin * avgSold * avgBought : 0;\r\n\r\n        const pricedItem: PricedItem = {\r\n            Id: item.Id,\r\n            ChatLink: item.ChatLink,\r\n            Name: item.Name,\r\n            Icon: item.Icon,\r\n            Description: item.Description,\r\n            Type: item.Type,\r\n            Rarity: item.Rarity,\r\n            Level: item.Level,\r\n        \r\n            BuyPrice: buyPrice,\r\n            SellPrice: sellPrice,\r\n            Appeal: appeal,\r\n            Margin: margin,\r\n            Sold: avgSold,\r\n            Bought: avgBought\r\n        };\r\n\r\n        return pricedItem;\r\n    }\r\n\r\n    async deleteItem(itemId: number) {\r\n        const { id, user, items } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteListItem(user.access_token, id, itemId);\r\n        const tempItems = [...items];\r\n        if (result) {\r\n            const itemIndex = tempItems.findIndex(item => item.Id === itemId);\r\n            tempItems.splice(itemIndex, 1);\r\n            this.setState({items: tempItems});\r\n        }\r\n    }\r\n\r\n    async onReload() {\r\n        this.setState({items: [], isLoading: true}, async () => {\r\n            await this.updateItems();\r\n        });\r\n    }\r\n\r\n    async setTimespan(timespan: HistoryTimespan) {\r\n        this.setState({items: [], timespan: timespan, isLoading: true}, async () => {\r\n            const { user, id } = this.state;\r\n            if (!user)\r\n                return;\r\n\r\n            const ids = await ApiService.GetItemList(user.access_token, id);\r\n            if (!ids)\r\n                return;\r\n\r\n            const pricedItems: PricedItem[] = [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n                const itemId = ids[i];\r\n                const item = await LocalDB.getHistoryItem(itemId, timespan);\r\n                if (!item)\r\n                    continue;\r\n                \r\n                const pricedItem = MyList.historyToPriced(item);\r\n                pricedItems.push(pricedItem);\r\n            }\r\n\r\n            this.setState({items: pricedItems, isLoading: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, items, isLoading, isDataStale } = this.state;\r\n\r\n        return (\r\n            <div className=\"main w-full h-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n                            \r\n                        if (user) {\r\n                            return(\r\n                                <ListSortingBar items={items} name=\"Tracked Items\" isDataStale={isDataStale} onReload={this.onReload} onSetTimespan={this.setTimespan}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX className=\"my-list-scroll\">\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemComparisonSlot item={value} deleteItem={this.deleteItem} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"flex justify-center\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </ListSortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(<>\r\n                            <ListSortingBar items={[]} name=\"Items\" isDataStale={true} onReload={async () => {}} onSetTimespan={async () => {}}>\r\n                                {sortedItems => (\r\n                                    <></>\r\n                                )}\r\n                            </ListSortingBar>\r\n\r\n                            {/*\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                            */}\r\n                        </>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n                \r\n                {/*\r\n                <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                <div className=\"block\">\r\n                    <div id=\"head\" className=\"\">\r\n                        <div className=\"flex flex-row flex-wrap\">\r\n                            <div className=\"font-bold\">Name</div>\r\n                            <div className=\"font-bold\">Buys</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"body\" className=\"\">\r\n\r\n                    </div>\r\n                </div>\r\n                */}\r\n\r\n                {/*\r\n                <table className=\"table-fixed w-full\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"w-2/8\">Name</th>\r\n                            <th className=\"w-1/8\">Buys</th>\r\n                            <th className=\"w-1/8\">Sells</th>\r\n                            <th className=\"w-1/8\">Fee</th>\r\n                            <th className=\"w-1/8\">Appeal</th>\r\n                            <th className=\"w-1/8\">Margin</th>\r\n                            <th className=\"w-1/8\">Transaction Rate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                    </tbody>\r\n                </table>\r\n                */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex bg-gray-800 text-gray-200\"></div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ItemHelper from \"../utils/ItemHelper\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemSummarySlotProps = {\r\n    item: PricedItem;\r\n    accessToken: string;\r\n}\r\n\r\nexport type ItemSummarySlotState = {\r\n    isDragging: boolean;\r\n    isAdding: boolean;\r\n}\r\n\r\nexport default class ItemSummarySlot extends React.Component<ItemSummarySlotProps, ItemSummarySlotState> {\r\n    private dragTarget: React.RefObject<HTMLDivElement>;\r\n    \r\n    constructor(props: ItemSummarySlotProps) {\r\n        super(props);\r\n\r\n        this.dragTarget = React.createRef();\r\n\r\n        this.state = {\r\n            isDragging: false,\r\n            isAdding: false\r\n        };\r\n\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    onDragStart(event: React.DragEvent<HTMLDivElement>) {\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData(\"text\", this.props.item.Id.toString());\r\n\r\n        requestAnimationFrame(() => {\r\n            this.dragTarget.current?.classList.add(\"hide\");\r\n        });\r\n\r\n        this.setState({isDragging: true});\r\n    }\r\n\r\n    onDragEnd(event: React.DragEvent<HTMLDivElement>) {\r\n        this.dragTarget.current?.classList.remove(\"hide\");\r\n        this.setState({isDragging: false});\r\n    }\r\n\r\n    onAdd() {\r\n        this.setState(prevState => ({isAdding: !prevState.isAdding}));\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props;\r\n        const { isDragging, isAdding } = this.state;\r\n\r\n        return(\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-3/12 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <a href={ItemHelper.getWikiLink(item.ChatLink)} target=\"_blank\" rel=\"noopener noreferrer\" \r\n                        className=\"transition duration-150 ease-in-out italic text-gray-200 hover:text-blue-400\"\r\n                        onClick={event => event.stopPropagation()}>\r\n                        {item.Name}\r\n                    </a>\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Buys</label>\r\n                    <Price price={item.BuyPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sells</label>\r\n                    <Price price={item.SellPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Margin</label>\r\n                    <span className={`${item.Margin > 15 ? \"text-green-500\" : \"text-red-500\"}`}>{item.Margin}%</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sold</label>\r\n                    <span className=\"\">{item.Sold}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Bought</label>\r\n                    <span className=\"\">{item.Bought}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Appeal</label>\r\n                    <span className=\"\">{item.Appeal}</span>\r\n                </div>\r\n                <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                    <div className=\"relative px-2 py-1 mr-3 rounded shadow-lg bg-gray-800 text-gray-300 cursor-move\"\r\n                        draggable\r\n                        onDragStart={this.onDragStart}\r\n                        onDragEnd={this.onDragEnd}>\r\n                        <FontAwesomeIcon icon=\"arrows-alt\" />\r\n                        <div ref={this.dragTarget} className={`${isDragging ? \"\" : \"hidden\"} absolute px-2 py-1 flex flex-row items-center justify-center w-32 h-12 rounded bg-gray-800`} style={{top: \"-0.25rem\", left: \"-2.75rem\"}}>\r\n                            <img src={item.Icon} alt={item.Name} className=\"mr-3 w-8 h-8 select-none\"/>\r\n                            <span className=\"italic text-sm truncate text-gray-300 select-none\">{item.Name}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"relative\">\r\n                        <button className=\"transition duration-150 ease-in-out px-3 py-2 rounded shadow-lg bg-green-700 text-green-300 hover:bg-green-800 hover:text-green-200\"\r\n                            onClick={this.onAdd}>\r\n                            <FontAwesomeIcon icon=\"plus\" />\r\n                        </button>\r\n                        <div className={`${isAdding ? \"\" : \"hidden\"} arrow-up absolute flex flex-col justify-center w-24 rounded bg-gray-900 text-gray-300`} style={{height: \"5.45rem\", top: \"3.25rem\", left: \"-1.875rem\"}}>\r\n                            <Scrollbar noScrollX>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                            </Scrollbar>\r\n                        </div>\r\n                    </div>\r\n                    */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type SortingBarProps = {\r\n    name: string;\r\n    onLoadingStart(): void;\r\n    onLoadingStop(): void;\r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type SortingBarState = {\r\n    user: User | undefined;\r\n    pendingQuery: ItemQuery;\r\n    currentQuery: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    currentPage: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport default class SortingBar extends React.Component<SortingBarProps, SortingBarState> {\r\n    constructor(props: SortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            pendingQuery: new ItemQuery(),\r\n            currentQuery: new ItemQuery(),\r\n            filteredItems: [],\r\n            isFilterOpen: false,\r\n            currentPage: 1,\r\n            totalPages: 1\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onToPage = this.onToPage.bind(this);\r\n        this.onFirstPage = this.onFirstPage.bind(this);\r\n        this.onLastPage = this.onLastPage.bind(this);\r\n        this.onNextPage = this.onNextPage.bind(this);\r\n        this.onPrevPage = this.onPrevPage.bind(this);\r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({pendingQuery: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    async onFilter() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            const totalPages = await ApiService.GetItemPageCount(user.access_token, pendingQuery);\r\n            if (totalPages <= 0)\r\n                return;       \r\n    \r\n            onLoadingStart(); \r\n        \r\n            const items = await ApiService.GetItems(user.access_token, pendingQuery, 1) ?? [];\r\n            this.setState({filteredItems: items, currentQuery: pendingQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        const nameOnlyQuery = new ItemQuery({name: pendingQuery.name});\r\n        this.setState({filteredItems: []}, async () => {\r\n            const totalPages = await ApiService.GetItemPageCount(user.access_token, nameOnlyQuery);\r\n            if (totalPages <= 0)\r\n                return;  \r\n    \r\n            onLoadingStart();\r\n            \r\n            const items = await ApiService.GetItems(user.access_token, nameOnlyQuery, 1) ?? [];\r\n            this.setState({filteredItems: items, currentQuery: nameOnlyQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onToPage(pageNumber: number) {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (pageNumber <= 0 || pageNumber > totalPages)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n    \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, pageNumber) ?? [];\r\n            this.setState({filteredItems: items, currentPage: pageNumber}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onFirstPage() {\r\n        await this.onToPage(1);\r\n    }\r\n\r\n    async onLastPage() {\r\n        const { totalPages } = this.state;\r\n        await this.onToPage(totalPages);\r\n    }\r\n\r\n    async onNextPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage >= totalPages)\r\n            return;\r\n\r\n        \r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n    \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage + 1) ?? [];\r\n            this.setState({filteredItems: items, currentPage: currentPage + 1}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    async onPrevPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage <= 1)\r\n            return;\r\n\r\n        this.setState({filteredItems: []}, async () => {\r\n            onLoadingStart();\r\n            \r\n            const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage - 1) ?? [];\r\n            this.setState({filteredItems: items, currentPage: currentPage - 1}, onLoadingStop);\r\n        });\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.name = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.type = newType;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.rarity = newRarity;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            if (value > query.maxLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.minLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            if (value < query.minLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.maxLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.minBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.maxBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.minSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.maxSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = prevState.pendingQuery;\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        const { pendingQuery, filteredItems, isFilterOpen, currentPage, totalPages } = this.state;\r\n\r\n        const isSortAscending: boolean = pendingQuery.sortDirection === ItemFieldSort.Ascending;\r\n        const pageNums: number[] = [];\r\n        \r\n        for (var i = currentPage < 5 ? 1 : currentPage - 4; \r\n            i <= ((currentPage + 4) <= totalPages ? currentPage + 4 : totalPages); \r\n            i++) {\r\n            pageNums.push(i);\r\n        }\r\n\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <AuthenticationContext.Consumer>\r\n                        {props => {\r\n                            if (props.oidcUser != null && !this.state.user)\r\n                                this.setState({user: props.oidcUser}, this.onFilter);\r\n\r\n                            return(\r\n                                <></>\r\n                            );\r\n                        }}\r\n                    </AuthenticationContext.Consumer>\r\n                    <span className=\"\">{name}</span>\r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={pendingQuery.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-700 text-gray-300\" \r\n                            value={pendingQuery.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r border-l border-gray-800 bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\", zIndex: 100}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={pendingQuery.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={pendingQuery.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={pendingQuery.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={async () => {\r\n                                                    await this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            onClick={this.onFilter}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n                {totalPages > 0 && (\r\n                    <div className=\"mt-4 flex flex-row-reverse w-full\">\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onFirstPage}>\r\n                                <FontAwesomeIcon icon=\"angle-double-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">First</span>\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onPrevPage}>\r\n                                <FontAwesomeIcon icon=\"arrow-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">Prev</span>\r\n                            </button>\r\n                            {pageNums.map((value, index) => (\r\n                                <button key={index} disabled={currentPage === value} \r\n                                    className={`transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded ${currentPage === value ? \"bg-gray-900 text-gray-200 cursor-default\" : \"bg-gray-700 text-gray-300 hover:bg-gray-900 hover:text-gray-200 hover:shadow-lg\"}`}\r\n                                    onClick={() => this.onToPage(value)}>\r\n                                    {value}\r\n                                </button>\r\n                            ))}\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onNextPage}>\r\n                                <span className=\"mr-1\">Next</span>\r\n                                <FontAwesomeIcon icon=\"arrow-right\" className=\"text-xs\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onLastPage}>\r\n                                <span className=\"mr-1\">Last</span>\r\n                                <FontAwesomeIcon icon=\"angle-double-right\" className=\"text-xs\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { faDivide } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemSummarySlot from \"../components/ItemSummarySlot\";\r\nimport SortingBar from \"../components/SortingBar\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport type GeneralSearchProps = {\r\n\r\n}\r\n\r\nexport type GeneralSearchState = {\r\n    user: User | undefined;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default class GeneralSearch extends React.Component<GeneralSearchProps, GeneralSearchState> {\r\n    constructor(props: GeneralSearchProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            isLoading: false\r\n        };\r\n\r\n        this.onLoadingStart = this.onLoadingStart.bind(this);\r\n        this.onLoadingStop = this.onLoadingStop.bind(this);\r\n    }\r\n\r\n    onLoadingStart() {\r\n        this.setState({isLoading: true});\r\n    }\r\n\r\n    onLoadingStop() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const { user, isLoading } = this.state;\r\n\r\n        return(\r\n            <div className=\"main w-full h-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n\r\n                        if (user) {\r\n                            return(\r\n                                <SortingBar name=\"Results\" onLoadingStart={this.onLoadingStart} onLoadingStop={this.onLoadingStop}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX className=\"search-scroll\">\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemSummarySlot item={value} accessToken={user.access_token} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </SortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import environment from \"./environment\";\r\n\r\nconst configuration = {\r\n    client_id: \"gw2_calculator_app\",\r\n    response_type: \"id_token token\",\r\n    scope: \"openid email roles profile gw2calculator\",\r\n    automaticSilentRenew: true,\r\n    loadUserInfo: true,\r\n    authority: environment.urls.authority,\r\n    redirect_uri: `${environment.urls.host}/authentication/callback`,\r\n    post_logout_redirect_uri: `${environment.urls.host}/`,\r\n    silent_redirect_uri: `${environment.urls.host}/authentication/silent_callback`\r\n};\r\n\r\nexport default configuration;","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return(\r\n            <header className=\"\" style={{boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.2)\", zIndex: 100}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        return(\r\n                            <div className=\"flex justify-between items-center px-4 bg-indigo-700 text-indigo-200\">\r\n                                <div className=\"flex flex-row items-center\">\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-6 text-lg font-bold hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        GW2 Trading\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/search\">\r\n                                        Search\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                {props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <span className=\"mr-4\">Hello, {props.oidcUser.profile.name}!</span>\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.logout()}>\r\n                                            Logout\r\n                                        </button>\r\n                                    </div>\r\n                                ) ||\r\n                                (!props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.login()}>\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </header>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type AddItemListSlotProps = {\r\n    onAddItemList(name: string): Promise<void>;\r\n}\r\n\r\nexport type AddItemListSlotState = {\r\n    isAdding: boolean;\r\n    name: string;\r\n}\r\n\r\nexport default class AddItemListSlot extends React.Component<AddItemListSlotProps, AddItemListSlotState> {\r\n    constructor(props: AddItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdding: false,\r\n            name: \"\"\r\n        };\r\n\r\n        this.onAddItemListStart = this.onAddItemListStart.bind(this);\r\n        this.onAddItemListStop = this.onAddItemListStop.bind(this);\r\n        this.onAddItemList = this.onAddItemList.bind(this);\r\n    }\r\n\r\n    onAddItemListStart(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: true});\r\n    }\r\n\r\n    onAddItemListStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    async onAddItemList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { onAddItemList } = this.props;\r\n        const { name } = this.state;\r\n        if (!name)\r\n            return;\r\n        \r\n        await onAddItemList(name);\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    render() {\r\n        const { isAdding, name } = this.state;\r\n\r\n        return(\r\n            <div className=\"transition duration-150 ease-in-out flex flex-row items-center justify-between mr-2 xl:mx-2 border-2 border-dashed rounded-lg border-indigo-700 bg-opacity-0 bg-indigo-700 text-indigo-300 hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer\"\r\n                tabIndex={0}\r\n                onClick={this.onAddItemListStart}>\r\n                {(!isAdding && \r\n                    <div className=\"px-4 py-3\">\r\n                        <div className=\"pointer-events-none select-none\">\r\n                            <FontAwesomeIcon icon=\"plus\" className=\"mr-3\" />\r\n                            Add New List...\r\n                        </div>\r\n                    </div>\r\n                ) || \r\n                (isAdding && \r\n                    <div className=\"px-2 py-3 flex flex-row\">\r\n                        <input type=\"text\" className=\"px-2 mr-1 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={name} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({name: event.target.value})} />\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onAddItemList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onAddItemListStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport interface CustomLinkProps extends React.HTMLAttributes<HTMLElement> {\r\n    to: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function CustomLink(props: CustomLinkProps) {\r\n    const { push } = useHistory();\r\n    const { to, children, ...rest } = props;\r\n    return(\r\n        <div onClick={() => push(to)} {...rest}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type ItemListSlotProps = {\r\n    itemList: ItemList;\r\n    onDrop(id: string, itemId: number): Promise<void>;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteList(id: string): Promise<void>;\r\n}\r\n\r\nexport type ItemListSlotState = {\r\n    isMouseHover: boolean;\r\n    isDragHover: boolean;\r\n    isEditing: boolean;\r\n    newName: string;\r\n}\r\n\r\nexport default class ItemListSlot extends React.Component<ItemListSlotProps, ItemListSlotState> {\r\n    constructor(props: ItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isMouseHover: false,\r\n            isDragHover: false,\r\n            isEditing: false,\r\n            newName: props.itemList.name\r\n        };\r\n\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.onDragEnter = this.onDragEnter.bind(this);\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDragLeave = this.onDragLeave.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n\r\n        this.onEditNameStart = this.onEditNameStart.bind(this);\r\n        this.onEditNameStop = this.onEditNameStop.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.setState({isMouseHover: true});\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.setState({isMouseHover: false});\r\n    }\r\n\r\n    async onDragEnter(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: true});\r\n    }\r\n\r\n    onDragOver(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    async onDragLeave(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    async onDrop(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        const { itemList, onDrop } = this.props;\r\n        const itemId = parseInt(event.dataTransfer.getData(\"text\"));\r\n        await onDrop(itemList.id, itemId);\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    onEditNameStart(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: true, newName: this.props.itemList.name});\r\n    }\r\n\r\n    onEditNameStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onEditName(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onEditName } = this.props;\r\n        const { newName } = this.state;\r\n        if (!newName)\r\n            return;\r\n\r\n        await onEditName(itemList.id, newName);\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onDeleteList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onDeleteList } = this.props;\r\n        await onDeleteList(itemList.id);\r\n    }\r\n\r\n    render() {\r\n        const { itemList } = this.props;\r\n        const { isMouseHover, isDragHover, isEditing, newName } = this.state;\r\n\r\n        return(\r\n            <CustomLink className={`transition duration-150 ease-in-out flex flex-row items-center justify-between px-4 py-3 mr-2 min-w-40 rounded xl:w-full xl:rounded-none xl:mr-0 xl:mb-2 bg-opacity-25 ${isDragHover ? \"bg-green-700 text-green-300\" : \"bg-indigo-700 text-indigo-300\"} hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer`}\r\n                to={`/list/${itemList.id}`}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onMouseLeave={this.onMouseLeave}\r\n                onDragEnter={this.onDragEnter}\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={this.onDrop}>\r\n                {(!isEditing && \r\n                    <>\r\n                        <span className=\"truncate pointer-events-none select-none\">{itemList.name}</span>\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditNameStart}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"pencil-alt\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onDeleteList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) || \r\n                (isEditing && \r\n                    <>\r\n                        <input type=\"text\" className=\"px-2 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={newName} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({newName: event.target.value})} />\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditName}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onEditNameStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </CustomLink>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport AddItemListSlot from \"./AddItemListSlot\";\r\nimport ItemListSlot from \"./ItemListSlot\";\r\n\r\nexport type SidebarProps = {\r\n\r\n}\r\n\r\nexport type SidebarState = {\r\n    user: User | undefined;\r\n    itemLists: ItemList[];\r\n}\r\n\r\nexport default class Sidebar extends React.Component<SidebarProps, SidebarState> {\r\n    constructor(props: SidebarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            itemLists: []\r\n        };\r\n\r\n        this.refreshItemLists = this.refreshItemLists.bind(this);\r\n\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onAddList = this.onAddList.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    async refreshItemLists() {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const itemLists = await ApiService.GetItemLists(user.access_token);\r\n        if (!itemLists)\r\n            return;\r\n\r\n        this.setState({itemLists});\r\n    }\r\n\r\n    async onAddItem(id: string, itemId: number) {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        await ApiService.AddListItem(user.access_token, id, itemId);\r\n    }\r\n\r\n    async onEditName(id: string, name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.UpdateListName(user.access_token, id, name);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists[index].name = name;\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onAddList(name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.CreateList(user.access_token, name);\r\n        if (result) {\r\n            const itemList: ItemList = {\r\n                id: result,\r\n                name: name\r\n            };\r\n            itemLists.push(itemList);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onDeleteList(id: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteList(user.access_token, id);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists.splice(index, 1);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { itemLists, user } = this.state;\r\n\r\n        return(\r\n            <div className=\"sidebar py-4 flex w-full h-24 xl:w-64 xl:h-full bg-gray-900\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser}, () => {\r\n                                this.refreshItemLists();\r\n                            });\r\n                        if (user) {\r\n                            return(\r\n                                <Scrollbar>\r\n                                    <div className=\"flex flex-row px-4 xl:px-0 xl:flex-col whitespace-no-wrap\">\r\n                                        {itemLists.map((itemList, index) => (\r\n                                            <React.Fragment key={index}>\r\n                                                <ItemListSlot itemList={itemList} onDrop={this.onAddItem} onEditName={this.onEditName} onDeleteList={this.onDeleteList} />\r\n                                            </React.Fragment>\r\n                                        ))}\r\n                                        <AddItemListSlot onAddItemList={this.onAddList} />\r\n                                    </div>\r\n                                </Scrollbar>\r\n                            );\r\n                        }\r\n\r\n                        return(<></>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class NotFound extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex items-center justify-center bg-gray-800 text-gray-200\">\r\n                <div className=\"flex flex-col\">\r\n                    <span className=\"text-6xl\">404</span>\r\n                    <span className=\"text-2xl\">Page Not Found.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class NotAuthenticated extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex items-center justify-center bg-gray-800 text-gray-200\">\r\n                <div className=\"flex flex-col\">\r\n                    <span className=\"text-6xl\">401</span>\r\n                    <span className=\"text-2xl\">Not Authenticated.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class NotAuthorized extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full h-full flex items-center justify-center bg-gray-800 text-gray-200\">\r\n                <div className=\"flex flex-col\">\r\n                    <span className=\"text-6xl\">401</span>\r\n                    <span className=\"text-2xl\">Not Authorized.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport MyList from \"./pages/MyList\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport GeneralSearch from \"./pages/GeneralSearch\";\r\nimport { BrowserRouter, Redirect, Route, Switch, useParams } from \"react-router-dom\";\r\nimport { AuthenticationProvider, withOidcSecure } from \"@axa-fr/react-oidc-context\";\r\nimport configuration from \"./open-id-config\";\r\nimport Header from \"./components/Header\";\r\nimport { config } from \"process\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NotFound from \"./pages/error/NotFound\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport NotAuthenticated from \"./pages/error/NotAuthenticated\";\r\nimport NotAuthorized from \"./pages/error/NotAuthorized\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    const afterLogin = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                <span className=\"\">Logging in...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const afterLogout = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <FontAwesomeIcon icon=\"spinner\" className=\"animate-spin mr-4 text-indigo-400\" />\r\n                <span className=\"\">Logging out...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    return(\r\n        <div className=\"flex flex-col\">\r\n            <BrowserRouter>\r\n                <AuthenticationProvider configuration={configuration}\r\n                    notAuthenticated={NotAuthenticated}\r\n                    notAuthorized={NotAuthorized}\r\n                    callbackComponentOverride={afterLogin}\r\n                    authenticating={afterLogout}>\r\n                    <Header />\r\n                    <Redirect path=\"/authentication/callback\" to=\"/\" />\r\n                    <div className=\"flex flex-col xl:flex-row-reverse\" style={{height: \"calc(100vh - 4rem)\"}}>\r\n                        <Sidebar />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Dashboard} />\r\n                            <Route path=\"/search\" component={GeneralSearch} />\r\n                            <Route exact path=\"/list/:id\" component={MyListComponent} />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                </AuthenticationProvider>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MyListComponent() {\r\n    const { id } = useParams();\r\n\r\n    return(\r\n        <MyList listId={id} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}