{"version":3,"sources":["logo.svg","components/Price.tsx","utils/ItemField.ts","utils/ItemRarity.ts","utils/ItemType.ts","components/ItemComparisonSlot.tsx","dataContracts/ItemQuery.ts","utils/HistoryTimespan.ts","components/RarityMultiSelect.tsx","components/TypeMultiSelect.tsx","components/ListSortingBar.tsx","dataContracts/HistoryItemQuery.ts","dataContracts/HistoryItem.ts","dataContracts/PricedItem.ts","environment.ts","services/ApiService.ts","services/LocalDB.ts","pages/MyList.tsx","pages/Dashboard.tsx","components/ItemSummarySlot.tsx","components/SortingBar.tsx","pages/GeneralSearch.tsx","open-id-config.ts","components/Header.tsx","components/AddItemListSlot.tsx","components/CustomLink.tsx","components/ItemListSlot.tsx","components/Sidebar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Price","props","state","this","price","priceColor","isNegative","absPrice","Math","abs","gold","floor","silver","copper","className","id","icon","style","fontSize","src","alt","React","Component","defaultProps","ItemField","ItemFieldSort","ItemRarity","ItemType","ItemComparisonSlot","amount","item","deleteItem","revenue","round","SellPrice","expenditure","BuyPrice","totalFees","netProfit","Icon","Name","htmlFor","type","defaultValue","onChange","event","value","parseInt","target","console","log","isNaN","setState","Appeal","toFixed","Margin","Sold","Bought","onClick","Id","HistoryTimespan","ItemQuery","options","name","rarity","minLevel","maxLevel","minBuyPrice","maxBuyPrice","minSellPrice","maxSellPrice","sortBy","sortDirection","All","Descending","valueOf","toString","RarityMultiSelect","isOpen","toggleOpen","bind","toggleRarity","checkRarity","otherRarity","newRarity","None","selectedText","isPowerOf2","tabIndex","width","top","zIndex","Object","keys","filter","map","index","itemRarity","key","TypeMultiSelect","toggleType","checkType","otherType","newType","itemType","ListSortingBar","query","filteredItems","items","isFilterOpen","resetQueryValues","toggleFilter","onFilterOpen","onFilterClose","onFilter","onSearch","sortCompare","onNameChange","onTypeChange","onRarityChange","onMinLevelChange","onMaxLevelChange","onMinBuyPriceChange","onMaxBuyPriceChange","onMinSellPriceChange","onMaxSellPriceChange","onSort","onSortDirection","toLowerCase","includes","Type","Rarity","Level","sort","preventDefault","a","b","isSortAscending","Ascending","localeCompare","Buys","Sells","prevState","assign","callback","onReload","children","onSubmit","padding","height","right","HistoryItemQuery","newest","HistoryItemPrices","history","History","HistoryItemFactory","ChatLink","chatLink","Description","description","level","e","arr","forEach","itemResult","ToHistoryItem","push","PricedItemFactory","buyPrice","sellPrice","parseFloat","appeal","margin","sold","bought","ToPricedItem","environment","urls","authority","host","gw2calculator","accessToken","pageNumber","url","URLSearchParams","toObject","ApiService","Get","response","json","result","ok","ToPricedItems","queries","Post","ToHistoryItems","itemLists","itemList","itemIds","idNum","listId","itemId","fetch","method","mode","cache","headers","body","JSON","stringify","undefined","historyItemPrices","version","stores","open","catch","error","table","mapToClass","timespan","get","OneWeek","now","Date","OneHour","SixHours","TwelveHours","OneDay","ThreeDays","timeFromNow","setDate","getTime","getDate","time","getHistoryItemPrices","newHistory","newItem","add","unshift","update","currentPrices","weekFromNow","Dexie","MyList","user","isLoading","updateId","setTimespan","getItems","GetItemList","access_token","ids","historyItemQueries","i","length","LocalDB","getNewestTime","GetHistoryItems","historyItems","pricedItems","deleteOldPrices","setHistoryItemPrices","prices","pricedItem","newestPrice","sumSold","sumBought","avgSold","avgBought","DeleteListItem","tempItems","itemIndex","findIndex","splice","Consumer","oidcUser","sortedItems","noScrollX","logo","Dashboard","ItemSummarySlot","dragTarget","createRef","isDragging","isAdding","onDragStart","onDragEnd","onAdd","stopPropagation","dataTransfer","setData","requestAnimationFrame","current","classList","remove","draggable","ref","left","SortingBar","pendingQuery","currentQuery","currentPage","totalPages","onToPage","onNextPage","onPrevPage","onLoadingStart","onLoadingStop","GetItemPageCount","GetItems","nameOnlyQuery","pageNums","disabled","GeneralSearch","Weapon","Exotic","configuration","client_id","response_type","scope","automaticSilentRenew","loadUserInfo","redirect_uri","post_logout_redirect_uri","silent_redirect_uri","Header","boxShadow","to","profile","logout","login","AddItemListSlot","onAddItemListStart","onAddItemListStop","onAddItemList","paddingTop","paddingBottom","CustomLink","useHistory","rest","ItemListSlot","isMouseHover","isDragHover","isEditing","newName","onMouseEnter","onMouseLeave","onDragEnter","onDragOver","onDragLeave","onDrop","onEditNameStart","onEditNameStop","onEditName","onDeleteList","getData","Sidebar","refreshItemLists","onAddItem","onAddList","GetItemLists","AddListItem","UpdateListName","list","CreateList","DeleteList","MyListComponent","useParams","library","fas","App","callbackComponentOverride","authenticating","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.e7829695.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nexport type PriceProps = {\r\n    price: number;\r\n    priceColor: string;\r\n}\r\n\r\nexport type PriceState = {\r\n\r\n}\r\n\r\nexport default class Price extends React.Component<PriceProps, PriceState> {\r\n\r\n    static defaultProps: PriceProps = {\r\n        price: 0,\r\n        priceColor: \"text-gray-200\"\r\n    }\r\n\r\n    constructor(props: PriceProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { price, priceColor } = this.props;\r\n        const isNegative = price < 0;\r\n        const absPrice = Math.abs(price);\r\n\r\n        const gold = Math.floor(absPrice / 10000);\r\n        const silver = Math.floor(absPrice % 10000 / 100);\r\n        const copper = Math.floor(absPrice % 10000 % 100);\r\n\r\n        return (\r\n            <div className=\"flex flex-row\">\r\n                <div id=\"gold\" className=\"mr-1 flex flex-row items-center\">\r\n                    <FontAwesomeIcon icon=\"minus\" className={`${isNegative ? \"\" : \"hidden\"} ${priceColor} mr-1`} style={{fontSize: \"0.5rem\"}} />\r\n                    <img src=\"https://wiki.guildwars2.com/images/d/d1/Gold_coin.png\" alt=\"Gold Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{gold}</span>\r\n                </div>\r\n                <div id=\"silver\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/3/3c/Silver_coin.png\" alt=\"Silver Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{silver}</span>\r\n                </div>\r\n                <div id=\"copper\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/e/eb/Copper_coin.png\" alt=\"Copper Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{copper}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export enum ItemField {\r\n    Name,\r\n    Buys,\r\n    Sells,\r\n    Appeal,\r\n    Margin,\r\n    Sold,\r\n    Bought\r\n}\r\n\r\nexport enum ItemFieldSort {\r\n    Ascending,\r\n    Descending  \r\n}","export enum ItemRarity {\r\n    None = 0,\r\n    Junk = 1,\r\n    Basic = 2,\r\n    Fine = 4,\r\n    Masterwork = 8,\r\n    Rare = 16,\r\n    Exotic = 32,\r\n    Ascended = 64,\r\n    Legendary = 128,\r\n    All = 255\r\n}","export enum ItemType {\r\n    None = 0,\r\n    Armor = 1,\r\n    Back = 2,\r\n    Bag = 4,\r\n    Consumable = 8,\r\n    Container = 16,\r\n    CraftingMaterial = 32,\r\n    Gathering = 64,\r\n    Gizmo = 128,\r\n    Key = 256,\r\n    MiniPet = 512,\r\n    Tool = 1024,\r\n    Trait = 2048,\r\n    Trinket = 4096,\r\n    Trophy = 8192,\r\n    UpgradeComponent = 16384,\r\n    Weapon = 32768,\r\n    All = 65535\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemComparisonSlotProps = {\r\n    item: PricedItem;\r\n    deleteItem(itemId: number): Promise<void>;\r\n}\r\n\r\nexport type ItemComparisonSlotState = {\r\n    amount: number;\r\n}\r\n\r\nexport default class ItemComparisonSlot extends React.Component<ItemComparisonSlotProps, ItemComparisonSlotState> {\r\n    constructor(props: ItemComparisonSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            amount: 1\r\n        };\r\n\r\n        //this.getNetProfit = this.getNetProfit.bind(this);\r\n    }\r\n\r\n    /*\r\n    getNetProfit(): number {\r\n        const { item, amount } = this.state;\r\n\r\n        if (item == null)\r\n            return 0;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const totalFees = item.Fee * amount;\r\n        return revenue - expenditure - totalFees;\r\n    }\r\n    */\r\n    \r\n    render() {\r\n        const { item, deleteItem } = this.props;\r\n        const { amount } = this.state;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const fee = Math.round(item.SellPrice * 0.15);\r\n        const totalFees = fee * amount;\r\n        const netProfit = revenue - expenditure - totalFees;\r\n\r\n        // TODO: Amount is not sorting with items\r\n\r\n        return (\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-2/8 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <span className=\"italic text-gray-200\">{item.Name}</span>\r\n                </div>\r\n                <div className=\"flex flex-col xl:flex-row w-5/12 items-center\">\r\n                    <div className=\"flex flex-row xl:mr-4\">\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Amount</label>\r\n                            <input type=\"number\" className=\"w-16 px-1 text-sm bg-gray-600 text-gray-200\"\r\n                                defaultValue={1}\r\n                                onChange={event => {\r\n                                    const value: number = parseInt(event.target.value);\r\n                                    console.log(value);\r\n                                    if (value != null && !isNaN(value))\r\n                                        this.setState({amount: value});\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Net Profit</label>\r\n                            <Price price={netProfit} priceColor={`${ netProfit < 0 ? \"text-red-500\" : \"text-green-500\" }`} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-row\">\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Buys</label>\r\n                            <Price price={expenditure} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Sells</label>\r\n                            <Price price={revenue} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Fees</label>\r\n                            <Price price={totalFees} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-2/8\">\r\n                    <div className=\"flex flex-col xl:flex-row justify-evenly w-full h-full\">\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 font-bold text-gray-500\">Appeal</label>\r\n                            <span className=\"text-gray-200\">{item.Appeal.toFixed(2)}</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Margin</label>\r\n                            <span className={item.Margin < 15 ? \"text-red-500\" : \"text-green-500\"}>{item.Margin.toFixed(2)}%</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Sold</label>\r\n                            <span className=\"text-gray-200\">{item.Sold.toFixed(2)}</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Bought</label>\r\n                            <span className=\"text-gray-200\">{item.Bought.toFixed(2)}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                    <button className=\"transition duration-150 ease-in-out px-3 py-1 rounded shadow-lg bg-red-700 text-red-300 hover:bg-red-800 hover:text-red-200\"\r\n                        onClick={() => deleteItem(item.Id)}>\r\n                        <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        /*\r\n        return (\r\n            <tr className=\"bg-gray-700\">\r\n                <td className=\"\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <span className=\"italic\">{item.Name}</span>\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.BuyPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.SellPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.Fee} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.AppealValue}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.Margin}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.TransactionRate}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n        */\r\n    }\r\n}","import { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport class ItemQuery {\r\n    public name: string;\r\n    public type: ItemType;\r\n    public rarity: ItemRarity;\r\n    public minLevel: number;\r\n    public maxLevel: number;\r\n    public minBuyPrice: number;\r\n    public maxBuyPrice: number;\r\n    public minSellPrice: number;\r\n    public maxSellPrice: number;\r\n    public sortBy: ItemField;\r\n    public sortDirection: ItemFieldSort;\r\n\r\n    constructor(options?: ItemQueryOptions) {\r\n        this.name = options?.name ?? \"\";\r\n        this.type = options?.type ?? ItemType.All;\r\n        this.rarity = options?.rarity ?? ItemRarity.All;\r\n        this.minLevel = options?.minLevel ?? 0;\r\n        this.maxLevel = options?.maxLevel ?? 80;\r\n        this.minBuyPrice = options?.minBuyPrice ?? 0;\r\n        this.maxBuyPrice = options?.maxBuyPrice ?? 100000000;\r\n        this.minSellPrice = options?.minSellPrice ?? 0;\r\n        this.maxSellPrice = options?.maxSellPrice ?? 100000000;\r\n        this.sortBy = options?.sortBy ?? ItemField.Appeal;\r\n        this.sortDirection = options?.sortDirection ?? ItemFieldSort.Descending;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            name: this.name,\r\n            type: this.type.valueOf().toString(),\r\n            rarity: this.rarity.valueOf().toString(),\r\n            minLevel: this.minLevel.toString(),\r\n            maxLevel: this.maxLevel.toString(),\r\n            minBuyPrice: this.minBuyPrice.toString(),\r\n            maxBuyPrice: this.maxBuyPrice.toString(),\r\n            minSellPrice: this.minSellPrice.toString(),\r\n            maxSellPrice: this.maxSellPrice.toString(),\r\n            sortBy: this.sortBy.valueOf().toString(),\r\n            sortDirection: this.sortDirection.valueOf().toString()\r\n        };\r\n    }\r\n}\r\n\r\nexport interface ItemQueryOptions {\r\n    name?: string;\r\n    type?: ItemType;\r\n    rarity?: ItemRarity;\r\n    minLevel?: number;\r\n    maxLevel?: number;\r\n    minBuyPrice?: number;\r\n    maxBuyPrice?: number;\r\n    minSellPrice?: number;\r\n    maxSellPrice?: number;\r\n    sortBy?: ItemField;\r\n    sortDirection?: ItemFieldSort;\r\n}","export enum HistoryTimespan {\r\n    OneHour,\r\n    SixHours,\r\n    TwelveHours,\r\n    OneDay,\r\n    ThreeDays,\r\n    OneWeek\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\n\r\nexport type RarityMultiSelectProps = {\r\n    rarity: ItemRarity;\r\n    onChange(rarity: ItemRarity, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type RarityMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class RarityMultiSelect extends React.Component<RarityMultiSelectProps, RarityMultiSelectState> {\r\n    constructor(props: RarityMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleRarity = this.toggleRarity.bind(this);\r\n        this.checkRarity = this.checkRarity.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(rarity: ItemRarity): boolean {\r\n        const rarityNum = rarity as number;\r\n        return (rarityNum !== 0) && ((rarityNum & (rarityNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleRarity(otherRarity: ItemRarity) {\r\n        const { rarity, onChange } = this.props;\r\n        let newRarity: ItemRarity;\r\n        switch (otherRarity) {\r\n        case ItemRarity.None:\r\n        case ItemRarity.All:\r\n            newRarity = otherRarity;\r\n            break;\r\n        default:\r\n            newRarity = rarity ^ otherRarity;\r\n            break;\r\n        }\r\n\r\n        onChange(newRarity, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkRarity(otherRarity: ItemRarity): boolean {\r\n        const { rarity } = this.props;\r\n        if (rarity !== ItemRarity.All && otherRarity === ItemRarity.All)\r\n            return false;\r\n        return (rarity & otherRarity) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { rarity } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (rarity === ItemRarity.None)\r\n            selectedText = ItemRarity[ItemRarity.None];\r\n        else if (rarity === ItemRarity.All)\r\n            selectedText = ItemRarity[ItemRarity.All];\r\n        else if (RarityMultiSelect.isPowerOf2(rarity))\r\n            selectedText = ItemRarity[rarity];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 flex items-center justify-between rounded-r text-sm bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"6.9rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemRarity).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemRarity: ItemRarity = ItemRarity[value as keyof typeof ItemRarity];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleRarity(itemRarity)}>\r\n                                    {(this.checkRarity(itemRarity) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkRarity(itemRarity) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemRarity[itemRarity]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type TypeMultiSelectProps = {\r\n    type: ItemType;\r\n    onChange(type: ItemType, callback?: (() => void) | undefined): void;\r\n} \r\n\r\nexport type TypeMultiSelectState = {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class TypeMultiSelect extends React.Component<TypeMultiSelectProps, TypeMultiSelectState> {\r\n    constructor(props: TypeMultiSelectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.toggleOpen = this.toggleOpen.bind(this);\r\n        this.toggleType = this.toggleType.bind(this);\r\n        this.checkType = this.checkType.bind(this);\r\n    }\r\n\r\n    private static isPowerOf2(type: ItemType): boolean {\r\n        const typeNum = type as number;\r\n        return (typeNum !== 0) && ((typeNum & (typeNum - 1)) === 0);\r\n    }\r\n\r\n    private toggleOpen() {\r\n        const { isOpen } = this.state;\r\n        if (isOpen)\r\n            this.setState({isOpen: false});\r\n        else\r\n            this.setState({isOpen: true}, );\r\n    }\r\n\r\n    private toggleType(otherType: ItemType) {\r\n        const { type, onChange } = this.props;\r\n        let newType: ItemType;\r\n        switch (otherType) {\r\n        case ItemType.None:\r\n        case ItemType.All:\r\n            newType = otherType;\r\n            break;\r\n        default:\r\n            newType = type ^ otherType;\r\n            break;\r\n        }\r\n\r\n        onChange(newType, () => this.setState({isOpen: true}));\r\n    }\r\n\r\n    private checkType(otherType: ItemType): boolean {\r\n        const { type } = this.props;\r\n        if (type !== ItemType.All && otherType === ItemType.All)\r\n            return false;\r\n        return (type & otherType) !== 0;\r\n    }\r\n    \r\n    render() {\r\n        const { type } = this.props;\r\n        const { isOpen } = this.state;\r\n        let selectedText: string;\r\n\r\n        if (type === ItemType.None)\r\n            selectedText = ItemType[ItemType.None];\r\n        else if (type === ItemType.All)\r\n            selectedText = ItemType[ItemType.All];\r\n        else if (TypeMultiSelect.isPowerOf2(type))\r\n            selectedText = ItemType[type];\r\n        else\r\n            selectedText = \"Mixed\";\r\n\r\n        return(\r\n            <div className=\"relative\" tabIndex={0} onClick={this.toggleOpen}>\r\n                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm flex items-center justify-between rounded-r bg-gray-600 text-gray-200 hover:shadow-lg hover:bg-gray-500 hover:text-gray-100 select-none cursor-pointer\" style={{width: \"10.29rem\"}}>\r\n                    <span>{selectedText}</span>\r\n                    {(isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-up\" />\r\n                    ) ||\r\n                    (!isOpen && \r\n                        <FontAwesomeIcon className=\"text-xs\" icon=\"chevron-down\" />\r\n                    )}\r\n                </div>\r\n                {(isOpen && \r\n                    <div className=\"absolute rounded bg-gray-600 text-gray-200\" style={{top: \"2rem\", zIndex: 100}}>\r\n                        {Object.keys(ItemType).filter(item => isNaN(parseInt(item))).map((value, index) => {\r\n                            const itemType: ItemType = ItemType[value as keyof typeof ItemType];\r\n                            \r\n                            return(\r\n                                <div key={index} className=\"flex flex-row items-center px-2 py-1 text-sm rounded hover:bg-gray-700 hover:text-gray-100 select-none cursor-pointer\"\r\n                                    tabIndex={0} \r\n                                    onClick={() => this.toggleType(itemType)}>\r\n                                    {(this.checkType(itemType) && \r\n                                        <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                                    ) || \r\n                                    (!this.checkType(itemType) && \r\n                                        <div className=\"\" style={{width: \"1.38rem\"}}></div>\r\n                                    )}\r\n                                    {ItemType[itemType]}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { ItemQuery, ItemQueryOptions } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type ListSortingBarProps = {\r\n    name: string;\r\n    items: PricedItem[];\r\n    onReload(): Promise<void>;\r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type ListSortingBarState = {\r\n    query: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n}\r\n\r\nexport default class ListSortingBar extends React.Component<ListSortingBarProps, ListSortingBarState> {\r\n    constructor(props: ListSortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            query: new ItemQuery(),\r\n            filteredItems: props.items,\r\n            isFilterOpen: false\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.sortCompare = this.sortCompare.bind(this);\r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFilter();\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({query: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    onFilter() {\r\n        // TODO: Implement filtering of the items from props here\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase()) &&\r\n                   (query.type & item.Type) !== 0 &&\r\n                   (query.rarity & item.Rarity) !== 0 &&\r\n                   item.Level >= query.minLevel &&\r\n                   item.Level <= query.maxLevel &&\r\n                   item.BuyPrice >= query.minBuyPrice &&\r\n                   item.BuyPrice <= query.maxBuyPrice &&\r\n                   item.SellPrice >= query.minSellPrice &&\r\n                   item.SellPrice <= query.maxSellPrice;\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    // Does an unfiltered search.\r\n    onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { items } = this.props;\r\n        const { query } = this.state;\r\n        let filteredItems: PricedItem[] = items;\r\n        filteredItems = items.filter(item => {\r\n            return item.Name.toLowerCase().includes(query.name.toLowerCase());\r\n        });\r\n        \r\n        filteredItems = filteredItems.sort(this.sortCompare);\r\n\r\n        this.setState({filteredItems});\r\n    }\r\n\r\n    sortCompare(a: PricedItem, b: PricedItem): number {\r\n        const { query } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n\r\n        if (query.sortBy === ItemField.Name) {\r\n            if (isSortAscending)\r\n                return a.Name.toLowerCase().localeCompare(b.Name.toLowerCase());\r\n            \r\n            return b.Name.toLowerCase().localeCompare(a.Name.toLowerCase());\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Appeal) {\r\n            if (isSortAscending)\r\n                return a.Appeal - b.Appeal;\r\n\r\n            return b.Appeal - a.Appeal;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Margin) {\r\n            if (isSortAscending)\r\n                return a.Margin - b.Margin;\r\n\r\n            return b.Margin - a.Margin;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sold) {\r\n            if (isSortAscending)\r\n                return a.Sold - b.Sold;\r\n\r\n            return b.Sold - a.Sold;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Bought) {\r\n            if (isSortAscending)\r\n                return a.Bought - b.Bought;\r\n\r\n            return b.Bought - a.Bought;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Buys) {\r\n            if (isSortAscending)\r\n                return a.BuyPrice - b.BuyPrice;\r\n\r\n            return b.BuyPrice - a.BuyPrice;\r\n        }\r\n\r\n        if (query.sortBy === ItemField.Sells) {\r\n            if (isSortAscending)\r\n                return a.SellPrice - b.SellPrice;\r\n\r\n            return b.SellPrice - a.SellPrice;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.name = value;\r\n            return {query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.type = newType;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.rarity = newRarity;\r\n            return {query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            if (value > query.maxLevel)\r\n                return {query};\r\n\r\n            query.minLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            if (value < query.minLevel)\r\n                return {query};\r\n\r\n            query.maxLevel = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.minBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.maxBuyPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.minSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.maxSellPrice = value;\r\n            return {query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.query);\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    render() {\r\n        const { name, onReload, children } = this.props;\r\n        const { query, isFilterOpen, filteredItems } = this.state;\r\n        const isSortAscending: boolean = query.sortDirection === ItemFieldSort.Ascending;\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <span className=\"\">{name}</span>\r\n                    \r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={query.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-600 text-gray-200\" \r\n                            value={query.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && query.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\"}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={query.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={query.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={query.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={query.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={() => {\r\n                                                    this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            onClick={onReload}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n            </>\r\n        );\r\n    }\r\n}","export class HistoryItemQuery {\r\n    private id: number;\r\n    private newest: number;\r\n\r\n    constructor(id: number, newest?: number) {\r\n        this.id = id;\r\n        this.newest = newest ?? 0;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            id: this.id.toString(),\r\n            newest: this.newest.toString()\r\n        }\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { ItemPriceSnapshot } from \"./ItemPriceSnapshot\";\r\n\r\nexport class HistoryItemPrices {\r\n    public readonly Id: number;\r\n    public readonly History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.History = history;\r\n    }\r\n}\r\n\r\nexport type HistoryItem = {\r\n    Id: number;\r\n    ChatLink: string;\r\n    Name: string;\r\n    Icon: string;\r\n    Description: string;\r\n    Type: ItemType;\r\n    Rarity: ItemRarity;\r\n    Level: number;\r\n    History: ItemPriceSnapshot[];\r\n}\r\n\r\nexport class HistoryItemFactory {\r\n    static ToHistoryItem(item: any): HistoryItem | null {\r\n        try {\r\n            const result: HistoryItem = { \r\n                Id: item.id, \r\n                ChatLink: item.chatLink,\r\n                Name: item.name, \r\n                Icon: item.icon, \r\n                Description: item.description,\r\n                Type: parseInt(item.type),\r\n                Rarity: parseInt(item.rarity),\r\n                Level: item.level,\r\n\r\n                History: item.history,\r\n            };\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToHistoryItems(items: any): HistoryItem[] {\r\n        const arr: HistoryItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = HistoryItemFactory.ToHistoryItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type PricedItem = {\r\n    Id: number;\r\n    ChatLink: string;\r\n    Name: string;\r\n    Icon: string;\r\n    Description: string;\r\n    Type: ItemType;\r\n    Rarity: ItemRarity;\r\n    Level: number;\r\n\r\n    BuyPrice: number;\r\n    SellPrice: number;\r\n    Appeal: number;\r\n    Margin: number;\r\n    Sold: number;\r\n    Bought: number;\r\n}\r\n\r\nexport class PricedItemFactory {\r\n    static ToPricedItem(item: any): PricedItem | null {\r\n        try {\r\n            const result: PricedItem = { \r\n                Id: item.id, \r\n                ChatLink: item.chatLink,\r\n                Name: item.name, \r\n                Icon: item.icon, \r\n                Description: item.description,\r\n                Type: parseInt(item.type),\r\n                Rarity: parseInt(item.rarity),\r\n                Level: item.level,\r\n\r\n                BuyPrice: item.buyPrice,\r\n                SellPrice: item.sellPrice,\r\n                Appeal: parseFloat(parseFloat(item.appeal).toFixed(2)),\r\n                Margin: parseFloat(parseFloat(item.margin).toFixed(2)),\r\n                Sold: parseFloat(parseFloat(item.sold).toFixed(2)),\r\n                Bought: parseFloat(parseFloat(item.bought).toFixed(2))\r\n            };\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToPricedItems(items: any): PricedItem[] {\r\n        const arr: PricedItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = PricedItemFactory.ToPricedItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","const environment = {\r\n    urls: {\r\n        authority: \"https://auth.devwulfcodes.com\",\r\n        host: \"https://gw2.devwulfcodes.com\",\r\n        gw2calculator: \"https://gw2.devwulfcodes.com/api\"\r\n    }\r\n};\r\n\r\nexport default environment;","import { HistoryItem, HistoryItemFactory } from \"../dataContracts/HistoryItem\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem, PricedItemFactory } from \"../dataContracts/PricedItem\";\r\nimport environment from \"../environment\";\r\n\r\nclass ApiService {\r\n    public async GetItems(accessToken: string, query: ItemQuery, pageNumber: number): Promise<PricedItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems?\" + new URLSearchParams(query.toObject()) + `&pageNumber=${pageNumber}`;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return PricedItemFactory.ToPricedItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemPageCount(accessToken: string, query: ItemQuery): Promise<number> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems/pageCount?\" + new URLSearchParams(query.toObject());\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result;\r\n\r\n        console.log(result);\r\n        return 0;\r\n    }\r\n\r\n    public async GetHistoryItems(accessToken: string, queries: HistoryItemQuery[]): Promise<HistoryItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/historyItems\";\r\n        const response = await ApiService.Post(url, accessToken, queries);\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return HistoryItemFactory.ToHistoryItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemLists(accessToken: string) : Promise<ItemList[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getLists\";\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemLists;\r\n            const itemLists: ItemList[] = [];\r\n            items.forEach((item: any) => {\r\n                const itemList: ItemList = {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n                \r\n                itemLists.push(itemList);\r\n            });\r\n\r\n            return itemLists;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemList(accessToken: string, id: string) : Promise<number[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getList/\" + id;\r\n        const response = await ApiService.Get(url, accessToken);\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemIds;\r\n            const itemIds: number[] = [];\r\n            items.forEach((id: any) => {\r\n                const idNum = parseInt(id);\r\n                itemIds.push(idNum);\r\n            });\r\n\r\n            return itemIds;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async CreateList(accessToken: string, name: string) : Promise<string | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/createList\";\r\n        const response = await ApiService.Post(url, accessToken, {name});\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return result.listId;\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async UpdateListName(accessToken: string, id: string, name: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/updateName\";\r\n        const response = await ApiService.Post(url, accessToken, {id, name});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async AddListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/addItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteListItem(accessToken: string, id: string, itemId: number) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteItem\";\r\n        const response = await ApiService.Post(url, accessToken, {id, itemId});\r\n\r\n        if (response.ok)\r\n            return true;\r\n        \r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    public async DeleteList(accessToken: string, id: string) : Promise<boolean> {\r\n        const url = environment.urls.gw2calculator + \"/list/deleteList\";\r\n        const response = await ApiService.Post(url, accessToken, {id});\r\n\r\n        if (response.ok)\r\n            return true;\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return false;\r\n    }\r\n\r\n    private static async Get(url: string, accessToken: string) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            }\r\n        });\r\n    }\r\n\r\n    private static async Post(url: string, accessToken: string, body: any) : Promise<Response> {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            },\r\n            body: body ? JSON.stringify(body) : undefined\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import Dexie from \"dexie\";\r\nimport { HistoryItem, HistoryItemPrices } from \"../dataContracts/HistoryItem\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nclass LocalDB extends Dexie {\r\n    private historyItemPrices: Dexie.Table<HistoryItemPrices, number>;\r\n\r\n    constructor() {\r\n        super(\"GW2History\");\r\n\r\n        this.version(1).stores({\r\n            historyItemPrices: \"Id\"\r\n        });\r\n        this.open().catch(error => {\r\n            console.error(`Opening the db '${this.name}' failed: ${error}`);\r\n        });\r\n\r\n        this.historyItemPrices = this.table(\"historyItemPrices\");\r\n        this.historyItemPrices.mapToClass(HistoryItemPrices);\r\n    }\r\n\r\n    async getHistoryItemPrices(id: number, timespan: HistoryTimespan): Promise<ItemPriceSnapshot[] | null> {\r\n        const item = await this.historyItemPrices.get(id);\r\n        if (!item)\r\n            return null;\r\n        \r\n        if (timespan === HistoryTimespan.OneWeek)\r\n            return item.History;\r\n\r\n        let items: ItemPriceSnapshot[] = [];\r\n        const now = new Date();\r\n        let timeFromNow: number;\r\n        switch (timespan) {\r\n        case HistoryTimespan.OneHour:\r\n            timeFromNow = now.setDate(now.getTime() - (1 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.SixHours:\r\n            timeFromNow = now.setDate(now.getTime() - (6 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.TwelveHours:\r\n            timeFromNow = now.setDate(now.getTime() - (12 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.OneDay:\r\n            timeFromNow = now.setDate(now.getDate() - 1);\r\n            break;\r\n        case HistoryTimespan.ThreeDays:\r\n            timeFromNow = now.setDate(now.getDate() - 3);\r\n            break;\r\n        default:\r\n            timeFromNow = now.setDate(now.getDate() - 7);\r\n            break;\r\n        }\r\n        \r\n        item.History.forEach(price => {\r\n            if (price.time >= timeFromNow)\r\n                items.push(price);\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    async getNewestTime(id: number): Promise<number> {\r\n        const history = await this.getHistoryItemPrices(id, HistoryTimespan.OneWeek);\r\n        if (!history)\r\n            return 0;\r\n        \r\n        return history[0].time;\r\n    }\r\n\r\n    async setHistoryItemPrices(id: number, newHistory: ItemPriceSnapshot[]) {\r\n        const item = await this.historyItemPrices.get(id);\r\n        if (!item) {\r\n            // If no item exists, just create a new item with the given id and history\r\n            const newItem = new HistoryItemPrices(id, newHistory);\r\n            await this.historyItemPrices.add(newItem, newItem.Id);\r\n\r\n            return;\r\n        }\r\n\r\n        // Else, update the history of the current item to include the new history\r\n        // Unshift (push to front) here because history is sorted by time descending,\r\n        // and the higher the time value, the newer it is.\r\n        item.History.unshift(...newHistory);\r\n        await this.historyItemPrices.update(id, {History: item.History});\r\n    }\r\n\r\n    async deleteOldPrices(id: number) {\r\n        const item = await this.historyItemPrices.get(id);\r\n        if (!item)\r\n            return;\r\n        \r\n        const currentPrices: ItemPriceSnapshot[] = [];\r\n        const now: Date = new Date();\r\n        const weekFromNow: number = now.setDate(now.getDate() - 7);\r\n        item.History.forEach(price => {\r\n            if (price.time >= weekFromNow)\r\n                currentPrices.push(price);\r\n        });\r\n\r\n        await this.historyItemPrices.update(id, {History: currentPrices});\r\n    }\r\n}\r\n\r\nexport default new LocalDB();","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemComparisonSlot from \"../components/ItemComparisonSlot\";\r\nimport ListSortingBar from \"../components/ListSortingBar\";\r\nimport SortingBar from \"../components/SortingBar\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\nimport logo from \"../logo.svg\";\r\n\r\nexport type MyListProps = {\r\n    listId?: string;\r\n}\r\n\r\nexport type MyListState = {\r\n    id: string,\r\n    user: User | undefined;\r\n    items: PricedItem[];\r\n    timespan: HistoryTimespan;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default class MyList extends React.Component<MyListProps, MyListState> {\r\n    constructor(props: MyListProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            user: undefined,\r\n            /*[19721, 46736, 46738, 46739, 72224, 9576, 24277, 67015],*/\r\n            items: [],\r\n            timespan: HistoryTimespan.OneWeek,\r\n            isLoading: false\r\n        };\r\n\r\n        this.updateId = this.updateId.bind(this);\r\n        this.setTimespan = this.setTimespan.bind(this);\r\n        this.getItems = this.getItems.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.onReload = this.onReload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        await this.updateId();\r\n    }\r\n\r\n    async updateId() {\r\n        const { listId } = this.props;\r\n        const { id, timespan } = this.state;\r\n        if (listId && id !== listId)\r\n            this.setState({id: listId, items: [], isLoading: true}, async () => {\r\n                await this.setTimespan(timespan);\r\n            });\r\n    }\r\n\r\n    async setTimespan(timespan: HistoryTimespan) {\r\n        const items = await this.getItems(timespan);\r\n        this.setState({items, timespan, isLoading: false});\r\n    }\r\n\r\n    async getItems(timespan: HistoryTimespan): Promise<PricedItem[]> {\r\n        const { user, id } = this.state;\r\n\r\n        if (!user)\r\n            return [];\r\n\r\n        const ids = await ApiService.GetItemList(user.access_token, id);\r\n        if (!ids)\r\n            return [];\r\n\r\n        const historyItemQueries: HistoryItemQuery[] = [];\r\n        for (var i = 0; i < ids.length; i++) {\r\n            const id = ids[i];\r\n            const newest = await LocalDB.getNewestTime(id);\r\n            historyItemQueries.push(new HistoryItemQuery(id, newest));\r\n        }\r\n\r\n        const historyItems = await ApiService.GetHistoryItems(user.access_token, historyItemQueries);\r\n        if (!historyItems)\r\n            return [];\r\n\r\n        const pricedItems: PricedItem[] = [];\r\n        for (var i = 0; i < historyItems.length; i++) {\r\n            const item = historyItems[i];\r\n            await LocalDB.deleteOldPrices(item.Id);\r\n            await LocalDB.setHistoryItemPrices(item.Id, item.History);\r\n\r\n            const prices = await LocalDB.getHistoryItemPrices(item.Id, timespan);\r\n            if (!prices || prices.length <= 0) {\r\n                const pricedItem: PricedItem = {\r\n                    Id: item.Id,\r\n                    ChatLink: item.ChatLink,\r\n                    Name: item.Name,\r\n                    Icon: item.Icon,\r\n                    Description: item.Description,\r\n                    Type: item.Type,\r\n                    Rarity: item.Rarity,\r\n                    Level: item.Level,\r\n                \r\n                    BuyPrice: 0,\r\n                    SellPrice: 0,\r\n                    Appeal: 0,\r\n                    Margin: 0,\r\n                    Sold: 0,\r\n                    Bought: 0\r\n                };\r\n                pricedItems.push(pricedItem);\r\n\r\n                continue;\r\n            }\r\n            \r\n            const newestPrice = prices[0];\r\n            const buyPrice = newestPrice.buyPrice;\r\n            const sellPrice = newestPrice.sellPrice;\r\n            const margin = (sellPrice - buyPrice) / sellPrice * 100;\r\n            let sumSold: number = 0;\r\n            let sumBought: number = 0;\r\n            prices.forEach(price => {\r\n                sumSold += price.sold;\r\n                sumBought += price.bought;\r\n            });\r\n\r\n            const avgSold = sumSold / prices.length;\r\n            const avgBought = sumBought / prices.length;\r\n\r\n            const appeal = margin > 15 ? margin * avgSold * avgBought : 0;\r\n\r\n            const pricedItem: PricedItem = {\r\n                Id: item.Id,\r\n                ChatLink: item.ChatLink,\r\n                Name: item.Name,\r\n                Icon: item.Icon,\r\n                Description: item.Description,\r\n                Type: item.Type,\r\n                Rarity: item.Rarity,\r\n                Level: item.Level,\r\n            \r\n                BuyPrice: buyPrice,\r\n                SellPrice: sellPrice,\r\n                Appeal: appeal,\r\n                Margin: margin,\r\n                Sold: avgSold,\r\n                Bought: avgBought\r\n            };\r\n\r\n            pricedItems.push(pricedItem);\r\n        }\r\n\r\n        return pricedItems;\r\n    }\r\n\r\n    async deleteItem(itemId: number) {\r\n        const { id, user, items } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteListItem(user.access_token, id, itemId);\r\n        const tempItems = [...items];\r\n        if (result) {\r\n            const itemIndex = tempItems.findIndex(item => item.Id === itemId);\r\n            tempItems.splice(itemIndex, 1);\r\n            this.setState({items: tempItems});\r\n        }\r\n    }\r\n\r\n    async onReload() {\r\n        this.setState({isLoading: true, items: []}, async () => {\r\n            await this.setTimespan(this.state.timespan);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, items, timespan, isLoading } = this.state;\r\n\r\n        return (\r\n            <div className=\"main w-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n                            \r\n                        if (user) {\r\n                            return(\r\n                                <ListSortingBar items={items} name=\"Tracked Items\" onReload={this.onReload}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX style={{height: \"calc(100vh - 11rem)\"}}>\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemComparisonSlot item={value} deleteItem={this.deleteItem} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"flex justify-center\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </ListSortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(<>\r\n                            <ListSortingBar items={[]} name=\"Items\" onReload={async () => {}}>\r\n                                {sortedItems => (<></>)}\r\n                            </ListSortingBar>\r\n\r\n                            {/*\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                            */}\r\n                        </>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n                \r\n                {/*\r\n                <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                <div className=\"block\">\r\n                    <div id=\"head\" className=\"\">\r\n                        <div className=\"flex flex-row flex-wrap\">\r\n                            <div className=\"font-bold\">Name</div>\r\n                            <div className=\"font-bold\">Buys</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"body\" className=\"\">\r\n\r\n                    </div>\r\n                </div>\r\n                */}\r\n\r\n                {/*\r\n                <table className=\"table-fixed w-full\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"w-2/8\">Name</th>\r\n                            <th className=\"w-1/8\">Buys</th>\r\n                            <th className=\"w-1/8\">Sells</th>\r\n                            <th className=\"w-1/8\">Fee</th>\r\n                            <th className=\"w-1/8\">Appeal</th>\r\n                            <th className=\"w-1/8\">Margin</th>\r\n                            <th className=\"w-1/8\">Transaction Rate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                    </tbody>\r\n                </table>\r\n                */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full bg-gray-800 text-gray-200\"></div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemSummarySlotProps = {\r\n    item: PricedItem;\r\n    accessToken: string;\r\n}\r\n\r\nexport type ItemSummarySlotState = {\r\n    isDragging: boolean;\r\n    isAdding: boolean;\r\n}\r\n\r\nexport default class ItemSummarySlot extends React.Component<ItemSummarySlotProps, ItemSummarySlotState> {\r\n    private dragTarget: React.RefObject<HTMLDivElement>;\r\n    \r\n    constructor(props: ItemSummarySlotProps) {\r\n        super(props);\r\n\r\n        this.dragTarget = React.createRef();\r\n\r\n        this.state = {\r\n            isDragging: false,\r\n            isAdding: false\r\n        };\r\n\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    onDragStart(event: React.DragEvent<HTMLDivElement>) {\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData(\"text\", this.props.item.Id.toString());\r\n\r\n        requestAnimationFrame(() => {\r\n            this.dragTarget.current?.classList.add(\"hide\");\r\n        });\r\n\r\n        this.setState({isDragging: true});\r\n    }\r\n\r\n    onDragEnd(event: React.DragEvent<HTMLDivElement>) {\r\n        this.dragTarget.current?.classList.remove(\"hide\");\r\n        this.setState({isDragging: false});\r\n    }\r\n\r\n    onAdd() {\r\n        this.setState(prevState => ({isAdding: !prevState.isAdding}));\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props;\r\n        const { isDragging, isAdding } = this.state;\r\n\r\n        return(\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-3/12 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <span className=\"italic text-gray-200\">{item.Name}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Buys</label>\r\n                    <Price price={item.BuyPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sells</label>\r\n                    <Price price={item.SellPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Margin</label>\r\n                    <span className={`${item.Margin > 15 ? \"text-green-500\" : \"text-red-500\"}`}>{item.Margin}%</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sold</label>\r\n                    <span className=\"\">{item.Sold}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Bought</label>\r\n                    <span className=\"\">{item.Bought}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Appeal</label>\r\n                    <span className=\"\">{item.Appeal}</span>\r\n                </div>\r\n                <div className=\"flex flex-row w-1/12 items-center justify-center\">\r\n                    <div className=\"relative px-2 py-1 mr-3 rounded shadow-lg bg-gray-800 text-gray-300 cursor-move\"\r\n                        draggable\r\n                        onDragStart={this.onDragStart}\r\n                        onDragEnd={this.onDragEnd}>\r\n                        <FontAwesomeIcon icon=\"arrows-alt\" />\r\n                        <div ref={this.dragTarget} className={`${isDragging ? \"\" : \"hidden\"} absolute px-2 py-1 flex flex-row items-center justify-center w-32 h-12 rounded bg-gray-800`} style={{top: \"-0.25rem\", left: \"-2.75rem\"}}>\r\n                            <img src={item.Icon} alt={item.Name} className=\"mr-3 w-8 h-8 select-none\"/>\r\n                            <span className=\"italic text-sm truncate text-gray-300 select-none\">{item.Name}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"relative\">\r\n                        <button className=\"transition duration-150 ease-in-out px-3 py-2 rounded shadow-lg bg-green-700 text-green-300 hover:bg-green-800 hover:text-green-200\"\r\n                            onClick={this.onAdd}>\r\n                            <FontAwesomeIcon icon=\"plus\" />\r\n                        </button>\r\n                        <div className={`${isAdding ? \"\" : \"hidden\"} arrow-up absolute flex flex-col justify-center w-24 rounded bg-gray-900 text-gray-300`} style={{height: \"5.45rem\", top: \"3.25rem\", left: \"-1.875rem\"}}>\r\n                            <Scrollbar noScrollX>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Testasdfasdfasdf\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                                <div className=\"transition duration-150 ease-in-out px-2 py-1 text-sm rounded truncate hover:shadow-lg hover:bg-gray-600 select-none cursor-pointer\"\r\n                                    tabIndex={0}>\r\n                                    Test\r\n                                </div>\r\n                            </Scrollbar>\r\n                        </div>\r\n                    </div>\r\n                    */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport RarityMultiSelect from \"./RarityMultiSelect\";\r\nimport TypeMultiSelect from \"./TypeMultiSelect\";\r\n\r\nexport type SortingBarProps = {\r\n    name: string;\r\n    onLoadingStart(): void;\r\n    onLoadingStop(): void;\r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type SortingBarState = {\r\n    user: User | undefined;\r\n    pendingQuery: ItemQuery;\r\n    currentQuery: ItemQuery;\r\n    filteredItems: PricedItem[];\r\n    isFilterOpen: boolean;\r\n    currentPage: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport default class SortingBar extends React.Component<SortingBarProps, SortingBarState> {\r\n    constructor(props: SortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            pendingQuery: new ItemQuery(),\r\n            currentQuery: new ItemQuery(),\r\n            filteredItems: [],\r\n            isFilterOpen: false,\r\n            currentPage: 1,\r\n            totalPages: 1\r\n        };\r\n\r\n        this.resetQueryValues = this.resetQueryValues.bind(this);\r\n        this.toggleFilter = this.toggleFilter.bind(this);\r\n        this.onFilterOpen = this.onFilterOpen.bind(this);\r\n        this.onFilterClose = this.onFilterClose.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onToPage = this.onToPage.bind(this);\r\n        this.onNextPage = this.onNextPage.bind(this);\r\n        this.onPrevPage = this.onPrevPage.bind(this);\r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onRarityChange = this.onRarityChange.bind(this);\r\n        this.onMinLevelChange = this.onMinLevelChange.bind(this);\r\n        this.onMaxLevelChange = this.onMaxLevelChange.bind(this);\r\n        this.onMinBuyPriceChange = this.onMinBuyPriceChange.bind(this);\r\n        this.onMaxBuyPriceChange = this.onMaxBuyPriceChange.bind(this);\r\n        this.onMinSellPriceChange = this.onMinSellPriceChange.bind(this);\r\n        this.onMaxSellPriceChange = this.onMaxSellPriceChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n    }\r\n\r\n    resetQueryValues() {\r\n        this.setState({pendingQuery: new ItemQuery()});\r\n    }\r\n\r\n    toggleFilter() {\r\n        const { isFilterOpen } = this.state;\r\n        if (isFilterOpen)\r\n            this.onFilterClose();\r\n        else\r\n            this.onFilterOpen();\r\n    }\r\n\r\n    onFilterOpen() {\r\n        this.setState({isFilterOpen: true});\r\n    }\r\n\r\n    onFilterClose() {\r\n        this.setState({isFilterOpen: false});\r\n    }\r\n\r\n    async onFilter() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        const totalPages = await ApiService.GetItemPageCount(user.access_token, pendingQuery);\r\n        if (totalPages <= 0)\r\n            return;       \r\n\r\n        onLoadingStart(); \r\n    \r\n        const items = await ApiService.GetItems(user.access_token, pendingQuery, 1) ?? [];\r\n        this.setState({filteredItems: items, currentQuery: pendingQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n    }\r\n\r\n    async onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, pendingQuery } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        const totalPages = await ApiService.GetItemPageCount(user.access_token, pendingQuery);\r\n        if (totalPages <= 0)\r\n            return;  \r\n\r\n        onLoadingStart();\r\n        \r\n        const nameOnlyQuery = new ItemQuery({name: pendingQuery.name});\r\n        const items = await ApiService.GetItems(user.access_token, nameOnlyQuery, 1) ?? [];\r\n        this.setState({filteredItems: items, currentQuery: nameOnlyQuery, currentPage: 1, totalPages: totalPages}, onLoadingStop);\r\n    }\r\n\r\n    async onToPage(pageNumber: number) {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (pageNumber <= 0 || pageNumber > totalPages)\r\n            return;\r\n        \r\n        onLoadingStart();\r\n\r\n        const items = await ApiService.GetItems(user.access_token, currentQuery, pageNumber) ?? [];\r\n        this.setState({filteredItems: items, currentPage: pageNumber}, onLoadingStop);\r\n    }\r\n\r\n    async onNextPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage, totalPages } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage >= totalPages)\r\n            return;\r\n        \r\n        onLoadingStart();\r\n\r\n        const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage + 1) ?? [];\r\n        this.setState({filteredItems: items, currentPage: currentPage + 1}, onLoadingStop);\r\n    }\r\n\r\n    async onPrevPage() {\r\n        const { onLoadingStart, onLoadingStop } = this.props;\r\n        const { user, currentQuery, currentPage } = this.state;\r\n\r\n        if (!user)\r\n            return;\r\n\r\n        if (currentPage <= 1)\r\n            return;\r\n        \r\n        onLoadingStart();\r\n        \r\n        const items = await ApiService.GetItems(user.access_token, currentQuery, currentPage - 1) ?? [];\r\n        this.setState({filteredItems: items, currentPage: currentPage - 1}, onLoadingStop);\r\n    }\r\n\r\n    onNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.name = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n    \r\n    onTypeChange(newType: ItemType, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.type = newType;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n    \r\n    onRarityChange(newRarity: ItemRarity, callback?: (() => void) | undefined) {\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.rarity = newRarity;\r\n            return {pendingQuery: query};\r\n        }, callback);\r\n    }\r\n\r\n    onMinLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            if (value > query.maxLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.minLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxLevelChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        if (value > 80)\r\n            value = 80;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            if (value < query.minLevel)\r\n                return {pendingQuery: query};\r\n\r\n            query.maxLevel = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.minBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxBuyPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.maxBuyPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMinSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.minSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onMaxSellPriceChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value = parseInt(event.target.value ?? \"0\");\r\n        if (value < 0)\r\n            value = 0;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.maxSellPrice = value;\r\n            return {pendingQuery: query};\r\n        });\r\n    }\r\n\r\n    onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.sortBy = parseInt(value) as ItemField;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    onSortDirection() {\r\n        this.setState(prevState => {\r\n            const query = Object.assign({}, prevState.pendingQuery);\r\n            query.sortDirection = query.sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n            return {pendingQuery: query};\r\n        }, this.onFilter);\r\n    }\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        const { pendingQuery, filteredItems, isFilterOpen, currentPage, totalPages } = this.state;\r\n\r\n        const isSortAscending: boolean = pendingQuery.sortDirection === ItemFieldSort.Ascending;\r\n        const pageNums: number[] = [];\r\n        \r\n        for (var i = currentPage < 5 ? 1 : currentPage - 4; \r\n            i <= ((currentPage + 4) <= totalPages ? currentPage + 4 : totalPages); \r\n            i++) {\r\n            pageNums.push(i);\r\n        }\r\n\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <AuthenticationContext.Consumer>\r\n                        {props => {\r\n                            if (props.oidcUser != null && !this.state.user)\r\n                                this.setState({user: props.oidcUser}, this.onFilter);\r\n\r\n                            return(\r\n                                <></>\r\n                            );\r\n                        }}\r\n                    </AuthenticationContext.Consumer>\r\n                    <span className=\"\">{name}</span>\r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={pendingQuery.name}\r\n                                onChange={this.onNameChange} />\r\n                            <button className=\"transition duration-150 ease-in-out flex items-center px-2 rounded-r bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-700 text-gray-300\" \r\n                            value={pendingQuery.sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-4 rounded-r border-l border-gray-800 bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && pendingQuery.sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n                        <div className=\"relative\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.20rem 0.5rem\"}}\r\n                                onClick={this.toggleFilter}>\r\n                                <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Filter</span>\r\n                            </button>\r\n                            {(isFilterOpen && \r\n                                <div className=\"absolute flex flex-col px-3 py-3 w-64 filter-arrow-up rounded shadow-lg bg-gray-900\" style={{height: \"21.7rem\", top: \"2.75rem\", right: \"0rem\"}}>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Name</label>\r\n                                        <input type=\"text\" className=\"w-full px-2 rounded-r bg-gray-600 text-gray-200\"\r\n                                            value={pendingQuery.name}\r\n                                            onChange={this.onNameChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Type</label>\r\n                                        <TypeMultiSelect type={pendingQuery.type} onChange={this.onTypeChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-row\">\r\n                                        <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Rarity</label>\r\n                                        <RarityMultiSelect rarity={pendingQuery.rarity} onChange={this.onRarityChange} />\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Level</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minLevel}\r\n                                                    onChange={this.onMinLevelChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxLevel}\r\n                                                    onChange={this.onMaxLevelChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Buy Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minBuyPrice}\r\n                                                    onChange={this.onMinBuyPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxBuyPrice}\r\n                                                    onChange={this.onMaxBuyPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4 flex flex-col\">\r\n                                        <span className=\"mb-1 text-sm\">Sell Price</span>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <div className=\"mr-1 flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Min</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.minSellPrice}\r\n                                                    onChange={this.onMinSellPriceChange} />\r\n                                            </div>\r\n                                            <div className=\"flex flex-row\">\r\n                                                <label htmlFor=\"\" className=\"px-2 py-1 rounded-l text-xs bg-gray-700 text-gray-300\">Max</label>\r\n                                                <input type=\"number\" className=\"w-full px-2 rounded-r text-sm bg-gray-600 text-gray-200\"\r\n                                                    value={pendingQuery.maxSellPrice}\r\n                                                    onChange={this.onMaxSellPriceChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        <div className=\"\">\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-red-700 text-red-300 hover:shadow-lg hover:bg-red-800 hover:text-red-200\"\r\n                                                onClick={this.resetQueryValues}>\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row-reverse\">\r\n                                            <button className=\"transition duration-150 ease-in-out ml-2 px-2 py-1 rounded text-sm bg-indigo-700 text-indigo-300 hover:shadow-lg hover:bg-indigo-800 hover:text-indigo-200\"\r\n                                                onClick={() => {\r\n                                                    this.onFilter(); \r\n                                                    this.onFilterClose();\r\n                                                }}>\r\n                                                Filter\r\n                                            </button>\r\n                                            <button className=\"transition duration-150 ease-in-out px-2 py-1 rounded text-sm bg-gray-700 text-gray-300 hover:shadow-lg hover:bg-gray-800 hover:text-gray-200\"\r\n                                                onClick={this.onFilterClose}>\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button className=\"transition duration-150 ease-in-out flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\" style={{padding: \"0.3rem 0.5rem\"}}\r\n                            onClick={this.onFilter}>\r\n                            <FontAwesomeIcon icon=\"redo-alt\" className=\"text-sm\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(filteredItems): null}\r\n                {totalPages <= 0 && (\r\n                    <div className=\"flex flex-row-reverse w-full\">\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onPrevPage}>\r\n                                <FontAwesomeIcon icon=\"arrow-left\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"\">Prev</span>\r\n                            </button>\r\n                            {pageNums.map((value, index) => (\r\n                                <button key={index} disabled={currentPage === value} \r\n                                    className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                    onClick={() => this.onToPage(value)}>\r\n                                    {value}\r\n                                </button>\r\n                            ))}\r\n                            <button className=\"transition duration-150 ease-in-out mr-4 flex items-center rounded bg-gray-700 text-gray-300 hover:bg-gray-800 hover:text-gray-200 hover:shadow-lg\"\r\n                                onClick={this.onNextPage}>\r\n                                <span className=\"\">Next</span>\r\n                                <FontAwesomeIcon icon=\"arrow-right\" className=\"mr-1 text-xs\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { faDivide } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemSummarySlot from \"../components/ItemSummarySlot\";\r\nimport SortingBar from \"../components/SortingBar\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport logo from \"../logo.svg\";\r\n\r\nexport type GeneralSearchProps = {\r\n\r\n}\r\n\r\nexport type GeneralSearchState = {\r\n    user: User | undefined;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default class GeneralSearch extends React.Component<GeneralSearchProps, GeneralSearchState> {\r\n    constructor(props: GeneralSearchProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            isLoading: false\r\n        };\r\n\r\n        this.onLoadingStart = this.onLoadingStart.bind(this);\r\n        this.onLoadingStop = this.onLoadingStop.bind(this);\r\n    }\r\n\r\n    onLoadingStart() {\r\n        this.setState({isLoading: true});\r\n    }\r\n\r\n    onLoadingStop() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const { user, isLoading } = this.state;\r\n\r\n        const item: PricedItem = {\r\n            Id: 27328,\r\n            ChatLink: \"\",\r\n            Name: \"Ebonblade\",\r\n            Description: \"\",\r\n            Icon: \"https://render.guildwars2.com/file/F7B7ECFA56A55434245E4D311516A2C7771204B4/780577.png\",\r\n            Type: ItemType.Weapon,\r\n            Rarity: ItemRarity.Exotic,\r\n            Level: 0,\r\n            Sold: 0,\r\n            Bought: 0,\r\n            Margin: 0,\r\n            Appeal: 0,\r\n            BuyPrice: 0,\r\n            SellPrice: 0\r\n        };\r\n\r\n        return(\r\n            <div className=\"main w-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n\r\n                        if (user) {\r\n                            return(\r\n                                <SortingBar name=\"Results\" onLoadingStart={this.onLoadingStart} onLoadingStop={this.onLoadingStop}>\r\n                                    {sortedItems => (\r\n                                        <>\r\n                                            {(sortedItems.length > 0 && \r\n                                                <Scrollbar noScrollX style={{height: \"calc(100vh - 11rem)\"}}>\r\n                                                    {sortedItems.map((value, index) => (\r\n                                                        <div key={index} className=\"mb-2\">\r\n                                                            <ItemSummarySlot item={value} accessToken={user.access_token} />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Scrollbar>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && !isLoading &&\r\n                                                <div className=\"\">\r\n                                                    No items found.\r\n                                                </div>\r\n                                            ) || \r\n                                            (sortedItems.length <= 0 && isLoading &&\r\n                                                <div className=\"flex flex-row items-center justify-center\">\r\n                                                    <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                                                    <span className=\"\">Loading items...</span>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </SortingBar>\r\n                            );\r\n                        }\r\n\r\n                        return(\r\n                            <div className=\"\">\r\n                                Not logged in.\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import environment from \"./environment\";\r\n\r\nconst configuration = {\r\n    client_id: \"gw2_calculator_app\",\r\n    response_type: \"id_token token\",\r\n    scope: \"openid email roles profile gw2calculator\",\r\n    automaticSilentRenew: true,\r\n    loadUserInfo: true,\r\n    authority: environment.urls.authority,\r\n    redirect_uri: `${environment.urls.host}/authentication/callback`,\r\n    post_logout_redirect_uri: `${environment.urls.host}/`,\r\n    silent_redirect_uri: `${environment.urls.host}/authentication/silent_callback`\r\n};\r\n\r\nexport default configuration;","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return(\r\n            <header className=\"\" style={{boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.2)\", zIndex: 100}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        return(\r\n                            <div className=\"flex justify-between items-center px-4 bg-indigo-700 text-indigo-200\">\r\n                                <div className=\"flex flex-row items-center\">\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-6 text-lg font-bold hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        GW2 Calculator\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/search\">\r\n                                        Search\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/list\">\r\n                                        My List\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                {props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <span className=\"mr-4\">Hello, {props.oidcUser.profile.name}!</span>\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.logout()}>\r\n                                            Logout\r\n                                        </button>\r\n                                    </div>\r\n                                ) ||\r\n                                (!props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.login()}>\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </header>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type AddItemListSlotProps = {\r\n    onAddItemList(name: string): Promise<void>;\r\n}\r\n\r\nexport type AddItemListSlotState = {\r\n    isAdding: boolean;\r\n    name: string;\r\n}\r\n\r\nexport default class AddItemListSlot extends React.Component<AddItemListSlotProps, AddItemListSlotState> {\r\n    constructor(props: AddItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdding: false,\r\n            name: \"\"\r\n        };\r\n\r\n        this.onAddItemListStart = this.onAddItemListStart.bind(this);\r\n        this.onAddItemListStop = this.onAddItemListStop.bind(this);\r\n        this.onAddItemList = this.onAddItemList.bind(this);\r\n    }\r\n\r\n    onAddItemListStart(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: true});\r\n    }\r\n\r\n    onAddItemListStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    async onAddItemList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { onAddItemList } = this.props;\r\n        const { name } = this.state;\r\n        if (!name)\r\n            return;\r\n        \r\n        await onAddItemList(name);\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    render() {\r\n        const { isAdding, name } = this.state;\r\n\r\n        return(\r\n            <div className=\"transition duration-150 ease-in-out flex flex-row items-center justify-between mx-2 border-2 border-dashed rounded-lg border-indigo-700 bg-opacity-0 bg-indigo-700 text-indigo-300 hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer\"\r\n                tabIndex={0}\r\n                onClick={this.onAddItemListStart}>\r\n                {(!isAdding && \r\n                    <div className=\"px-4 py-3\">\r\n                        <div className=\"pointer-events-none select-none\">\r\n                            <FontAwesomeIcon icon=\"plus\" className=\"mr-3\" />\r\n                            Add New List...\r\n                        </div>\r\n                    </div>\r\n                ) || \r\n                (isAdding && \r\n                    <div className=\"px-2 py-3 flex flex-row\">\r\n                        <input type=\"text\" className=\"px-2 mr-1 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={name} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({name: event.target.value})} />\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onAddItemList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onAddItemListStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport interface CustomLinkProps extends React.HTMLAttributes<HTMLElement> {\r\n    to: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function CustomLink(props: CustomLinkProps) {\r\n    const { push } = useHistory();\r\n    const { to, children, ...rest } = props;\r\n    return(\r\n        <div onClick={() => push(to)} {...rest}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\nexport type ItemListSlotProps = {\r\n    itemList: ItemList;\r\n    onDrop(id: string, itemId: number): Promise<void>;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteList(id: string): Promise<void>;\r\n}\r\n\r\nexport type ItemListSlotState = {\r\n    isMouseHover: boolean;\r\n    isDragHover: boolean;\r\n    isEditing: boolean;\r\n    newName: string;\r\n}\r\n\r\nexport default class ItemListSlot extends React.Component<ItemListSlotProps, ItemListSlotState> {\r\n    constructor(props: ItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isMouseHover: false,\r\n            isDragHover: false,\r\n            isEditing: false,\r\n            newName: props.itemList.name\r\n        };\r\n\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.onDragEnter = this.onDragEnter.bind(this);\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDragLeave = this.onDragLeave.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n\r\n        this.onEditNameStart = this.onEditNameStart.bind(this);\r\n        this.onEditNameStop = this.onEditNameStop.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.setState({isMouseHover: true});\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.setState({isMouseHover: false});\r\n    }\r\n\r\n    async onDragEnter(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: true});\r\n    }\r\n\r\n    onDragOver(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    async onDragLeave(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    async onDrop(event: React.DragEvent<HTMLDivElement>) {\r\n        event.preventDefault();\r\n        const { itemList, onDrop } = this.props;\r\n        const itemId = parseInt(event.dataTransfer.getData(\"text\"));\r\n        await onDrop(itemList.id, itemId);\r\n        this.setState({isDragHover: false});\r\n    }\r\n\r\n    onEditNameStart(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: true, newName: this.props.itemList.name});\r\n    }\r\n\r\n    onEditNameStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onEditName(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onEditName } = this.props;\r\n        const { newName } = this.state;\r\n        if (!newName)\r\n            return;\r\n\r\n        await onEditName(itemList.id, newName);\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onDeleteList(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { itemList, onDeleteList } = this.props;\r\n        await onDeleteList(itemList.id);\r\n    }\r\n\r\n    render() {\r\n        const { itemList } = this.props;\r\n        const { isMouseHover, isDragHover, isEditing, newName } = this.state;\r\n\r\n        return(\r\n            <CustomLink className={`transition duration-150 ease-in-out flex flex-row items-center justify-between px-4 py-3 bg-opacity-25 ${isDragHover ? \"bg-green-700 text-green-300\" : \"bg-indigo-700 text-indigo-300\"} hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer`}\r\n                to={`/list/${itemList.id}`}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onMouseLeave={this.onMouseLeave}\r\n                onDragEnter={this.onDragEnter}\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={this.onDrop}>\r\n                {(!isEditing && \r\n                    <>\r\n                        <span className=\"truncate pointer-events-none select-none\">{itemList.name}</span>\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditNameStart}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"pencil-alt\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onDeleteList}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) || \r\n                (isEditing && \r\n                    <>\r\n                        <input type=\"text\" className=\"px-2 w-2/3 rounded bg-indigo-400 text-indigo-900\" \r\n                            value={newName} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({newName: event.target.value})} />\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditName}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onEditNameStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </CustomLink>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport AddItemListSlot from \"./AddItemListSlot\";\r\nimport ItemListSlot from \"./ItemListSlot\";\r\n\r\nexport type SidebarProps = {\r\n\r\n}\r\n\r\nexport type SidebarState = {\r\n    user: User | undefined;\r\n    itemLists: ItemList[];\r\n}\r\n\r\nexport default class Sidebar extends React.Component<SidebarProps, SidebarState> {\r\n    constructor(props: SidebarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            itemLists: []\r\n        };\r\n\r\n        this.refreshItemLists = this.refreshItemLists.bind(this);\r\n\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onAddList = this.onAddList.bind(this);\r\n        this.onDeleteList = this.onDeleteList.bind(this);\r\n    }\r\n\r\n    async refreshItemLists() {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const itemLists = await ApiService.GetItemLists(user.access_token);\r\n        if (!itemLists)\r\n            return;\r\n\r\n        this.setState({itemLists});\r\n    }\r\n\r\n    async onAddItem(id: string, itemId: number) {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        await ApiService.AddListItem(user.access_token, id, itemId);\r\n    }\r\n\r\n    async onEditName(id: string, name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.UpdateListName(user.access_token, id, name);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists[index].name = name;\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onAddList(name: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.CreateList(user.access_token, name);\r\n        if (result) {\r\n            const itemList: ItemList = {\r\n                id: result,\r\n                name: name\r\n            };\r\n            itemLists.push(itemList);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    async onDeleteList(id: string) {\r\n        const { user, itemLists } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const result = await ApiService.DeleteList(user.access_token, id);\r\n        if (result) {\r\n            const index = itemLists.findIndex(list => list.id === id);\r\n            itemLists.splice(index, 1);\r\n            this.setState({itemLists});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { itemLists, user } = this.state;\r\n\r\n        return(\r\n            <div className=\"sidebar hidden py-4 xl:flex xl:w-1/4 bg-gray-900\" style={{width: \"16rem\"}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser}, () => {\r\n                                this.refreshItemLists();\r\n                            });\r\n                        if (user) {\r\n                            return(\r\n                                <Scrollbar noScrollX>\r\n                                    {itemLists.map((itemList, index) => (\r\n                                        <div key={index} className=\"mb-2\">\r\n                                            <ItemListSlot itemList={itemList} onDrop={this.onAddItem} onEditName={this.onEditName} onDeleteList={this.onDeleteList} />\r\n                                        </div>\r\n                                    ))}\r\n                                    <div className=\"w-full flex flex-col\">\r\n                                        <AddItemListSlot onAddItemList={this.onAddList} />\r\n                                    </div>\r\n                                </Scrollbar>\r\n                            );\r\n                        }\r\n\r\n                        return(<>\r\n                            <Scrollbar noScrollX>\r\n                                <div className=\"w-full flex flex-col\">\r\n                                    <AddItemListSlot onAddItemList={this.onAddList} />\r\n                                </div>\r\n                            </Scrollbar>\r\n                        </>);\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport MyList from \"./pages/MyList\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport GeneralSearch from \"./pages/GeneralSearch\";\r\nimport { BrowserRouter, Redirect, Route, Switch, useParams } from \"react-router-dom\";\r\nimport { AuthenticationProvider, withOidcSecure } from \"@axa-fr/react-oidc-context\";\r\nimport configuration from \"./open-id-config\";\r\nimport Header from \"./components/Header\";\r\nimport { config } from \"process\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    const afterLogin = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                <span className=\"\">Logging in...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const afterLogout = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                <span className=\"\">Logging out...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    return(\r\n        <div className=\"flex flex-col\">\r\n            <BrowserRouter>\r\n                <AuthenticationProvider configuration={configuration}\r\n                    callbackComponentOverride={afterLogin}\r\n                    authenticating={afterLogout}>\r\n                    <Header />\r\n                    <Redirect path=\"/authentication/callback\" to=\"/\" />\r\n                    <div className=\"flex flex-row\" style={{height: \"calc(100vh - 4rem)\"}}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Dashboard} />\r\n                            <Route path=\"/search\" component={GeneralSearch} />\r\n                            <Route exact path=\"/list\" component={MyList} />\r\n                            <Route path=\"/list/:id\" component={MyListComponent} />\r\n                        </Switch>\r\n                        <Sidebar />\r\n                    </div>\r\n                </AuthenticationProvider>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MyListComponent() {\r\n    const { id } = useParams();\r\n\r\n    return(\r\n        <MyList listId={id} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}