{"version":3,"sources":["logo.svg","components/Price.tsx","utils/ItemField.ts","components/ItemComparisonSlot.tsx","utils/HistoryTimespan.ts","components/ListSortingBar.tsx","dataContracts/HistoryItemQuery.ts","dataContracts/HistoryItem.ts","dataContracts/PricedItem.ts","environment.ts","services/ApiService.ts","utils/ItemRarity.ts","utils/ItemType.ts","services/LocalDB.ts","pages/MyList.tsx","pages/Dashboard.tsx","components/ItemSummarySlot.tsx","dataContracts/ItemQuery.ts","components/SortingBar.tsx","pages/GeneralSearch.tsx","open-id-config.ts","components/Header.tsx","components/ItemListSlot.tsx","components/Sidebar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Price","props","state","this","price","priceColor","isNegative","absPrice","Math","abs","gold","floor","silver","copper","className","id","icon","style","fontSize","src","alt","React","Component","defaultProps","ItemField","ItemFieldSort","ItemComparisonSlot","amount","item","console","log","revenue","round","SellPrice","expenditure","BuyPrice","totalFees","netProfit","Icon","Name","htmlFor","type","defaultValue","onChange","event","value","parseInt","target","isNaN","setState","Appeal","toFixed","Margin","Sold","Bought","HistoryTimespan","ListSortingBar","sortBy","sortDirection","Descending","searchStr","onSort","bind","onSortDirection","newDirection","Ascending","name","items","children","isSortAscending","sortedItems","sort","a","b","toLowerCase","localeCompare","Buys","Sells","onSubmit","preventDefault","onClick","padding","HistoryItemQuery","newest","toString","HistoryItemPrices","history","Id","History","HistoryItemFactory","ChatLink","chatLink","Description","description","Type","Rarity","rarity","Level","level","e","arr","forEach","itemResult","ToHistoryItem","push","PricedItemFactory","buyPrice","sellPrice","parseFloat","appeal","margin","sold","bought","ToPricedItem","environment","urls","authority","host","gw2calculator","accessToken","query","pageNumber","url","URLSearchParams","toObject","fetch","method","mode","cache","headers","response","json","result","ok","ToPricedItems","ids","body","JSON","stringify","queries","ToHistoryItems","itemLists","itemList","itemIds","idNum","ItemRarity","ItemType","historyItemPrices","version","stores","open","catch","error","table","mapToClass","timespan","get","OneWeek","now","Date","OneHour","SixHours","TwelveHours","OneDay","ThreeDays","timeFromNow","setDate","getTime","getDate","time","getHistoryItemPrices","newHistory","newItem","add","unshift","update","currentPrices","weekFromNow","Dexie","MyList","user","undefined","getItems","setTimespan","listId","ApiService","GetItemList","access_token","historyItemQueries","i","length","LocalDB","getNewestTime","GetHistoryItems","historyItems","pricedItems","deleteOldPrices","setHistoryItemPrices","prices","pricedItem","newestPrice","sumSold","sumBought","avgSold","avgBought","Consumer","oidcUser","noScrollX","height","map","index","key","Dashboard","ItemSummarySlot","ItemQuery","options","minLevel","maxLevel","minBuyPrice","maxBuyPrice","minSellPrice","maxSellPrice","All","valueOf","SortingBar","updateItems","onSearch","optionValues","GetItems","GeneralSearch","configuration","client_id","response_type","scope","automaticSilentRenew","loadUserInfo","redirect_uri","post_logout_redirect_uri","silent_redirect_uri","Header","boxShadow","zIndex","to","profile","logout","login","ItemListSlot","Sidebar","refreshItemLists","GetItemLists","width","MyListComponent","useParams","library","fas","App","callbackComponentOverride","logo","authenticating","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.169cb783.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nexport type PriceProps = {\r\n    price: number;\r\n    priceColor: string;\r\n}\r\n\r\nexport type PriceState = {\r\n\r\n}\r\n\r\nexport default class Price extends React.Component<PriceProps, PriceState> {\r\n\r\n    static defaultProps: PriceProps = {\r\n        price: 0,\r\n        priceColor: \"text-gray-200\"\r\n    }\r\n\r\n    constructor(props: PriceProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { price, priceColor } = this.props;\r\n        const isNegative = price < 0;\r\n        const absPrice = Math.abs(price);\r\n\r\n        const gold = Math.floor(absPrice / 10000);\r\n        const silver = Math.floor(absPrice % 10000 / 100);\r\n        const copper = Math.floor(absPrice % 10000 % 100);\r\n\r\n        return (\r\n            <div className=\"flex flex-row\">\r\n                <div id=\"gold\" className=\"mr-1 flex flex-row items-center\">\r\n                    <FontAwesomeIcon icon=\"minus\" className={`${isNegative ? \"\" : \"hidden\"} ${priceColor} mr-1`} style={{fontSize: \"0.5rem\"}} />\r\n                    <img src=\"https://wiki.guildwars2.com/images/d/d1/Gold_coin.png\" alt=\"Gold Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{gold}</span>\r\n                </div>\r\n                <div id=\"silver\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/3/3c/Silver_coin.png\" alt=\"Silver Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{silver}</span>\r\n                </div>\r\n                <div id=\"copper\" className=\"mr-1 flex flex-row items-center\">\r\n                    <img src=\"https://wiki.guildwars2.com/images/e/eb/Copper_coin.png\" alt=\"Copper Coin\" className=\"mr-1 w-4 h-4\"/>\r\n                    <span className={`text-sm ${priceColor}`}>{copper}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export enum ItemField {\r\n    Name,\r\n    Buys,\r\n    Sells,\r\n    Appeal,\r\n    Margin,\r\n    Sold,\r\n    Bought\r\n}\r\n\r\nexport enum ItemFieldSort {\r\n    Ascending,\r\n    Descending  \r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemComparisonSlotProps = {\r\n    item: PricedItem;\r\n}\r\n\r\nexport type ItemComparisonSlotState = {\r\n    amount: number;\r\n}\r\n\r\nexport default class ItemComparisonSlot extends React.Component<ItemComparisonSlotProps, ItemComparisonSlotState> {\r\n    constructor(props: ItemComparisonSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            amount: 1\r\n        };\r\n\r\n        //this.getNetProfit = this.getNetProfit.bind(this);\r\n    }\r\n\r\n    /*\r\n    getNetProfit(): number {\r\n        const { item, amount } = this.state;\r\n\r\n        if (item == null)\r\n            return 0;\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const totalFees = item.Fee * amount;\r\n        return revenue - expenditure - totalFees;\r\n    }\r\n    */\r\n    \r\n    render() {\r\n        const { item } = this.props;\r\n        const { amount } = this.state;\r\n\r\n        console.log(item);\r\n\r\n        const revenue = Math.round(item.SellPrice * amount);\r\n        const expenditure = Math.round(item.BuyPrice * amount);\r\n        const fee = Math.round(item.SellPrice * 0.15);\r\n        const totalFees = fee * amount;\r\n        const netProfit = revenue - expenditure - totalFees;\r\n\r\n        // TODO: Amount is not sorting with items\r\n\r\n        return (\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-2/8 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <span className=\"italic text-gray-200\">{item.Name}</span>\r\n                </div>\r\n                <div className=\"flex flex-col xl:flex-row w-4/8 items-center\">\r\n                    <div className=\"flex flex-row xl:mr-4\">\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Amount</label>\r\n                            <input type=\"number\" className=\"w-16 px-1 text-sm bg-gray-600 text-gray-200\"\r\n                                defaultValue={1}\r\n                                onChange={event => {\r\n                                    const value: number = parseInt(event.target.value);\r\n                                    console.log(value);\r\n                                    if (value != null && !isNaN(value))\r\n                                        this.setState({amount: value});\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Net Profit</label>\r\n                            <Price price={netProfit} priceColor={`${ netProfit < 0 ? \"text-red-500\" : \"text-green-500\" }`} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-row\">\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Buys</label>\r\n                            <Price price={expenditure} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Sells</label>\r\n                            <Price price={revenue} />\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center\">\r\n                            <label htmlFor=\"\" className=\"text-sm mb-1 text-gray-500\">Fees</label>\r\n                            <Price price={totalFees} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-2/8\">\r\n                    <div className=\"flex flex-col xl:flex-row justify-evenly w-full h-full\">\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 font-bold text-gray-500\">Relative Appeal</label>\r\n                            <span className=\"text-gray-200\">{item.Appeal.toFixed(2)}</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Margin</label>\r\n                            <span className={item.Margin < 15 ? \"text-red-500\" : \"text-green-500\"}>{item.Margin.toFixed(2)}%</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Sold</label>\r\n                            <span className=\"text-gray-200\">{item.Sold.toFixed(2)}</span>\r\n                        </div>\r\n                        <div className=\"flex flex-row xl:flex-col items-center xl:mr-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm mr-4 xl:mr-0 xl:mb-1 text-gray-500\">Bought</label>\r\n                            <span className=\"text-gray-200\">{item.Bought.toFixed(2)}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        /*\r\n        return (\r\n            <tr className=\"bg-gray-700\">\r\n                <td className=\"\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                        <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                        <span className=\"italic\">{item.Name}</span>\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.BuyPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.SellPrice} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"flex justify-center\">\r\n                        <Price price={item.Fee} />\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.AppealValue}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.Margin}\r\n                    </div>\r\n                </td>\r\n                <td className=\"\">\r\n                    <div className=\"text-center\">\r\n                        {item.TransactionRate}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n        */\r\n    }\r\n}","export enum HistoryTimespan {\r\n    OneHour,\r\n    SixHours,\r\n    TwelveHours,\r\n    OneDay,\r\n    ThreeDays,\r\n    OneWeek\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\n\r\nexport type ListSortingBarProps = {\r\n    name: string;\r\n    items: PricedItem[];\r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type ListSortingBarState = {\r\n    sortBy: ItemField;\r\n    sortDirection: ItemFieldSort;\r\n    searchStr: string;\r\n}\r\n\r\nexport default class ListSortingBar extends React.Component<ListSortingBarProps, ListSortingBarState> {\r\n    constructor(props: ListSortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sortBy: ItemField.Appeal,\r\n            sortDirection: ItemFieldSort.Descending,\r\n            searchStr: \"\"\r\n        };\r\n\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n    }\r\n\r\n    private async onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        console.log(event.target.value);\r\n        console.log(event.target.value as keyof typeof ItemField);\r\n        const value: ItemField = parseInt(event.target.value) as ItemField;\r\n\r\n        this.setState({sortBy: value});\r\n    }\r\n\r\n    private async onSortDirection() {\r\n        const { sortDirection } = this.state;\r\n        const newDirection: ItemFieldSort = sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n\r\n        this.setState({sortDirection: newDirection});\r\n    }\r\n\r\n    render() {\r\n        const { name, items, children } = this.props;\r\n        const { sortBy, sortDirection, searchStr } = this.state;\r\n\r\n        const isSortAscending: boolean = sortDirection === ItemFieldSort.Ascending;\r\n\r\n        const compareFunc: (a: PricedItem, b: PricedItem) => number = (a, b) => {\r\n            if (sortBy === ItemField.Name) {\r\n                if (isSortAscending)\r\n                    return a.Name.toLowerCase().localeCompare(b.Name.toLowerCase());\r\n                \r\n                return b.Name.toLowerCase().localeCompare(a.Name.toLowerCase());\r\n            }\r\n\r\n            if (sortBy === ItemField.Appeal) {\r\n                if (isSortAscending)\r\n                    return a.Appeal - b.Appeal;\r\n\r\n                return b.Appeal - a.Appeal;\r\n            }\r\n\r\n            if (sortBy === ItemField.Margin) {\r\n                if (isSortAscending)\r\n                    return a.Margin - b.Margin;\r\n\r\n                return b.Margin - a.Margin;\r\n            }\r\n\r\n            if (sortBy === ItemField.Sold) {\r\n                if (isSortAscending)\r\n                    return a.Sold - b.Sold;\r\n\r\n                return b.Sold - a.Sold;\r\n            }\r\n\r\n            if (sortBy === ItemField.Bought) {\r\n                if (isSortAscending)\r\n                    return a.Bought - b.Bought;\r\n\r\n                return b.Bought - a.Bought;\r\n            }\r\n\r\n            if (sortBy === ItemField.Buys) {\r\n                if (isSortAscending)\r\n                    return a.BuyPrice - b.BuyPrice;\r\n\r\n                return b.BuyPrice - a.BuyPrice;\r\n            }\r\n\r\n            if (sortBy === ItemField.Sells) {\r\n                if (isSortAscending)\r\n                    return a.SellPrice - b.SellPrice;\r\n\r\n                return b.SellPrice - a.SellPrice;\r\n            }\r\n\r\n            return 0;\r\n        };\r\n\r\n        const sortedItems: PricedItem[] = items.sort(compareFunc);\r\n\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <span className=\"\">{name}</span>\r\n                    \r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={event => event.preventDefault()}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={searchStr}\r\n                                onChange={event => this.setState({searchStr: event.target.value})} />\r\n                            <button className=\"flex items-center px-2 rounded-r bg-gray-700 text-gray-300\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-700 text-gray-300\" \r\n                            value={sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"px-2 mr-4 rounded-r border-l border-gray-800 bg-gray-700 text-gray-300\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n                        <button className=\"flex items-center rounded bg-gray-700 text-gray-300\" style={{padding: \"0.20rem 0.5rem\"}}>\r\n                            <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                            <span className=\"text-xs\">Filter</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(sortedItems): null}\r\n            </>\r\n        );\r\n    }\r\n}","export class HistoryItemQuery {\r\n    private id: number;\r\n    private newest: number;\r\n\r\n    constructor(id: number, newest?: number) {\r\n        this.id = id;\r\n        this.newest = newest ?? 0;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            id: this.id.toString(),\r\n            newest: this.newest.toString()\r\n        }\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\nimport { ItemPriceSnapshot } from \"./ItemPriceSnapshot\";\r\n\r\nexport class HistoryItemPrices {\r\n    public readonly Id: number;\r\n    public readonly History: ItemPriceSnapshot[];\r\n\r\n    constructor(id: number, history: ItemPriceSnapshot[]) {\r\n        this.Id = id;\r\n        this.History = history;\r\n    }\r\n}\r\n\r\nexport type HistoryItem = {\r\n    Id: number;\r\n    ChatLink: string;\r\n    Name: string;\r\n    Icon: string;\r\n    Description: string;\r\n    Type: ItemType;\r\n    Rarity: ItemRarity;\r\n    Level: number;\r\n    History: ItemPriceSnapshot[];\r\n}\r\n\r\nexport class HistoryItemFactory {\r\n    static ToHistoryItem(item: any): HistoryItem | null {\r\n        try {\r\n            const result: HistoryItem = { \r\n                Id: item.id, \r\n                ChatLink: item.chatLink,\r\n                Name: item.name, \r\n                Icon: item.icon, \r\n                Description: item.description,\r\n                Type: parseInt(item.type),\r\n                Rarity: parseInt(item.rarity),\r\n                Level: item.level,\r\n\r\n                History: item.history,\r\n            };\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToHistoryItems(items: any): HistoryItem[] {\r\n        const arr: HistoryItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = HistoryItemFactory.ToHistoryItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport type PricedItem = {\r\n    Id: number;\r\n    ChatLink: string;\r\n    Name: string;\r\n    Icon: string;\r\n    Description: string;\r\n    Type: ItemType;\r\n    Rarity: ItemRarity;\r\n    Level: number;\r\n\r\n    BuyPrice: number;\r\n    SellPrice: number;\r\n    Appeal: number;\r\n    Margin: number;\r\n    Sold: number;\r\n    Bought: number;\r\n}\r\n\r\nexport class PricedItemFactory {\r\n    static ToPricedItem(item: any): PricedItem | null {\r\n        try {\r\n            const result: PricedItem = { \r\n                Id: item.id, \r\n                ChatLink: item.chatLink,\r\n                Name: item.name, \r\n                Icon: item.icon, \r\n                Description: item.description,\r\n                Type: parseInt(item.type),\r\n                Rarity: parseInt(item.rarity),\r\n                Level: item.level,\r\n\r\n                BuyPrice: item.buyPrice,\r\n                SellPrice: item.sellPrice,\r\n                Appeal: parseFloat(parseFloat(item.appeal).toFixed(2)),\r\n                Margin: parseFloat(parseFloat(item.margin).toFixed(2)),\r\n                Sold: parseFloat(parseFloat(item.sold).toFixed(2)),\r\n                Bought: parseFloat(parseFloat(item.bought).toFixed(2))\r\n            };\r\n\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static ToPricedItems(items: any): PricedItem[] {\r\n        const arr: PricedItem[] = [];\r\n        items.forEach((item: any) => {\r\n            const itemResult = PricedItemFactory.ToPricedItem(item);\r\n            if (itemResult != null)\r\n                arr.push(itemResult);\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","const environment = {\r\n    urls: {\r\n        authority: \"https://auth.devwulfcodes.com\",\r\n        host: \"https://gw2.devwulfcodes.com\",\r\n        gw2calculator: \"https://gw2.devwulfcodes.com/api\"\r\n    }\r\n};\r\n\r\nexport default environment;","import { HistoryItem, HistoryItemFactory } from \"../dataContracts/HistoryItem\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport { ItemQuery } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem, PricedItemFactory } from \"../dataContracts/PricedItem\";\r\nimport environment from \"../environment\";\r\n\r\nclass ApiService {\r\n    public async GetItems(accessToken: string, query: ItemQuery, pageNumber: number): Promise<PricedItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems?\" + new URLSearchParams(query.toObject()) + `&pageNumber=${pageNumber}`;\r\n        const response = await fetch(url, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            }\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return PricedItemFactory.ToPricedItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemsWithIds(accessToken: string, ids: number[], pageNumber: number): Promise<PricedItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/pricedItems\";\r\n        const response = await fetch(url, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            },\r\n            body: JSON.stringify({ ids: ids, pageNumber: pageNumber })\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return PricedItemFactory.ToPricedItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetHistoryItems(accessToken: string, queries: HistoryItemQuery[]): Promise<HistoryItem[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/item/historyItems\";\r\n        const response = await fetch(url, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            },\r\n            body: JSON.stringify(queries)\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok)\r\n            return HistoryItemFactory.ToHistoryItems(result);\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemLists(accessToken: string) : Promise<ItemList[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getLists\";\r\n        const response = await fetch(url, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            }\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemLists;\r\n            const itemLists: ItemList[] = [];\r\n            items.forEach((item: any) => {\r\n                const itemList: ItemList = {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n                \r\n                itemLists.push(itemList);\r\n            });\r\n\r\n            return itemLists;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n\r\n    public async GetItemList(accessToken: string, id: string) : Promise<number[] | null> {\r\n        const url = environment.urls.gw2calculator + \"/list/getList/\" + id;\r\n        const response = await fetch(url, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${accessToken}`\r\n            }\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n            const items = result.itemIds;\r\n            const itemIds: number[] = [];\r\n            items.forEach((id: any) => {\r\n                const idNum = parseInt(id);\r\n                itemIds.push(idNum);\r\n            });\r\n\r\n            return itemIds;\r\n        }\r\n\r\n        console.log(result);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default new ApiService();","export enum ItemRarity {\r\n    None = 0,\r\n    Junk = 1,\r\n    Basic = 2,\r\n    Fine = 4,\r\n    Masterwork = 8,\r\n    Rare = 16,\r\n    Exotic = 32,\r\n    Ascended = 64,\r\n    Legendary = 128,\r\n    All = 255\r\n}","export enum ItemType {\r\n    None = 0,\r\n    Armor = 1,\r\n    Back = 2,\r\n    Bag = 4,\r\n    Consumable = 8,\r\n    Container = 16,\r\n    CraftingMaterial = 32,\r\n    Gathering = 64,\r\n    Gizmo = 128,\r\n    Key = 256,\r\n    MiniPet = 512,\r\n    Tool = 1024,\r\n    Trait = 2048,\r\n    Trinket = 4096,\r\n    Trophy = 8192,\r\n    UpgradeComponent = 16384,\r\n    Weapon = 32768,\r\n    All = 65535\r\n}","import Dexie from \"dexie\";\r\nimport { HistoryItem, HistoryItemPrices } from \"../dataContracts/HistoryItem\";\r\nimport { ItemPriceSnapshot } from \"../dataContracts/ItemPriceSnapshot\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nclass LocalDB extends Dexie {\r\n    private historyItemPrices: Dexie.Table<HistoryItemPrices, number>;\r\n\r\n    constructor() {\r\n        super(\"GW2History\");\r\n\r\n        this.version(1).stores({\r\n            historyItemPrices: \"Id\"\r\n        });\r\n        this.open().catch(error => {\r\n            console.error(`Opening the db '${this.name}' failed: ${error}`);\r\n        });\r\n\r\n        this.historyItemPrices = this.table(\"historyItemPrices\");\r\n        this.historyItemPrices.mapToClass(HistoryItemPrices);\r\n    }\r\n\r\n    async getHistoryItemPrices(id: number, timespan: HistoryTimespan): Promise<ItemPriceSnapshot[] | null> {\r\n        const item = await this.historyItemPrices.get(id);\r\n        if (!item)\r\n            return null;\r\n        \r\n        if (timespan === HistoryTimespan.OneWeek)\r\n            return item.History;\r\n\r\n        let items: ItemPriceSnapshot[] = [];\r\n        const now = new Date();\r\n        let timeFromNow: number;\r\n        switch (timespan) {\r\n        case HistoryTimespan.OneHour:\r\n            timeFromNow = now.setDate(now.getTime() - (1 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.SixHours:\r\n            timeFromNow = now.setDate(now.getTime() - (6 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.TwelveHours:\r\n            timeFromNow = now.setDate(now.getTime() - (12 * 60 * 60 * 1000));\r\n            break;\r\n        case HistoryTimespan.OneDay:\r\n            timeFromNow = now.setDate(now.getDate() - 1);\r\n            break;\r\n        case HistoryTimespan.ThreeDays:\r\n            timeFromNow = now.setDate(now.getDate() - 3);\r\n            break;\r\n        default:\r\n            timeFromNow = now.setDate(now.getDate() - 7);\r\n            break;\r\n        }\r\n        \r\n        item.History.forEach(price => {\r\n            if (price.time >= timeFromNow)\r\n                items.push(price);\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    async getNewestTime(id: number): Promise<number> {\r\n        const history = await this.getHistoryItemPrices(id, HistoryTimespan.OneWeek);\r\n        if (!history)\r\n            return 0;\r\n        \r\n        return history[0].time;\r\n    }\r\n\r\n    async setHistoryItemPrices(id: number, newHistory: ItemPriceSnapshot[]) {\r\n        const item = await this.historyItemPrices.get(id);\r\n        if (!item) {\r\n            // If no item exists, just create a new item with the given id and history\r\n            const newItem = new HistoryItemPrices(id, newHistory);\r\n            await this.historyItemPrices.add(newItem, newItem.Id);\r\n\r\n            return;\r\n        }\r\n\r\n        // Else, update the history of the current item to include the new history\r\n        // Unshift (push to front) here because history is sorted by time descending,\r\n        // and the higher the time value, the newer it is.\r\n        item.History.unshift(...newHistory);\r\n        await this.historyItemPrices.update(id, {History: item.History});\r\n    }\r\n\r\n    async deleteOldPrices(id: number) {\r\n        const item = await this.historyItemPrices.get(id);\r\n        if (!item)\r\n            return;\r\n        \r\n        const currentPrices: ItemPriceSnapshot[] = [];\r\n        const now: Date = new Date();\r\n        const weekFromNow: number = now.setDate(now.getDate() - 7);\r\n        item.History.forEach(price => {\r\n            if (price.time >= weekFromNow)\r\n                currentPrices.push(price);\r\n        });\r\n\r\n        await this.historyItemPrices.update(id, {History: currentPrices});\r\n    }\r\n}\r\n\r\nexport default new LocalDB();","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemComparisonSlot from \"../components/ItemComparisonSlot\";\r\nimport ListSortingBar from \"../components/ListSortingBar\";\r\nimport SortingBar from \"../components/SortingBar\";\r\nimport { HistoryItemQuery } from \"../dataContracts/HistoryItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport { HistoryTimespan } from \"../utils/HistoryTimespan\";\r\n\r\nexport type MyListProps = {\r\n    listId: string;\r\n}\r\n\r\nexport type MyListState = {\r\n    id: string,\r\n    user: User | undefined;\r\n    items: PricedItem[];\r\n    timespan: HistoryTimespan;\r\n}\r\n\r\nexport default class MyList extends React.Component<MyListProps, MyListState> {\r\n    constructor(props: MyListProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            user: undefined,\r\n            /*[19721, 46736, 46738, 46739, 72224, 9576, 24277, 67015],*/\r\n            items: [],\r\n            timespan: HistoryTimespan.OneWeek\r\n        };\r\n\r\n        this.getItems = this.getItems.bind(this);\r\n        this.setTimespan = this.setTimespan.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTimespan(this.state.timespan);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { listId } = this.props;\r\n        const { id, timespan } = this.state;\r\n        if (id !== listId)\r\n            this.setState({id: listId}, () => {\r\n                this.setTimespan(timespan);\r\n            });\r\n    }\r\n\r\n    async setTimespan(timespan: HistoryTimespan) {\r\n        const items = await this.getItems(timespan);\r\n        this.setState({items, timespan});\r\n    }\r\n\r\n    async getItems(timespan: HistoryTimespan): Promise<PricedItem[]> {\r\n        const { user, id } = this.state;\r\n\r\n        if (!user)\r\n            return [];\r\n\r\n        const ids = await ApiService.GetItemList(user.access_token, id);\r\n        if (!ids)\r\n            return [];\r\n\r\n        const historyItemQueries: HistoryItemQuery[] = [];\r\n        for (var i = 0; i < ids.length; i++) {\r\n            const id = ids[i];\r\n            const newest = await LocalDB.getNewestTime(id);\r\n            historyItemQueries.push(new HistoryItemQuery(id, newest));\r\n        }\r\n\r\n        const historyItems = await ApiService.GetHistoryItems(user.access_token, historyItemQueries);\r\n        if (!historyItems)\r\n            return [];\r\n\r\n        const pricedItems: PricedItem[] = [];\r\n        for (var i = 0; i < historyItems.length; i++) {\r\n            const item = historyItems[i];\r\n            await LocalDB.deleteOldPrices(item.Id);\r\n            await LocalDB.setHistoryItemPrices(item.Id, item.History);\r\n\r\n            const prices = await LocalDB.getHistoryItemPrices(item.Id, timespan);\r\n            if (!prices || prices.length <= 0) {\r\n                const pricedItem: PricedItem = {\r\n                    Id: item.Id,\r\n                    ChatLink: item.ChatLink,\r\n                    Name: item.Name,\r\n                    Icon: item.Icon,\r\n                    Description: item.Description,\r\n                    Type: item.Type,\r\n                    Rarity: item.Rarity,\r\n                    Level: item.Level,\r\n                \r\n                    BuyPrice: 0,\r\n                    SellPrice: 0,\r\n                    Appeal: 0,\r\n                    Margin: 0,\r\n                    Sold: 0,\r\n                    Bought: 0\r\n                };\r\n                pricedItems.push(pricedItem);\r\n\r\n                continue;\r\n            }\r\n            \r\n            const newestPrice = prices[0];\r\n            console.log(newestPrice);\r\n            console.log(newestPrice.buyPrice);\r\n            const buyPrice = newestPrice.buyPrice;\r\n            const sellPrice = newestPrice.sellPrice;\r\n            const margin = (sellPrice - buyPrice) / sellPrice * 100;\r\n            let sumSold: number = 0;\r\n            let sumBought: number = 0;\r\n            prices.forEach(price => {\r\n                sumSold += price.sold;\r\n                sumBought += price.bought;\r\n            });\r\n\r\n            const avgSold = sumSold / prices.length;\r\n            const avgBought = sumBought / prices.length;\r\n\r\n            const appeal = margin > 15 ? margin * avgSold * avgBought : 0;\r\n\r\n            const pricedItem: PricedItem = {\r\n                Id: item.Id,\r\n                ChatLink: item.ChatLink,\r\n                Name: item.Name,\r\n                Icon: item.Icon,\r\n                Description: item.Description,\r\n                Type: item.Type,\r\n                Rarity: item.Rarity,\r\n                Level: item.Level,\r\n            \r\n                BuyPrice: buyPrice,\r\n                SellPrice: sellPrice,\r\n                Appeal: appeal,\r\n                Margin: margin,\r\n                Sold: avgSold,\r\n                Bought: avgBought\r\n            };\r\n\r\n            pricedItems.push(pricedItem);\r\n        }\r\n\r\n        return pricedItems;\r\n    }\r\n\r\n    render() {\r\n        const { items, timespan } = this.state;\r\n\r\n        return (\r\n            <div className=\"main w-full px-4 py-4 bg-gray-800\">\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser});\r\n                            \r\n                        return(\r\n                            <></>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n                <ListSortingBar items={items} name=\"Tracked Items\">\r\n                    {sortedItems => (\r\n                        <Scrollbar noScrollX style={{height: \"calc(100vh - 11rem)\"}}>\r\n                            {sortedItems.map((value, index) => (\r\n                                <div key={index} className=\"mb-2\">\r\n                                    <ItemComparisonSlot item={value} />\r\n                                </div>\r\n                            ))}\r\n                        </Scrollbar>\r\n                    )}\r\n                </ListSortingBar>\r\n                \r\n                {/*\r\n                <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                <div className=\"block\">\r\n                    <div id=\"head\" className=\"\">\r\n                        <div className=\"flex flex-row flex-wrap\">\r\n                            <div className=\"font-bold\">Name</div>\r\n                            <div className=\"font-bold\">Buys</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"body\" className=\"\">\r\n\r\n                    </div>\r\n                </div>\r\n                */}\r\n\r\n                {/*\r\n                <table className=\"table-fixed w-full\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"w-2/8\">Name</th>\r\n                            <th className=\"w-1/8\">Buys</th>\r\n                            <th className=\"w-1/8\">Sells</th>\r\n                            <th className=\"w-1/8\">Fee</th>\r\n                            <th className=\"w-1/8\">Appeal</th>\r\n                            <th className=\"w-1/8\">Margin</th>\r\n                            <th className=\"w-1/8\">Transaction Rate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ItemComparisonSlot item={{ Id: 19721, Name: \"Glob of Ectoplasm\", Icon: \"https://render.guildwars2.com/file/18CE5D78317265000CF3C23ED76AB3CEE86BA60E/65941.png\", BuyPrice: 2022, SellPrice: 2232, Fee: Math.ceil(2232 * 0.15), AppealValue: 0, Margin: 0, TransactionRate: 0 }} />\r\n                    </tbody>\r\n                </table>\r\n                */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"w-full bg-gray-800 text-gray-200\"></div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport Price from \"./Price\";\r\n\r\nexport type ItemSummarySlotProps = {\r\n    item: PricedItem;\r\n}\r\n\r\nexport type ItemSummarySlotState = {\r\n\r\n}\r\n\r\nexport default class ItemSummarySlot extends React.Component<ItemSummarySlotProps, ItemSummarySlotState> {\r\n    constructor(props: ItemSummarySlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props;\r\n\r\n        return(\r\n            <div className=\"flex flex-row px-4 py-2 bg-gray-700\">\r\n                <div className=\"flex flex-row w-2/8 items-center mr-6\">\r\n                    <img src={item.Icon} alt={item.Name} className=\"mr-4 w-12 h-12\"/>\r\n                    <span className=\"italic text-gray-200\">{item.Name}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Buys</label>\r\n                    <Price price={item.BuyPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Sells</label>\r\n                    <Price price={item.SellPrice} />\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Margin</label>\r\n                    <span className={`${item.Margin > 15 ? \"text-green-500\" : \"text-red-500\"}`}>{item.Margin}%</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Recent Sold</label>\r\n                    <span className=\"\">{item.Sold}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-1/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Recent Bought</label>\r\n                    <span className=\"\">{item.Bought}</span>\r\n                </div>\r\n                <div className=\"flex flex-col w-2/12 items-center\">\r\n                    <label htmlFor=\"\" className=\"text-sm mb-1 font-bold text-gray-500\">Appeal Score</label>\r\n                    <span className=\"\">{item.Appeal}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\nimport { ItemRarity } from \"../utils/ItemRarity\";\r\nimport { ItemType } from \"../utils/ItemType\";\r\n\r\nexport class ItemQuery {\r\n    public name: string;\r\n    public type: ItemType;\r\n    public rarity: ItemRarity;\r\n    public minLevel: number;\r\n    public maxLevel: number;\r\n    public minBuyPrice: number;\r\n    public maxBuyPrice: number;\r\n    public minSellPrice: number;\r\n    public maxSellPrice: number;\r\n    public sortBy: ItemField;\r\n    public sortDirection: ItemFieldSort;\r\n\r\n    constructor(options?: ItemQueryOptions) {\r\n        this.name = options?.name ?? \"\";\r\n        this.type = options?.type ?? ItemType.All;\r\n        this.rarity = options?.rarity ?? ItemRarity.All;\r\n        this.minLevel = options?.minLevel ?? 0;\r\n        this.maxLevel = options?.maxLevel ?? 80;\r\n        this.minBuyPrice = options?.minBuyPrice ?? 0;\r\n        this.maxBuyPrice = options?.maxBuyPrice ?? 100000000;\r\n        this.minSellPrice = options?.minSellPrice ?? 10000;\r\n        this.maxSellPrice = options?.maxSellPrice ?? 100000000;\r\n        this.sortBy = options?.sortBy ?? ItemField.Appeal;\r\n        this.sortDirection = options?.sortDirection ?? ItemFieldSort.Descending;\r\n    }\r\n\r\n    toObject(): { [key: string]: string } {\r\n        return {\r\n            name: this.name,\r\n            type: this.type.valueOf().toString(),\r\n            rarity: this.rarity.valueOf().toString(),\r\n            minLevel: this.minLevel.toString(),\r\n            maxLevel: this.maxLevel.toString(),\r\n            minBuyPrice: this.minBuyPrice.toString(),\r\n            maxBuyPrice: this.maxBuyPrice.toString(),\r\n            minSellPrice: this.minSellPrice.toString(),\r\n            maxSellPrice: this.maxSellPrice.toString(),\r\n            sortBy: this.sortBy.valueOf().toString(),\r\n            sortDirection: this.sortDirection.valueOf().toString()\r\n        };\r\n    }\r\n}\r\n\r\nexport interface ItemQueryOptions {\r\n    name?: string;\r\n    type?: ItemType;\r\n    rarity?: ItemRarity;\r\n    minLevel?: number;\r\n    maxLevel?: number;\r\n    minBuyPrice?: number;\r\n    maxBuyPrice?: number;\r\n    minSellPrice?: number;\r\n    maxSellPrice?: number;\r\n    sortBy?: ItemField;\r\n    sortDirection?: ItemFieldSort;\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport { ItemQuery, ItemQueryOptions } from \"../dataContracts/ItemQuery\";\r\nimport { PricedItem } from \"../dataContracts/PricedItem\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport { ItemField, ItemFieldSort } from \"../utils/ItemField\";\r\n\r\nexport type SortingBarProps = {\r\n    name: string;\r\n    children?: (sortedItems: PricedItem[]) => React.ReactNode | null;\r\n}\r\n\r\nexport type SortingBarState = {\r\n    user: User | undefined;\r\n    items: PricedItem[];\r\n    sortBy: ItemField;\r\n    sortDirection: ItemFieldSort;\r\n    searchStr: string;\r\n}\r\n\r\nexport default class SortingBar extends React.Component<SortingBarProps, SortingBarState> {\r\n    constructor(props: SortingBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            items: [],\r\n            sortBy: ItemField.Appeal,\r\n            sortDirection: ItemFieldSort.Descending,\r\n            searchStr: \"\"\r\n        };\r\n\r\n        this.updateItems = this.updateItems.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onSortDirection = this.onSortDirection.bind(this);\r\n        this.getItems = this.getItems.bind(this);\r\n    }\r\n\r\n    private async updateItems() {\r\n        var items = await this.getItems();\r\n        if (items == null)\r\n            return;\r\n\r\n        this.setState({items});\r\n    }\r\n\r\n    private async onSearch(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const { searchStr } = this.state;\r\n\r\n        const items = await this.getItems({name: searchStr});\r\n        if (items == null)\r\n            return;\r\n\r\n        this.setState({items});\r\n    }\r\n\r\n    private async onSort(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        console.log(event.target.value);\r\n        console.log(event.target.value as keyof typeof ItemField);\r\n        const value: ItemField = parseInt(event.target.value) as ItemField;\r\n\r\n        const items = await this.getItems({sortBy: value});\r\n        if (items == null)\r\n            return;\r\n\r\n        this.setState({sortBy: value, items: items});\r\n    }\r\n\r\n    private async onSortDirection() {\r\n        const { sortDirection } = this.state;\r\n        const newDirection: ItemFieldSort = sortDirection === ItemFieldSort.Ascending ? ItemFieldSort.Descending : ItemFieldSort.Ascending;\r\n\r\n        const items = await this.getItems({sortDirection: newDirection});\r\n        if (items == null)\r\n            return;\r\n\r\n        this.setState({sortDirection: newDirection, items: items});\r\n    }\r\n\r\n    private async getItems(options?: ItemQueryOptions): Promise<PricedItem[] | null> {\r\n        const { user, searchStr, sortBy, sortDirection } = this.state;\r\n\r\n        const optionValues: ItemQueryOptions = {\r\n            name: options?.name ?? searchStr,\r\n            sortBy: options?.sortBy ?? sortBy,\r\n            sortDirection: options?.sortDirection ?? sortDirection\r\n        };\r\n\r\n        if (!user)\r\n            return null;\r\n\r\n        return await ApiService.GetItems(user.access_token, new ItemQuery(optionValues), 1);\r\n    }\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        const { items, sortBy, sortDirection, searchStr } = this.state;\r\n\r\n        const isSortAscending: boolean = sortDirection === ItemFieldSort.Ascending;\r\n\r\n        return(\r\n            <>\r\n                <div className=\"flex flex-row justify-between items-center px-4 py-2 mb-4 bg-gray-900 text-gray-500\">\r\n                    <AuthenticationContext.Consumer>\r\n                        {props => {\r\n                            if (props.oidcUser != null && !this.state.user)\r\n                                this.setState({user: props.oidcUser}, () => this.updateItems());\r\n\r\n                            return(\r\n                                <></>\r\n                            );\r\n                        }}\r\n                    </AuthenticationContext.Consumer>\r\n                    <span className=\"\">{name}</span>\r\n                    <div className=\"flex items-center\">\r\n                        <form className=\"flex flex-row mr-4\"\r\n                            onSubmit={this.onSearch}>\r\n                            <input type=\"text\" className=\"pl-2 rounded-l bg-gray-600 text-gray-200\"\r\n                                value={searchStr}\r\n                                onChange={event => this.setState({searchStr: event.target.value})} />\r\n                            <button className=\"flex items-center px-2 rounded-r bg-gray-700 text-gray-300\">\r\n                                <FontAwesomeIcon icon=\"search\" className=\"mr-1 text-xs\" />\r\n                                <span className=\"text-xs\">Search</span>\r\n                            </button>\r\n                        </form>\r\n                        <label htmlFor=\"\" className=\"mr-2 text-sm\">Sort By</label>\r\n                        <select name=\"\" id=\"\" className=\"pl-2 rounded-l h-6 text-sm bg-gray-700 text-gray-300\" \r\n                            value={sortBy} \r\n                            onChange={this.onSort}>\r\n                            <option value={ItemField.Name} className=\"\">{ItemField[ItemField.Name]}</option>\r\n                            <option value={ItemField.Buys} className=\"\">{ItemField[ItemField.Buys]}</option>\r\n                            <option value={ItemField.Sells} className=\"\">{ItemField[ItemField.Sells]}</option>\r\n                            <option value={ItemField.Appeal} className=\"\">{ItemField[ItemField.Appeal]}</option>\r\n                            <option value={ItemField.Margin} className=\"\">{ItemField[ItemField.Margin]}</option>\r\n                            <option value={ItemField.Sold} className=\"\">{ItemField[ItemField.Sold]}</option>\r\n                            <option value={ItemField.Bought} className=\"\">{ItemField[ItemField.Bought]}</option>\r\n                        </select>\r\n                        <button className=\"px-2 mr-4 rounded-r border-l border-gray-800 bg-gray-700 text-gray-300\"\r\n                            onClick={this.onSortDirection}>\r\n                            {(isSortAscending && sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && sortBy !== ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-numeric-down-alt\" />\r\n                            ) ||\r\n                            (isSortAscending && sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-up\" />\r\n                            ) ||\r\n                            (!isSortAscending && sortBy === ItemField.Name &&\r\n                                <FontAwesomeIcon icon=\"sort-alpha-down-alt\" />\r\n                            )}\r\n                        </button>\r\n                        <button className=\"flex items-center rounded bg-gray-700 text-gray-300\" style={{padding: \"0.20rem 0.5rem\"}}>\r\n                            <FontAwesomeIcon icon=\"filter\" className=\"mr-1 text-xs\" />\r\n                            <span className=\"text-xs\">Filter</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {children != null ? children(items): null}\r\n            </>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport ItemSummarySlot from \"../components/ItemSummarySlot\";\r\nimport SortingBar from \"../components/SortingBar\";\r\n\r\nexport type GeneralSearchProps = {\r\n\r\n}\r\n\r\nexport type GeneralSearchState = {\r\n    \r\n}\r\n\r\nexport default class GeneralSearch extends React.Component<GeneralSearchProps, GeneralSearchState> {\r\n    render() {\r\n        return(\r\n            <div className=\"main w-full px-4 py-4 bg-gray-800 text-gray-200\">\r\n                <SortingBar name=\"Results\">\r\n                    {sortedItems => (\r\n                        <Scrollbar noScrollX style={{height: \"calc(100vh - 11rem)\"}}>\r\n                            {sortedItems.map((value, index) => (\r\n                                <div key={index} className=\"mb-2\">\r\n                                    <ItemSummarySlot item={value} />\r\n                                </div>\r\n                            ))}\r\n                        </Scrollbar>\r\n                    )}\r\n                </SortingBar>\r\n            </div>\r\n        );\r\n    }\r\n}","import environment from \"./environment\";\r\n\r\nconst configuration = {\r\n    client_id: \"gw2_calculator_app\",\r\n    response_type: \"id_token token\",\r\n    scope: \"openid email roles profile gw2calculator\",\r\n    automaticSilentRenew: true,\r\n    loadUserInfo: true,\r\n    authority: environment.urls.authority,\r\n    redirect_uri: `${environment.urls.host}/authentication/callback`,\r\n    post_logout_redirect_uri: `${environment.urls.host}/`,\r\n    silent_redirect_uri: `${environment.urls.host}/authentication/silent_callback`\r\n};\r\n\r\nexport default configuration;","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return(\r\n            <header className=\"\" style={{boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.2)\", zIndex: 100}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        return(\r\n                            <div className=\"flex justify-between items-center px-4 bg-indigo-700 text-indigo-200\">\r\n                                <div className=\"flex flex-row items-center\">\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-6 text-lg font-bold hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        GW2 Calculator\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/\">\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/search\">\r\n                                        Search\r\n                                    </Link>\r\n                                    <Link className=\"transition duration-150 ease-in-out mr-3 py-5 px-2 hover:bg-indigo-600 hover:text-indigo-100\"\r\n                                        to=\"/list\">\r\n                                        My List\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                {props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <span className=\"mr-4\">Hello, {props.oidcUser.profile.name}!</span>\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.logout()}>\r\n                                            Logout\r\n                                        </button>\r\n                                    </div>\r\n                                ) ||\r\n                                (!props.oidcUser && (\r\n                                    <div className=\"\">\r\n                                        <button className=\"transition duration-150 ease-in-out px-4 py-1 bg-indigo-800 hover:shadow-lg hover:bg-indigo-900 hover:text-indigo-100\"\r\n                                            onClick={() => props.login()}>\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </header>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport environment from \"../environment\";\r\n\r\nexport type ItemListSlotProps = {\r\n    itemList: ItemList;\r\n}\r\n\r\nexport type ItemListSlotState = {\r\n\r\n}\r\n\r\nexport default class ItemListSlot extends React.Component<ItemListSlotProps, ItemListSlotState> {\r\n    constructor(props: ItemListSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { itemList } = this.props;\r\n\r\n        return(\r\n            <Link className=\"transition duration-150 ease-in-out block px-5 py-3 bg-opacity-25 bg-indigo-700 text-indigo-300 hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer\"\r\n                to={`list/${itemList.id}`}>\r\n                <span className=\"\">{itemList.name}</span>\r\n            </Link>\r\n        );\r\n    }\r\n}","import { AuthenticationContext } from \"@axa-fr/react-oidc-context\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { ItemList } from \"../dataContracts/ItemList\";\r\nimport ApiService from \"../services/ApiService\";\r\nimport ItemListSlot from \"./ItemListSlot\";\r\n\r\nexport type SidebarProps = {\r\n\r\n}\r\n\r\nexport type SidebarState = {\r\n    user: User | undefined;\r\n    itemLists: ItemList[];\r\n}\r\n\r\nexport default class Sidebar extends React.Component<SidebarProps, SidebarState> {\r\n    constructor(props: SidebarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined,\r\n            itemLists: []\r\n        };\r\n\r\n        this.refreshItemLists = this.refreshItemLists.bind(this);\r\n    }\r\n\r\n    async refreshItemLists() {\r\n        const { user } = this.state;\r\n        if (!user)\r\n            return;\r\n\r\n        const itemLists = await ApiService.GetItemLists(user.access_token);\r\n        if (!itemLists)\r\n            return;\r\n\r\n        this.setState({itemLists});\r\n    }\r\n\r\n    render() {\r\n        const { itemLists } = this.state;\r\n\r\n        return(\r\n            <div className=\"sidebar hidden py-4 xl:flex xl:w-1/4 bg-gray-900\" style={{width: \"16rem\"}}>\r\n                <AuthenticationContext.Consumer>\r\n                    {props => {\r\n                        if (props.oidcUser != null && !this.state.user)\r\n                            this.setState({user: props.oidcUser}, () => {\r\n                                this.refreshItemLists();\r\n                            });\r\n\r\n                        return(\r\n                            <Scrollbar noScrollX>\r\n                                {itemLists.map((itemList, index) => (\r\n                                    <div key={index} className=\"mb-2\">\r\n                                        <ItemListSlot itemList={itemList} />\r\n                                    </div>\r\n                                ))}\r\n                            </Scrollbar>\r\n                        );\r\n                    }}\r\n                </AuthenticationContext.Consumer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport MyList from \"./pages/MyList\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport GeneralSearch from \"./pages/GeneralSearch\";\r\nimport { BrowserRouter, Redirect, Route, Switch, useParams } from \"react-router-dom\";\r\nimport { AuthenticationProvider, withOidcSecure } from \"@axa-fr/react-oidc-context\";\r\nimport configuration from \"./open-id-config\";\r\nimport Header from \"./components/Header\";\r\nimport { config } from \"process\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    const afterLogin = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                <span className=\"\">Logging in...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const afterLogout = () => (\r\n        <div className=\"flex justify-center items-center w-screen h-screen bg-gray-700 text-gray-100\">\r\n            <div className=\"flex flex-row items-center\">\r\n                <img src={logo} alt=\"logo\" className=\"App-logo w-12\" />\r\n                <span className=\"\">Logging out...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return(\r\n        <div className=\"flex flex-col\">\r\n            <BrowserRouter>\r\n                <AuthenticationProvider configuration={configuration}\r\n                    callbackComponentOverride={afterLogin}\r\n                    authenticating={afterLogout}>\r\n                    <Header />\r\n                    <Redirect path=\"/authentication/callback\" to=\"/\" />\r\n                    <div className=\"flex flex-row\" style={{height: \"calc(100vh - 4rem)\"}}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Dashboard} />\r\n                            <Route path=\"/search\" component={GeneralSearch} />\r\n                            <Route path=\"/list/:id\" component={MyListComponent} />\r\n                        </Switch>\r\n                        <Sidebar />\r\n                    </div>\r\n                </AuthenticationProvider>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MyListComponent() {\r\n    const { id } = useParams();\r\n\r\n    return(\r\n        <MyList listId={id} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}